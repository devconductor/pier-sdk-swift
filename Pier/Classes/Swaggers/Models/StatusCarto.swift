//
// StatusCarto.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Representa\u00C3\u00A7\u00C3\u00A3o do recurso Status Cart\u00C3\u00A3o */
public class StatusCarto: JSONEncodable {

    /** Quando ativa, indica que ao ser atribu\u00C3\u00ADdo um idStatusCartao com essa caracter\u00C3\u00ADstica, o cart\u00C3\u00A3o ter\u00C3\u00A1 o seu idStatusCartao alterado para o que fora escolhido. Caso contr\u00C3\u00A1rio, o idStatusCartao s\u00C3\u00B3 ser\u00C3\u00A1 alterado ap\u00C3\u00B3s o desbloqueio de um novo cart\u00C3\u00A3o do mesmo Portador e Conta. */
    public var flagAlteraStatus: Int?
    /** Quando ativa, indica que a senha cadastrada ser\u00C3\u00A1 exclu\u00C3\u00ADda no momento do Bloqueio do cart\u00C3\u00A3o com um idStatusCartao que possua essa caracter\u00C3\u00ADstica, sendo ent\u00C3\u00A3o necess\u00C3\u00A1rio o cadastro de uma nova senha. */
    public var flagCadastroNovaSenha: Int?
    /** Quando ativa, indica que cart\u00C3\u00B5es que tiverem um idStatusCartao atribu\u00C3\u00ADdo com essa caracter\u00C3\u00ADstica, e tal cart\u00C3\u00A3o seja de um titular (portador = 1), ter\u00C3\u00A3o a conta a qual o cart\u00C3\u00A3o pertence cancelada. */
    public var flagCancelaConta: Int?
    /** Quando ativa, indica que o cart\u00C3\u00A3o ativo que o portador possuir na mesma conta do cart\u00C3\u00A3o a ser desbloqueado, e que o status dele possua essa caracter\u00C3\u00ADstica, dever\u00C3\u00A1 ser cancelado quando um novo cart\u00C3\u00A3o for desbloqueado. */
    public var flagCancelaNoDesbloqueio: Int?
    /** Quando ativa, indica que cart\u00C3\u00B5es que tiverem um idStatusCartao atribu\u00C3\u00ADdo com essa caracter\u00C3\u00ADstica, incluir\u00C3\u00A3o a cobran\u00C3\u00A7a de uma tarifa para a conta de acordo com os valores definidos nos par\u00C3\u00A2metros do emissor. */
    public var flagCobraTarifa: Int?
    /** Quando ativa, indica que Cart\u00C3\u00B5es com este idStatusCartao podem receber transfer\u00C3\u00AAncias de cr\u00C3\u00A9ditos/d\u00C3\u00A9bitos oriundos de outros cart\u00C3\u00B5es. */
    public var flagDestinoTransferencia: Int?
    /** Quando ativa, indica que poder\u00C3\u00A1 ser criado um novo cart\u00C3\u00A3o provis\u00C3\u00B3rio para o portador. */
    public var flagEmiteProvisorio: Int?
    /** Quando ativa, indica que os Cart\u00C3\u00B5es que tiverem este idStatusCartao atribu\u00C3\u00ADdo dever\u00C3\u00A3o ter a respectiva informa\u00C3\u00A7\u00C3\u00A3o de mudan\u00C3\u00A7a de status inclu\u00C3\u00ADda no arquivo de exce\u00C3\u00A7\u00C3\u00A3o da Bandeira, a fim de manter atualizado o cadastro do cart\u00C3\u00A3o nela para nortear o que fazer com as transa\u00C3\u00A7\u00C3\u00B5es quando o autorizador estiver indispon\u00C3\u00ADvel. */
    public var flagExcecaoBandeira: Int?
    /** Quando ativa, indica que Cart\u00C3\u00B5es com este idStatusCartao podem realizar a transfer\u00C3\u00AAncia de cr\u00C3\u00A9ditos/d\u00C3\u00A9bitos para outros cart\u00C3\u00B5es. */
    public var flagOrigemTransferencia: Int?
    /** Quando ativa, indica que cart\u00C3\u00B5es que tiverem este status atribu\u00C3\u00ADdo ter\u00C3\u00A3o um novo cart\u00C3\u00A3o gerado para o portador, para a mesma conta, automaticamente. */
    public var flagReemiteCartao: Int?
    /** C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Status do Cart\u00C3\u00A3o (id)  */
    public var id: Int?
    /** Indica qual o idStatusCartao que ser\u00C3\u00A1 atribu\u00C3\u00ADdo a conta, caso ela seja cancelada devido ao bloqueio de um cart\u00C3\u00A3o quando for utilizado um idStatusCartao no processo de Bloqueio que possua essa caracter\u00C3\u00ADstica. */
    public var idStatusDestinoConta: Int?
    /** Indica qual o idStatusCartao que que ser\u00C3\u00A1 atribu\u00C3\u00ADdo aos cart\u00C3\u00B5es que forem cancelados devido ao desbloqueio de um novo cart\u00C3\u00A3o. */
    public var idStatusDestinoDesbloqueio: Int?
    /** Nome atribu\u00C3\u00ADdo ao Status de Entrega do Cart\u00C3\u00A3o. */
    public var nome: String?
    

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["flagAlteraStatus"] = self.flagAlteraStatus
        nillableDictionary["flagCadastroNovaSenha"] = self.flagCadastroNovaSenha
        nillableDictionary["flagCancelaConta"] = self.flagCancelaConta
        nillableDictionary["flagCancelaNoDesbloqueio"] = self.flagCancelaNoDesbloqueio
        nillableDictionary["flagCobraTarifa"] = self.flagCobraTarifa
        nillableDictionary["flagDestinoTransferencia"] = self.flagDestinoTransferencia
        nillableDictionary["flagEmiteProvisorio"] = self.flagEmiteProvisorio
        nillableDictionary["flagExcecaoBandeira"] = self.flagExcecaoBandeira
        nillableDictionary["flagOrigemTransferencia"] = self.flagOrigemTransferencia
        nillableDictionary["flagReemiteCartao"] = self.flagReemiteCartao
        nillableDictionary["id"] = self.id
        nillableDictionary["idStatusDestinoConta"] = self.idStatusDestinoConta
        nillableDictionary["idStatusDestinoDesbloqueio"] = self.idStatusDestinoDesbloqueio
        nillableDictionary["nome"] = self.nome
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
