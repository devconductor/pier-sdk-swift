//
// StatusCartaoResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Representa\u00C3\u00A7\u00C3\u00A3o do recurso Status Cart\u00C3\u00A3o */
public class StatusCartaoResponse: JSONEncodable {

    /** C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Status do Cart\u00C3\u00A3o (id)  */
    public var id: Int?
    /** Nome atribu\u00C3\u00ADdo ao Status de Entrega do Cart\u00C3\u00A3o. */
    public var nome: String?
    /** Par\u00C3\u00A2metro que define se o status do cart\u00C3\u00A3o permite a reativa\u00C3\u00A7\u00C3\u00A3o do cart\u00C3\u00A3o, sendo: 0: Inativo e 1: Ativo. */
    public var permiteDesbloquear: Int?
    /** Par\u00C3\u00A2metro que define se o status do cart\u00C3\u00A3o permite a reativa\u00C3\u00A7\u00C3\u00A3o do cart\u00C3\u00A3o, sendo: 0: Inativo e 1: Ativo. */
    public var permiteAtribuirComoBloqueio: Int?
    /** Par\u00C3\u00A2metro que define se o status do cart\u00C3\u00A3o permite a reativa\u00C3\u00A7\u00C3\u00A3o do cart\u00C3\u00A3o, sendo: 0: Inativo e 1: Ativo. */
    public var permiteAtribuirComoCancelamento: Int?
    /** Par\u00C3\u00A2metro que define se o status do cart\u00C3\u00A3o permite a reativa\u00C3\u00A7\u00C3\u00A3o do cart\u00C3\u00A3o, sendo: 0: Inativo e 1: Ativo. */
    public var cobrarTarifaAoEmitirNovaVia: Int?
    

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["nome"] = self.nome
        nillableDictionary["permiteDesbloquear"] = self.permiteDesbloquear
        nillableDictionary["permiteAtribuirComoBloqueio"] = self.permiteAtribuirComoBloqueio
        nillableDictionary["permiteAtribuirComoCancelamento"] = self.permiteAtribuirComoCancelamento
        nillableDictionary["cobrarTarifaAoEmitirNovaVia"] = self.cobrarTarifaAoEmitirNovaVia
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
