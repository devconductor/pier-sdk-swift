//
// ContaHistoricoPagamentoResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Objeto ContaHistoricoPagamentoResponse */
public class ContaHistoricoPagamentoResponse: JSONEncodable {

    /** C\u00F3digo de Identifica\u00E7\u00E3o do Pagamento */
    public var idPagamento: Int?
    /** C\u00F3digo de Identifica\u00E7\u00E3o do Estabelecimento onde o Pagamento foi realizado, quando este for o local de pagamento. */
    public var idEstabelecimento: Int?
    /** C\u00F3digo de Identifica\u00E7\u00E3o da Institui\u00E7\u00E3o Banc\u00E1ria onde o Pagamento foi realizado, quando este for o local de pagamento */
    public var idBanco: Int?
    /** C\u00F3digo de Identifica\u00E7\u00E3o do Cart\u00E3o */
    public var idCartao: Int?
    /** Valor do Pagamento */
    public var valorPagamento: Double?
    /** Data e Hora da realiza\u00E7\u00E3o do Pagamento. Quando feito em Institui\u00E7\u00E3o Banc\u00E1ria, o hor\u00E1rio do pagamento \u00E9 exibido com valor zero */
    public var dataHoraPagamento: String?
    /** Data e Hora em que o registro do Pagamento foi cadastrado */
    public var dataHoraEntradaPagamento: String?
    /** C\u00F3digo de Identifica\u00E7\u00E3o do Status do Pagamento */
    public var status: Int?
    

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["idPagamento"] = self.idPagamento
        nillableDictionary["idEstabelecimento"] = self.idEstabelecimento
        nillableDictionary["idBanco"] = self.idBanco
        nillableDictionary["idCartao"] = self.idCartao
        nillableDictionary["valorPagamento"] = self.valorPagamento
        nillableDictionary["dataHoraPagamento"] = self.dataHoraPagamento
        nillableDictionary["dataHoraEntradaPagamento"] = self.dataHoraEntradaPagamento
        nillableDictionary["status"] = self.status
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
