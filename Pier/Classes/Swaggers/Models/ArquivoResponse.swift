//
// ArquivoResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Objeto Response do arquivo. */
public class ArquivoResponse: JSONEncodable {

    /** C\u00F3digo de identifica\u00E7\u00E3o do arquivo */
    public var id: Int?
    /** C\u00F3digo de identifica\u00E7\u00E3o do Tipo do arquivo */
    public var idTipoArquivo: Int?
    /** Descri\u00E7\u00E3o do tipo do arquivo */
    public var nomeTipoArquivo: String?
    /** C\u00F3digo de identifica\u00E7\u00E3o do Status do arquivo */
    public var idStatusArquivo: Int?
    /** Desci\u00E7\u00E3o do status do arquivo */
    public var nomeStatusArquivo: String?
    /** Nome do arquivo */
    public var nome: String?
    /** Formato/Extens\u00E3o do arquivo */
    public var extensao: String?
    /** Data de inclus\u00E3o do arquivo. */
    public var dataInclusao: String?
    /** Data da \u00FAltima altera\u00E7\u00E3o do aquivo. */
    public var dataAlteracao: String?
    /** Detalhes contendo informa\u00E7\u00F5es adicionais, relacionadas ao arquivo. */
    public var detalhes: [ArquivoParametroResponse]?
    

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["idTipoArquivo"] = self.idTipoArquivo
        nillableDictionary["nomeTipoArquivo"] = self.nomeTipoArquivo
        nillableDictionary["idStatusArquivo"] = self.idStatusArquivo
        nillableDictionary["nomeStatusArquivo"] = self.nomeStatusArquivo
        nillableDictionary["nome"] = self.nome
        nillableDictionary["extensao"] = self.extensao
        nillableDictionary["dataInclusao"] = self.dataInclusao
        nillableDictionary["dataAlteracao"] = self.dataAlteracao
        nillableDictionary["detalhes"] = self.detalhes?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
