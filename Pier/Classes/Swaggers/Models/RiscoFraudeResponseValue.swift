//
// RiscoFraudeResponseValue.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** {{{risco_fraude_response_description}}} */
public class RiscoFraudeResponseValue: JSONEncodable {

    /** {{{risco_fraude_response_id_value}}} */
    public var id: Int?
    /** {{{risco_fraude_response_id_tipo_resolucao_value}}} */
    public var idTipoResolucao: Int?
    /** {{{risco_fraude_response_descricao_tipo_resolucao_value}}} */
    public var descricaoTipoResolucao: String?
    /** {{{risco_fraude_response_flag_alto_risco_value}}} */
    public var flagAltoRisco: Bool?
    /** {{{risco_fraude_response_id_conta_value}}} */
    public var idConta: Int?
    /** {{{risco_fraude_response_id_cartao_value}}} */
    public var idCartao: Int?
    /** {{{risco_fraude_response_id_transacao_value}}} */
    public var idTransacao: Int?
    /** {{{risco_fraude_response_data_transacao_value}}} */
    public var dataTransacao: String?
    /** {{{risco_fraude_response_valor_transacao_value}}} */
    public var valorTransacao: Double?
    /** {{{risco_fraude_response_nome_estabelecimento_value}}} */
    public var nomeEstabelecimento: String?
    

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["idTipoResolucao"] = self.idTipoResolucao
        nillableDictionary["descricaoTipoResolucao"] = self.descricaoTipoResolucao
        nillableDictionary["flagAltoRisco"] = self.flagAltoRisco
        nillableDictionary["idConta"] = self.idConta
        nillableDictionary["idCartao"] = self.idCartao
        nillableDictionary["idTransacao"] = self.idTransacao
        nillableDictionary["dataTransacao"] = self.dataTransacao
        nillableDictionary["valorTransacao"] = self.valorTransacao
        nillableDictionary["nomeEstabelecimento"] = self.nomeEstabelecimento
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
