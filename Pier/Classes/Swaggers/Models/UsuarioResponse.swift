//
// UsuarioResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** {{{usuario_response_description}}} */
public class UsuarioResponse: JSONEncodable {

    public enum Status: String { 
        case Inativo = "INATIVO"
        case Ativo = "ATIVO"
    }
    
    /** {{{usuario_response_id_value}}} */
    public var id: Int?
    /** {{{usuario_response_nome_value}}} */
    public var nome: String?
    /** {{{usuario_response_login_value}}} */
    public var login: String?
    /** {{{usuario_response_id_emissor_value}}} */
    public var idEmissor: Int?
    /** {{{usuario_response_cpf_value}}} */
    public var cpf: String?
    /** {{{usuario_response_email_value}}} */
    public var email: String?
    /** {{{usuario_response_status_value}}} */
    public var status: Status?
    /** {{{usuario_response_data_criacao_value}}} */
    public var dataCriacao: String?
    /** {{{usuario_response_data_modificacao_value}}} */
    public var dataModificacao: String?
    /** {{{usuario_response_tentativas_incorretas_value}}} */
    public var tentativasIncorretas: Int?
    /** {{{usuario_response_bloquear_acesso_descricao}}} */
    public var bloquearAcesso: Bool?
    

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["nome"] = self.nome
        nillableDictionary["login"] = self.login
        nillableDictionary["idEmissor"] = self.idEmissor
        nillableDictionary["cpf"] = self.cpf
        nillableDictionary["email"] = self.email
        nillableDictionary["status"] = self.status?.rawValue
        nillableDictionary["dataCriacao"] = self.dataCriacao
        nillableDictionary["dataModificacao"] = self.dataModificacao
        nillableDictionary["tentativasIncorretas"] = self.tentativasIncorretas
        nillableDictionary["bloquearAcesso"] = self.bloquearAcesso
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
