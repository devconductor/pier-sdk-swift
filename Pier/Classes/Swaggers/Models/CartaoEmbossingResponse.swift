//
// CartaoEmbossingResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** {{{cartao_embossing_response_description}}} */
public class CartaoEmbossingResponse: JSONEncodable {

    /** {{{cartao_embossing_response_flag_virtual_value}}} */
    public var flagVirtual: Int?
    /** {{{cartao_embossing_response_id_conta_value}}} */
    public var idConta: Int?
    /** {{{cartao_embossing_response_id_pessoa_value}}} */
    public var idPessoa: Int?
    /** {{{cartao_embossing_response_id_cartao_value}}} */
    public var idCartao: Int?
    /** {{{cartao_embossing_response_id_bandeira_value}}} */
    public var idBandeira: Int?
    /** {{{cartao_embossing_response_id_tipo_cartao_value}}} */
    public var idTipoCartao: Int?
    /** {{{cartao_embossing_response_data_geracao_value}}} */
    public var dataGeracao: String?
    /** {{{cartao_embossing_response_data_validade_value}}} */
    public var dataValidade: String?
    /** {{{cartao_embossing_response_nome_origem_comercial_value}}} */
    public var nomeOrigemComercial: String?
    /** {{{cartao_embossing_response_cpf_value}}} */
    public var cpf: String?
    

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["flagVirtual"] = self.flagVirtual
        nillableDictionary["idConta"] = self.idConta
        nillableDictionary["idPessoa"] = self.idPessoa
        nillableDictionary["idCartao"] = self.idCartao
        nillableDictionary["idBandeira"] = self.idBandeira
        nillableDictionary["idTipoCartao"] = self.idTipoCartao
        nillableDictionary["dataGeracao"] = self.dataGeracao
        nillableDictionary["dataValidade"] = self.dataValidade
        nillableDictionary["nomeOrigemComercial"] = self.nomeOrigemComercial
        nillableDictionary["cpf"] = self.cpf
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
