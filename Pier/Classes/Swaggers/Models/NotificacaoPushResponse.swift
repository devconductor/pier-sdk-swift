//
// NotificacaoPushResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class NotificacaoPushResponse: JSONEncodable {

    public enum TipoEvento: String { 
        case RiscoFraude = "RISCO_FRAUDE"
        case CodigoSeguranca = "CODIGO_SEGURANCA"
        case Outros = "OUTROS"
    }
    
    public enum Status: String { 
        case Pendente = "PENDENTE"
        case Encaminhado = "ENCAMINHADO"
        case Enviado = "ENVIADO"
        case Respondido = "RESPONDIDO"
        case Erro = "ERRO"
        case ErroResposta = "ERRO_RESPOSTA"
        case SucessoResposta = "SUCESSO_RESPOSTA"
    }
    
    public enum Plataforma: String { 
        case Apns = "APNS"
        case Fcm = "FCM"
        case Gcm = "GCM"
    }
    
    /** Apresenta a data e em que o registro foi enviado para o dispositivo. */
    public var dataEnvio: String?
    /** C\u00F3digo de identifica\u00E7\u00E3o do emissor (id). */
    public var idEmissor: Int?
    /** Nome do tipoEvento da notifica\u00E7\u00E3o */
    public var tipoEvento: TipoEvento?
    /** Status de envio da notifica\u00E7\u00E3o */
    public var status: Status?
    /** C\u00F3digo identificado da pessoa */
    public var idPessoa: Int?
    /** C\u00F3digo identificador da conta */
    public var idConta: Int?
    /** Token do dispositivo a qual foi destinado a notifica\u00E7\u00E3o (device_token) */
    public var tokenDispositivo: String?
    /** T\u00EDtulo da notifica\u00E7\u00E3o enviada. */
    public var titulo: String?
    /** Conte\u00FAdo da notifica\u00E7\u00E3o enviada. */
    public var conteudo: String?
    /** Nome do Sistema Operacional a qual foi enviado o Push. */
    public var plataforma: Plataforma?
    /** N\u00FAmero do protocolo de envio de notifica\u00E7\u00F5es */
    public var protocolo: String?
    

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["dataEnvio"] = self.dataEnvio
        nillableDictionary["idEmissor"] = self.idEmissor
        nillableDictionary["tipoEvento"] = self.tipoEvento?.rawValue
        nillableDictionary["status"] = self.status?.rawValue
        nillableDictionary["idPessoa"] = self.idPessoa
        nillableDictionary["idConta"] = self.idConta
        nillableDictionary["tokenDispositivo"] = self.tokenDispositivo
        nillableDictionary["titulo"] = self.titulo
        nillableDictionary["conteudo"] = self.conteudo
        nillableDictionary["plataforma"] = self.plataforma?.rawValue
        nillableDictionary["protocolo"] = self.protocolo
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
