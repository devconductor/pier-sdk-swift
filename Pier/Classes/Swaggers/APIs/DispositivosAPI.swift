//
// DispositivosAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class DispositivosAPI: APIBase {
    /**
     
     Ativa Dispositivo
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Plataforma (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func ativarUsingPOST(id id: Int, completion: ((data: Dispositivo?, error: ErrorType?) -> Void)) {
        ativarUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Ativa Dispositivo
     
     - POST /api/dispositivos/{id}/ativar-dispositivo
     - Esse recurso permite ativar dispositivo.
     - examples: [{contentType=application/json, example={
  "idAplicacaoMobile" : 123456789,
  "idUsuario" : 123456789,
  "id" : 123456789,
  "token" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Plataforma (id). 

     - returns: RequestBuilder<Dispositivo> 
     */
    public class func ativarUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<Dispositivo> {
        var path = "/api/dispositivos/{id}/ativar-dispositivo"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<Dispositivo>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Desativa Dispositivo
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Plataforma (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desativarUsingPOST(id id: Int, completion: ((data: Dispositivo?, error: ErrorType?) -> Void)) {
        desativarUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Desativa Dispositivo
     
     - POST /api/dispositivos/{id}/desativar-dispositivo
     - Esse recurso permite desativar dispositivo.
     - examples: [{contentType=application/json, example={
  "idAplicacaoMobile" : 123456789,
  "idUsuario" : 123456789,
  "id" : 123456789,
  "token" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Plataforma (id). 

     - returns: RequestBuilder<Dispositivo> 
     */
    public class func desativarUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<Dispositivo> {
        var path = "/api/dispositivos/{id}/desativar-dispositivo"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<Dispositivo>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Lista os dispositivos cadastrados
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 100, Max = 100) (optional)
     - parameter token: (query) Token do Dispositivo (optional)
     - parameter idUsuario: (query) Identificador do Usu\u00C3\u00A1rio (optional)
     - parameter idAplicacaoMobile: (query) Identificador da aplica\u00C3\u00A7\u00C3\u00A3o (optional)
     - parameter dataCriacao: (query) Apresenta a data e em que o registro foi criado. (optional)
     - parameter dataDesativacao: (query) Apresenta a data e em que o registro foi desativado. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET5(page page: Int?, limit: Int?, token: String?, idUsuario: Int?, idAplicacaoMobile: Int?, dataCriacao: NSDate?, dataDesativacao: NSDate?, completion: ((data: PageDispositivos?, error: ErrorType?) -> Void)) {
        listarUsingGET5WithRequestBuilder(page: page, limit: limit, token: token, idUsuario: idUsuario, idAplicacaoMobile: idAplicacaoMobile, dataCriacao: dataCriacao, dataDesativacao: dataDesativacao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista os dispositivos cadastrados
     
     - GET /api/dispositivos
     - Este m\u00C3\u00A9todo permite que sejam listados os dispositivos existentes na base do PIER.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idAplicacaoMobile" : 123456789,
    "idUsuario" : 123456789,
    "id" : 123456789,
    "token" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 100, Max = 100) (optional)
     - parameter token: (query) Token do Dispositivo (optional)
     - parameter idUsuario: (query) Identificador do Usu\u00C3\u00A1rio (optional)
     - parameter idAplicacaoMobile: (query) Identificador da aplica\u00C3\u00A7\u00C3\u00A3o (optional)
     - parameter dataCriacao: (query) Apresenta a data e em que o registro foi criado. (optional)
     - parameter dataDesativacao: (query) Apresenta a data e em que o registro foi desativado. (optional)

     - returns: RequestBuilder<PageDispositivos> 
     */
    public class func listarUsingGET5WithRequestBuilder(page page: Int?, limit: Int?, token: String?, idUsuario: Int?, idAplicacaoMobile: Int?, dataCriacao: NSDate?, dataDesativacao: NSDate?) -> RequestBuilder<PageDispositivos> {
        let path = "/api/dispositivos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "token": token,
            "idUsuario": idUsuario,
            "idAplicacaoMobile": idAplicacaoMobile,
            "dataCriacao": dataCriacao,
            "dataDesativacao": dataDesativacao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageDispositivos>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Cadastra Dispositivo
     
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST3(persist persist: DispositivoPersist, completion: ((data: Dispositivo?, error: ErrorType?) -> Void)) {
        salvarUsingPOST3WithRequestBuilder(persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Cadastra Dispositivo
     
     - POST /api/dispositivos
     - Esse recurso permite cadastrar dispositivos.
     - examples: [{contentType=application/json, example={
  "idAplicacaoMobile" : 123456789,
  "idUsuario" : 123456789,
  "id" : 123456789,
  "token" : "aeiou"
}}]
     
     - parameter persist: (body) persist 

     - returns: RequestBuilder<Dispositivo> 
     */
    public class func salvarUsingPOST3WithRequestBuilder(persist persist: DispositivoPersist) -> RequestBuilder<Dispositivo> {
        let path = "/api/dispositivos"
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<Dispositivo>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
