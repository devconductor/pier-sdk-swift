//
// GlobaltagcadastroclienteAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltagcadastroclienteAPI: APIBase {
    /**
     
     {{{adicional_resource_alterar}}}
     
     - parameter id: (path) {{{adicional_resource_alterar_param_id_conta}}} 
     - parameter idPessoa: (path) {{{adicional_resource_alterar_param_id_pessoa}}} 
     - parameter adicionalUpdate: (body) adicionalUpdate 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT(id id: Int, idPessoa: Int, adicionalUpdate: AdicionalUpdate, completion: ((data: AdicionalDetalheResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUTWithRequestBuilder(id: id, idPessoa: idPessoa, adicionalUpdate: adicionalUpdate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{adicional_resource_alterar}}}
     
     - PUT /api/contas/{id}/adicionais/{idPessoa}
     - {{{adicional_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroIdentidade" : "aeiou",
  "idEstadoCivil" : 123456789,
  "idConta" : 123456789,
  "numeroReceitaFederal" : "aeiou",
  "idProfissao" : 123456789,
  "idParentesco" : 123456789,
  "nome" : "aeiou",
  "telefones" : [ {
    "idPessoa" : 123456789,
    "telefone" : "aeiou",
    "ddd" : "aeiou",
    "idTipoTelefone" : 123456789,
    "id" : 123456789,
    "ramal" : "aeiou",
    "status" : 123
  } ],
  "orgaoExpedidorIdentidade" : "aeiou",
  "flagAtivo" : 1,
  "idNacionalidade" : 123456789,
  "idPessoa" : 123456789,
  "dataCancelamentoPortador" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "unidadeFederativaIdentidade" : "aeiou",
  "dataCadastroPortador" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "nomeImpresso" : "aeiou",
  "dataNascimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sexo" : "aeiou",
  "dataEmissaoIdentidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "email" : "aeiou"
}}]
     
     - parameter id: (path) {{{adicional_resource_alterar_param_id_conta}}} 
     - parameter idPessoa: (path) {{{adicional_resource_alterar_param_id_pessoa}}} 
     - parameter adicionalUpdate: (body) adicionalUpdate 

     - returns: RequestBuilder<AdicionalDetalheResponse> 
     */
    public class func alterarUsingPUTWithRequestBuilder(id id: Int, idPessoa: Int, adicionalUpdate: AdicionalUpdate) -> RequestBuilder<AdicionalDetalheResponse> {
        var path = "/api/contas/{id}/adicionais/{idPessoa}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idPessoa}", withString: "\(idPessoa)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = adicionalUpdate.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AdicionalDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{pessoa_detalhe_resource_alterar}}}
     
     - parameter id: (path) {{{pessoa_detalhe_resource_alterar_param_id}}} 
     - parameter nomeMae: (query) {{{pessoa_detalhe_update_nome_mae_value}}} (optional)
     - parameter idEstadoCivil: (query) {{{pessoa_detalhe_update_id_estado_civil_value}}} (optional)
     - parameter idProfissao: (query) {{{pessoa_detalhe_update_id_profissao_value}}} (optional)
     - parameter idNaturezaOcupacao: (query) {{{pessoa_detalhe_update_id_natureza_ocupacao_value}}} (optional)
     - parameter idNacionalidade: (query) {{{pessoa_detalhe_update_id_nacionalidade_value}}} (optional)
     - parameter numeroBanco: (query) {{{pessoa_detalhe_update_numero_banco_value}}} (optional)
     - parameter numeroAgencia: (query) {{{pessoa_detalhe_update_numero_agencia_value}}} (optional)
     - parameter numeroContaCorrente: (query) {{{pessoa_detalhe_update_numero_conta_corrente_value}}} (optional)
     - parameter email: (query) {{{pessoa_detalhe_update_email_value}}} (optional)
     - parameter nomeEmpresa: (query) {{{pessoa_detalhe_update_nome_empresa_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT15(id id: Int, nomeMae: String?, idEstadoCivil: Int?, idProfissao: String?, idNaturezaOcupacao: Int?, idNacionalidade: Int?, numeroBanco: Int?, numeroAgencia: Int?, numeroContaCorrente: String?, email: String?, nomeEmpresa: String?, completion: ((data: PessoaDetalheResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT15WithRequestBuilder(id: id, nomeMae: nomeMae, idEstadoCivil: idEstadoCivil, idProfissao: idProfissao, idNaturezaOcupacao: idNaturezaOcupacao, idNacionalidade: idNacionalidade, numeroBanco: numeroBanco, numeroAgencia: numeroAgencia, numeroContaCorrente: numeroContaCorrente, email: email, nomeEmpresa: nomeEmpresa).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{pessoa_detalhe_resource_alterar}}}
     
     - PUT /api/pessoas-detalhes/{id}
     - {{{pessoa_detalhe_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "idNacionalidade" : 123456789,
  "numeroBanco" : 123,
  "idPessoa" : 123456789,
  "idEstadoCivil" : 123456789,
  "nomeEmpresa" : "aeiou",
  "idProfissao" : "aeiou",
  "idNaturezaOcupacao" : 123456789,
  "numeroContaCorrente" : "aeiou",
  "numeroAgencia" : 123,
  "nomeMae" : "aeiou",
  "email" : "aeiou"
}}]
     
     - parameter id: (path) {{{pessoa_detalhe_resource_alterar_param_id}}} 
     - parameter nomeMae: (query) {{{pessoa_detalhe_update_nome_mae_value}}} (optional)
     - parameter idEstadoCivil: (query) {{{pessoa_detalhe_update_id_estado_civil_value}}} (optional)
     - parameter idProfissao: (query) {{{pessoa_detalhe_update_id_profissao_value}}} (optional)
     - parameter idNaturezaOcupacao: (query) {{{pessoa_detalhe_update_id_natureza_ocupacao_value}}} (optional)
     - parameter idNacionalidade: (query) {{{pessoa_detalhe_update_id_nacionalidade_value}}} (optional)
     - parameter numeroBanco: (query) {{{pessoa_detalhe_update_numero_banco_value}}} (optional)
     - parameter numeroAgencia: (query) {{{pessoa_detalhe_update_numero_agencia_value}}} (optional)
     - parameter numeroContaCorrente: (query) {{{pessoa_detalhe_update_numero_conta_corrente_value}}} (optional)
     - parameter email: (query) {{{pessoa_detalhe_update_email_value}}} (optional)
     - parameter nomeEmpresa: (query) {{{pessoa_detalhe_update_nome_empresa_value}}} (optional)

     - returns: RequestBuilder<PessoaDetalheResponse> 
     */
    public class func alterarUsingPUT15WithRequestBuilder(id id: Int, nomeMae: String?, idEstadoCivil: Int?, idProfissao: String?, idNaturezaOcupacao: Int?, idNacionalidade: Int?, numeroBanco: Int?, numeroAgencia: Int?, numeroContaCorrente: String?, email: String?, nomeEmpresa: String?) -> RequestBuilder<PessoaDetalheResponse> {
        var path = "/api/pessoas-detalhes/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "nomeMae": nomeMae,
            "idEstadoCivil": idEstadoCivil,
            "idProfissao": idProfissao,
            "idNaturezaOcupacao": idNaturezaOcupacao,
            "idNacionalidade": idNacionalidade,
            "numeroBanco": numeroBanco,
            "numeroAgencia": numeroAgencia,
            "numeroContaCorrente": numeroContaCorrente,
            "email": email,
            "nomeEmpresa": nomeEmpresa
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PessoaDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{pessoa_resource_alterar}}}
     
     - parameter id: (path) {{{pessoa_resource_alterar_param_id}}} 
     - parameter nome: (query) {{{pessoa_persist_nome_value}}} 
     - parameter tipo: (query) {{{pessoa_persist_tipo_value}}} 
     - parameter dataNascimento: (query) {{{pessoa_persist_data_nascimento_value}}} 
     - parameter cpf: (query) {{{pessoa_persist_cpf_value}}} (optional)
     - parameter cnpj: (query) {{{pessoa_persist_cnpj_value}}} (optional)
     - parameter sexo: (query) {{{pessoa_persist_sexo_value}}} (optional)
     - parameter numeroIdentidade: (query) {{{pessoa_persist_numero_identidade_value}}} (optional)
     - parameter orgaoExpedidorIdentidade: (query) {{{pessoa_persist_orgao_expedidor_identidade_value}}} (optional)
     - parameter unidadeFederativaIdentidade: (query) {{{pessoa_persist_unidade_federativa_identidade_value}}} (optional)
     - parameter dataEmissaoIdentidade: (query) {{{pessoa_persist_data_emissao_identidade_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT16(id id: Int, nome: String, tipo: String, dataNascimento: String, cpf: String?, cnpj: String?, sexo: String?, numeroIdentidade: String?, orgaoExpedidorIdentidade: String?, unidadeFederativaIdentidade: String?, dataEmissaoIdentidade: String?, completion: ((data: PessoaResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT16WithRequestBuilder(id: id, nome: nome, tipo: tipo, dataNascimento: dataNascimento, cpf: cpf, cnpj: cnpj, sexo: sexo, numeroIdentidade: numeroIdentidade, orgaoExpedidorIdentidade: orgaoExpedidorIdentidade, unidadeFederativaIdentidade: unidadeFederativaIdentidade, dataEmissaoIdentidade: dataEmissaoIdentidade).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{pessoa_resource_alterar}}}
     
     - PUT /api/pessoas/{id}
     - {{{pessoa_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroIdentidade" : "aeiou",
  "tipo" : "aeiou",
  "cpf" : "aeiou",
  "unidadeFederativaIdentidade" : "aeiou",
  "nome" : "aeiou",
  "id" : 123456789,
  "cnpj" : "aeiou",
  "dataNascimento" : "aeiou",
  "sexo" : "aeiou",
  "dataEmissaoIdentidade" : "aeiou",
  "orgaoExpedidorIdentidade" : "aeiou"
}}]
     
     - parameter id: (path) {{{pessoa_resource_alterar_param_id}}} 
     - parameter nome: (query) {{{pessoa_persist_nome_value}}} 
     - parameter tipo: (query) {{{pessoa_persist_tipo_value}}} 
     - parameter dataNascimento: (query) {{{pessoa_persist_data_nascimento_value}}} 
     - parameter cpf: (query) {{{pessoa_persist_cpf_value}}} (optional)
     - parameter cnpj: (query) {{{pessoa_persist_cnpj_value}}} (optional)
     - parameter sexo: (query) {{{pessoa_persist_sexo_value}}} (optional)
     - parameter numeroIdentidade: (query) {{{pessoa_persist_numero_identidade_value}}} (optional)
     - parameter orgaoExpedidorIdentidade: (query) {{{pessoa_persist_orgao_expedidor_identidade_value}}} (optional)
     - parameter unidadeFederativaIdentidade: (query) {{{pessoa_persist_unidade_federativa_identidade_value}}} (optional)
     - parameter dataEmissaoIdentidade: (query) {{{pessoa_persist_data_emissao_identidade_value}}} (optional)

     - returns: RequestBuilder<PessoaResponse> 
     */
    public class func alterarUsingPUT16WithRequestBuilder(id id: Int, nome: String, tipo: String, dataNascimento: String, cpf: String?, cnpj: String?, sexo: String?, numeroIdentidade: String?, orgaoExpedidorIdentidade: String?, unidadeFederativaIdentidade: String?, dataEmissaoIdentidade: String?) -> RequestBuilder<PessoaResponse> {
        var path = "/api/pessoas/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "nome": nome,
            "tipo": tipo,
            "cpf": cpf,
            "cnpj": cnpj,
            "dataNascimento": dataNascimento,
            "sexo": sexo,
            "numeroIdentidade": numeroIdentidade,
            "orgaoExpedidorIdentidade": orgaoExpedidorIdentidade,
            "unidadeFederativaIdentidade": unidadeFederativaIdentidade,
            "dataEmissaoIdentidade": dataEmissaoIdentidade
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PessoaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{telefone_resource_alterar}}}
     
     - parameter id: (query) {{{telefone_alterar_persist_id_value}}} 
     - parameter idTipoTelefone: (query) {{{telefone_alterar_persist_id_tipo_telefone_value}}} (optional)
     - parameter ddd: (query) {{{telefone_alterar_persist_ddd_value}}} (optional)
     - parameter telefone: (query) {{{telefone_alterar_persist_telefone_value}}} (optional)
     - parameter ramal: (query) {{{telefone_alterar_persist_ramal_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT18(id id: Int, idTipoTelefone: Int?, ddd: String?, telefone: String?, ramal: String?, completion: ((data: TelefoneResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT18WithRequestBuilder(id: id, idTipoTelefone: idTipoTelefone, ddd: ddd, telefone: telefone, ramal: ramal).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{telefone_resource_alterar}}}
     
     - PUT /api/telefones
     - {{{telefone_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "idPessoa" : 123456789,
  "telefone" : "aeiou",
  "ddd" : "aeiou",
  "idTipoTelefone" : 123456789,
  "id" : 123456789,
  "ramal" : "aeiou",
  "status" : 123
}}]
     
     - parameter id: (query) {{{telefone_alterar_persist_id_value}}} 
     - parameter idTipoTelefone: (query) {{{telefone_alterar_persist_id_tipo_telefone_value}}} (optional)
     - parameter ddd: (query) {{{telefone_alterar_persist_ddd_value}}} (optional)
     - parameter telefone: (query) {{{telefone_alterar_persist_telefone_value}}} (optional)
     - parameter ramal: (query) {{{telefone_alterar_persist_ramal_value}}} (optional)

     - returns: RequestBuilder<TelefoneResponse> 
     */
    public class func alterarUsingPUT18WithRequestBuilder(id id: Int, idTipoTelefone: Int?, ddd: String?, telefone: String?, ramal: String?) -> RequestBuilder<TelefoneResponse> {
        let path = "/api/telefones"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id": id,
            "idTipoTelefone": idTipoTelefone,
            "ddd": ddd,
            "telefone": telefone,
            "ramal": ramal
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TelefoneResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{endereco_resource_alterar}}}
     
     - parameter id: (query) id 
     - parameter idPessoa: (query) {{{endereco_persist_id_pessoa_value}}} (optional)
     - parameter idTipoEndereco: (query) {{{endereco_persist_id_tipo_endereco_value}}} (optional)
     - parameter cep: (query) {{{endereco_persist_cep_value}}} (optional)
     - parameter logradouro: (query) {{{endereco_persist_logradouro_value}}} (optional)
     - parameter numero: (query) {{{endereco_persist_numero_value}}} (optional)
     - parameter complemento: (query) {{{endereco_persist_complemento_value}}} (optional)
     - parameter pontoReferencia: (query) {{{endereco_persist_ponto_referencia_value}}} (optional)
     - parameter bairro: (query) {{{endereco_persist_bairro_value}}} (optional)
     - parameter cidade: (query) {{{endereco_persist_cidade_value}}} (optional)
     - parameter uf: (query) {{{endereco_persist_uf_value}}} (optional)
     - parameter pais: (query) {{{endereco_persist_pais_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT5(id id: Int, idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?, completion: ((data: EnderecoResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT5WithRequestBuilder(id: id, idPessoa: idPessoa, idTipoEndereco: idTipoEndereco, cep: cep, logradouro: logradouro, numero: numero, complemento: complemento, pontoReferencia: pontoReferencia, bairro: bairro, cidade: cidade, uf: uf, pais: pais).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{endereco_resource_alterar}}}
     
     - PUT /api/enderecos
     - {{{endereco_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "pontoReferencia" : "aeiou",
  "cidade" : "aeiou",
  "numero" : 123,
  "bairro" : "aeiou",
  "idTipoEndereco" : 123456789,
  "cep" : "aeiou",
  "pais" : "aeiou",
  "flagCorrespondencia" : false,
  "idPessoa" : 123456789,
  "uf" : "aeiou",
  "complemento" : "aeiou",
  "logradouro" : "aeiou",
  "dataInclusao" : "aeiou",
  "dataUltimaAtualizacao" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter id: (query) id 
     - parameter idPessoa: (query) {{{endereco_persist_id_pessoa_value}}} (optional)
     - parameter idTipoEndereco: (query) {{{endereco_persist_id_tipo_endereco_value}}} (optional)
     - parameter cep: (query) {{{endereco_persist_cep_value}}} (optional)
     - parameter logradouro: (query) {{{endereco_persist_logradouro_value}}} (optional)
     - parameter numero: (query) {{{endereco_persist_numero_value}}} (optional)
     - parameter complemento: (query) {{{endereco_persist_complemento_value}}} (optional)
     - parameter pontoReferencia: (query) {{{endereco_persist_ponto_referencia_value}}} (optional)
     - parameter bairro: (query) {{{endereco_persist_bairro_value}}} (optional)
     - parameter cidade: (query) {{{endereco_persist_cidade_value}}} (optional)
     - parameter uf: (query) {{{endereco_persist_uf_value}}} (optional)
     - parameter pais: (query) {{{endereco_persist_pais_value}}} (optional)

     - returns: RequestBuilder<EnderecoResponse> 
     */
    public class func alterarUsingPUT5WithRequestBuilder(id id: Int, idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?) -> RequestBuilder<EnderecoResponse> {
        let path = "/api/enderecos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id": id,
            "idPessoa": idPessoa,
            "idTipoEndereco": idTipoEndereco,
            "cep": cep,
            "logradouro": logradouro,
            "numero": numero,
            "complemento": complemento,
            "pontoReferencia": pontoReferencia,
            "bairro": bairro,
            "cidade": cidade,
            "uf": uf,
            "pais": pais
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<EnderecoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{conta_pessoa_resource_atribuir_assinatura_cliente}}}
     
     - parameter id: (path) {{{conta_pessoa_resource_atribuir_assinatura_cliente_param_id}}} 
     - parameter body: (body) {{{conta_pessoa_resource_atribuir_assinatura_cliente_param_body}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func atribuirAssinaturaClienteUsingPOST(id id: Int, body: AtribuirAssinaturaClientePersist, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        atribuirAssinaturaClienteUsingPOSTWithRequestBuilder(id: id, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{conta_pessoa_resource_atribuir_assinatura_cliente}}}
     
     - POST /api/contas/{id}/atribuir-assinatura-cliente
     - {{{conta_pessoa_resource_atribuir_assinatura_cliente_notes}}}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) {{{conta_pessoa_resource_atribuir_assinatura_cliente_param_id}}} 
     - parameter body: (body) {{{conta_pessoa_resource_atribuir_assinatura_cliente_param_body}}} 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func atribuirAssinaturaClienteUsingPOSTWithRequestBuilder(id id: Int, body: AtribuirAssinaturaClientePersist) -> RequestBuilder<AnyObject> {
        var path = "/api/contas/{id}/atribuir-assinatura-cliente"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{endereco_resource_atualizar_correspondencia}}}
     
     - parameter id: (path) {{{endereco_resource_atualizar_correspondencia_param_id}}} 
     - parameter idConta: (query) {{{endereco_resource_atualizar_correspondencia_param_idConta}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func atualizarEnderecoDeCorrespondenciaUsingPUT(id id: Int, idConta: Int, completion: ((data: EnderecoResponse?, error: ErrorType?) -> Void)) {
        atualizarEnderecoDeCorrespondenciaUsingPUTWithRequestBuilder(id: id, idConta: idConta).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{endereco_resource_atualizar_correspondencia}}}
     
     - PUT /api/enderecos/{id}/alterar-endereco-correspondencia
     - {{{endereco_resource_atualizar_correspondencia_notes}}}
     - examples: [{contentType=application/json, example={
  "pontoReferencia" : "aeiou",
  "cidade" : "aeiou",
  "numero" : 123,
  "bairro" : "aeiou",
  "idTipoEndereco" : 123456789,
  "cep" : "aeiou",
  "pais" : "aeiou",
  "flagCorrespondencia" : false,
  "idPessoa" : 123456789,
  "uf" : "aeiou",
  "complemento" : "aeiou",
  "logradouro" : "aeiou",
  "dataInclusao" : "aeiou",
  "dataUltimaAtualizacao" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter id: (path) {{{endereco_resource_atualizar_correspondencia_param_id}}} 
     - parameter idConta: (query) {{{endereco_resource_atualizar_correspondencia_param_idConta}}} 

     - returns: RequestBuilder<EnderecoResponse> 
     */
    public class func atualizarEnderecoDeCorrespondenciaUsingPUTWithRequestBuilder(id id: Int, idConta: Int) -> RequestBuilder<EnderecoResponse> {
        var path = "/api/enderecos/{id}/alterar-endereco-correspondencia"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idConta": idConta
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<EnderecoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{integracao_emissor_resource_atualizar}}}
     
     - parameter id: (path) {{{integracao_emissor_resource_atualizar_param_id_conta}}} 
     - parameter body: (body) {{{integracao_emissor_resource_atualizar_param_body}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func atualizarUsingPOST(id id: Int, body: IntegracaoEmissorPersist?, completion: ((data: IntegracaoEmissorResponse?, error: ErrorType?) -> Void)) {
        atualizarUsingPOSTWithRequestBuilder(id: id, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{integracao_emissor_resource_atualizar}}}
     
     - POST /api/contas/{id}/atualizar-registro-integracao
     - {{{integracao_emissor_resource_atualizar_notes}}}
     - examples: [{contentType=application/json, example={
  "idArquivo" : 123456789,
  "idConta" : 123456789,
  "dataInclusao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "id" : 123456789,
  "dataAlteracao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "status" : "aeiou"
}}]
     
     - parameter id: (path) {{{integracao_emissor_resource_atualizar_param_id_conta}}} 
     - parameter body: (body) {{{integracao_emissor_resource_atualizar_param_body}}} (optional)

     - returns: RequestBuilder<IntegracaoEmissorResponse> 
     */
    public class func atualizarUsingPOSTWithRequestBuilder(id id: Int, body: IntegracaoEmissorPersist?) -> RequestBuilder<IntegracaoEmissorResponse> {
        var path = "/api/contas/{id}/atualizar-registro-integracao"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = body?.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<IntegracaoEmissorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{adicional_resource_cadastrar_adicional}}}
     
     - parameter id: (path) {{{adicional_resource_cadastrar_adicional_param_id_conta}}} 
     - parameter adicionalContaPersist: (body) adicionalContaPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarAdicionalUsingPOST(id id: Int, adicionalContaPersist: AdicionalContaPersist, completion: ((data: AdicionalContaResponse?, error: ErrorType?) -> Void)) {
        cadastrarAdicionalUsingPOSTWithRequestBuilder(id: id, adicionalContaPersist: adicionalContaPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{adicional_resource_cadastrar_adicional}}}
     
     - POST /api/contas/{id}/adicionais
     - {{{adicional_resource_cadastrar_adicional_notes}}}
     - examples: [{contentType=application/json, example={
  "idNacionalidade" : 123456789,
  "idPessoa" : 123456789,
  "idEstadoCivil" : 123456789,
  "idConta" : 123456789,
  "numeroReceitaFederal" : "aeiou",
  "idProfissao" : 123456789,
  "idParentesco" : 123456789,
  "nome" : "aeiou",
  "dataCadastroPortador" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "nomeImpresso" : "aeiou",
  "email" : "aeiou"
}}]
     
     - parameter id: (path) {{{adicional_resource_cadastrar_adicional_param_id_conta}}} 
     - parameter adicionalContaPersist: (body) adicionalContaPersist 

     - returns: RequestBuilder<AdicionalContaResponse> 
     */
    public class func cadastrarAdicionalUsingPOSTWithRequestBuilder(id id: Int, adicionalContaPersist: AdicionalContaPersist) -> RequestBuilder<AdicionalContaResponse> {
        var path = "/api/contas/{id}/adicionais"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = adicionalContaPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AdicionalContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{adicional_resource_cadastrar}}}
     
     - parameter id: (path) {{{adicional_resource_cadastrar_param_id_conta}}} 
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarUsingPOST1(id id: Int, persist: AdicionalPersist, completion: ((data: AdicionalDetalheResponse?, error: ErrorType?) -> Void)) {
        cadastrarUsingPOST1WithRequestBuilder(id: id, persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{adicional_resource_cadastrar}}}
     
     - POST /api/contas/{id}/cadastrar-adicional
     - {{{adicional_resource_cadastrar_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroIdentidade" : "aeiou",
  "idEstadoCivil" : 123456789,
  "idConta" : 123456789,
  "numeroReceitaFederal" : "aeiou",
  "idProfissao" : 123456789,
  "idParentesco" : 123456789,
  "nome" : "aeiou",
  "telefones" : [ {
    "idPessoa" : 123456789,
    "telefone" : "aeiou",
    "ddd" : "aeiou",
    "idTipoTelefone" : 123456789,
    "id" : 123456789,
    "ramal" : "aeiou",
    "status" : 123
  } ],
  "orgaoExpedidorIdentidade" : "aeiou",
  "flagAtivo" : 1,
  "idNacionalidade" : 123456789,
  "idPessoa" : 123456789,
  "dataCancelamentoPortador" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "unidadeFederativaIdentidade" : "aeiou",
  "dataCadastroPortador" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "nomeImpresso" : "aeiou",
  "dataNascimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sexo" : "aeiou",
  "dataEmissaoIdentidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "email" : "aeiou"
}}]
     
     - parameter id: (path) {{{adicional_resource_cadastrar_param_id_conta}}} 
     - parameter persist: (body) persist 

     - returns: RequestBuilder<AdicionalDetalheResponse> 
     */
    public class func cadastrarUsingPOST1WithRequestBuilder(id id: Int, persist: AdicionalPersist) -> RequestBuilder<AdicionalDetalheResponse> {
        var path = "/api/contas/{id}/cadastrar-adicional"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AdicionalDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{adicional_resource_consultar}}}
     
     - parameter id: (path) {{{adicional_resource_consultar_param_id_conta}}} 
     - parameter idPessoa: (path) {{{adicional_resource_consultar_param_id_pessoa}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET2(id id: Int, idPessoa: Int, completion: ((data: AdicionalDetalheResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET2WithRequestBuilder(id: id, idPessoa: idPessoa).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{adicional_resource_consultar}}}
     
     - GET /api/contas/{id}/adicionais/{idPessoa}
     - {{{adicional_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroIdentidade" : "aeiou",
  "idEstadoCivil" : 123456789,
  "idConta" : 123456789,
  "numeroReceitaFederal" : "aeiou",
  "idProfissao" : 123456789,
  "idParentesco" : 123456789,
  "nome" : "aeiou",
  "telefones" : [ {
    "idPessoa" : 123456789,
    "telefone" : "aeiou",
    "ddd" : "aeiou",
    "idTipoTelefone" : 123456789,
    "id" : 123456789,
    "ramal" : "aeiou",
    "status" : 123
  } ],
  "orgaoExpedidorIdentidade" : "aeiou",
  "flagAtivo" : 1,
  "idNacionalidade" : 123456789,
  "idPessoa" : 123456789,
  "dataCancelamentoPortador" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "unidadeFederativaIdentidade" : "aeiou",
  "dataCadastroPortador" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "nomeImpresso" : "aeiou",
  "dataNascimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sexo" : "aeiou",
  "dataEmissaoIdentidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "email" : "aeiou"
}}]
     
     - parameter id: (path) {{{adicional_resource_consultar_param_id_conta}}} 
     - parameter idPessoa: (path) {{{adicional_resource_consultar_param_id_pessoa}}} 

     - returns: RequestBuilder<AdicionalDetalheResponse> 
     */
    public class func consultarUsingGET2WithRequestBuilder(id id: Int, idPessoa: Int) -> RequestBuilder<AdicionalDetalheResponse> {
        var path = "/api/contas/{id}/adicionais/{idPessoa}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idPessoa}", withString: "\(idPessoa)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AdicionalDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{endereco_resource_consultar}}}
     
     - parameter id: (path) {{{endereco_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET21(id id: Int, completion: ((data: EnderecoResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET21WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{endereco_resource_consultar}}}
     
     - GET /api/enderecos/{id}
     - {{{endereco_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "pontoReferencia" : "aeiou",
  "cidade" : "aeiou",
  "numero" : 123,
  "bairro" : "aeiou",
  "idTipoEndereco" : 123456789,
  "cep" : "aeiou",
  "pais" : "aeiou",
  "flagCorrespondencia" : false,
  "idPessoa" : 123456789,
  "uf" : "aeiou",
  "complemento" : "aeiou",
  "logradouro" : "aeiou",
  "dataInclusao" : "aeiou",
  "dataUltimaAtualizacao" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter id: (path) {{{endereco_resource_consultar_param_id}}} 

     - returns: RequestBuilder<EnderecoResponse> 
     */
    public class func consultarUsingGET21WithRequestBuilder(id id: Int) -> RequestBuilder<EnderecoResponse> {
        var path = "/api/enderecos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<EnderecoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{pessoa_detalhe_resource_consultar}}}
     
     - parameter id: (path) {{{pessoa_detalhe_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET32(id id: Int, completion: ((data: PessoaDetalheResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET32WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{pessoa_detalhe_resource_consultar}}}
     
     - GET /api/pessoas-detalhes/{id}
     - {{{pessoa_detalhe_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "idNacionalidade" : 123456789,
  "numeroBanco" : 123,
  "idPessoa" : 123456789,
  "idEstadoCivil" : 123456789,
  "nomeEmpresa" : "aeiou",
  "idProfissao" : "aeiou",
  "idNaturezaOcupacao" : 123456789,
  "numeroContaCorrente" : "aeiou",
  "numeroAgencia" : 123,
  "nomeMae" : "aeiou",
  "email" : "aeiou"
}}]
     
     - parameter id: (path) {{{pessoa_detalhe_resource_consultar_param_id}}} 

     - returns: RequestBuilder<PessoaDetalheResponse> 
     */
    public class func consultarUsingGET32WithRequestBuilder(id id: Int) -> RequestBuilder<PessoaDetalheResponse> {
        var path = "/api/pessoas-detalhes/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PessoaDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{pessoa_resource_consultar}}}
     
     - parameter id: (path) {{{pessoa_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET33(id id: Int, completion: ((data: PessoaResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET33WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{pessoa_resource_consultar}}}
     
     - GET /api/pessoas/{id}
     - {{{pessoa_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroIdentidade" : "aeiou",
  "tipo" : "aeiou",
  "cpf" : "aeiou",
  "unidadeFederativaIdentidade" : "aeiou",
  "nome" : "aeiou",
  "id" : 123456789,
  "cnpj" : "aeiou",
  "dataNascimento" : "aeiou",
  "sexo" : "aeiou",
  "dataEmissaoIdentidade" : "aeiou",
  "orgaoExpedidorIdentidade" : "aeiou"
}}]
     
     - parameter id: (path) {{{pessoa_resource_consultar_param_id}}} 

     - returns: RequestBuilder<PessoaResponse> 
     */
    public class func consultarUsingGET33WithRequestBuilder(id id: Int) -> RequestBuilder<PessoaResponse> {
        var path = "/api/pessoas/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PessoaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{telefone_resource_consultar}}}
     
     - parameter id: (path) {{{telefone_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET41(id id: Int, completion: ((data: TelefoneResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET41WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{telefone_resource_consultar}}}
     
     - GET /api/telefones/{id}
     - {{{telefone_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "idPessoa" : 123456789,
  "telefone" : "aeiou",
  "ddd" : "aeiou",
  "idTipoTelefone" : 123456789,
  "id" : 123456789,
  "ramal" : "aeiou",
  "status" : 123
}}]
     
     - parameter id: (path) {{{telefone_resource_consultar_param_id}}} 

     - returns: RequestBuilder<TelefoneResponse> 
     */
    public class func consultarUsingGET41WithRequestBuilder(id id: Int) -> RequestBuilder<TelefoneResponse> {
        var path = "/api/telefones/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TelefoneResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{adicional_resource_inativar}}}
     
     - parameter id: (path) {{{adicional_resource_inativar_param_id_conta}}} 
     - parameter idPessoa: (path) {{{adicional_resource_inativar_param_id_pessoa}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func inativarUsingPOST(id id: Int, idPessoa: Int, completion: ((data: String?, error: ErrorType?) -> Void)) {
        inativarUsingPOSTWithRequestBuilder(id: id, idPessoa: idPessoa).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{adicional_resource_inativar}}}
     
     - POST /api/contas/{id}/adicionais/{idPessoa}/inativar
     - {{{adicional_resource_inativar_notes}}}
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter id: (path) {{{adicional_resource_inativar_param_id_conta}}} 
     - parameter idPessoa: (path) {{{adicional_resource_inativar_param_id_pessoa}}} 

     - returns: RequestBuilder<String> 
     */
    public class func inativarUsingPOSTWithRequestBuilder(id id: Int, idPessoa: Int) -> RequestBuilder<String> {
        var path = "/api/contas/{id}/adicionais/{idPessoa}/inativar"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idPessoa}", withString: "\(idPessoa)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<String>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{conta_pessoa_resource_listar_socios}}}
     
     - parameter id: (path) {{{conta_pessoa_resource_listar_socios_param_id}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarSociosUsingGET(id id: Int, sort: [String]?, page: Int?, limit: Int?, completion: ((data: PagePessoaResponse?, error: ErrorType?) -> Void)) {
        listarSociosUsingGETWithRequestBuilder(id: id, sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{conta_pessoa_resource_listar_socios}}}
     
     - GET /api/clientes-pessoas-juridicas/{id}/socios
     - {{{conta_pessoa_resource_listar_socios_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "numeroIdentidade" : "aeiou",
    "tipo" : "aeiou",
    "cpf" : "aeiou",
    "unidadeFederativaIdentidade" : "aeiou",
    "nome" : "aeiou",
    "id" : 123456789,
    "cnpj" : "aeiou",
    "dataNascimento" : "aeiou",
    "sexo" : "aeiou",
    "dataEmissaoIdentidade" : "aeiou",
    "orgaoExpedidorIdentidade" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) {{{conta_pessoa_resource_listar_socios_param_id}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PagePessoaResponse> 
     */
    public class func listarSociosUsingGETWithRequestBuilder(id id: Int, sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PagePessoaResponse> {
        var path = "/api/clientes-pessoas-juridicas/{id}/socios"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PagePessoaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{adicional_resource_listar}}}
     
     - parameter id: (path) {{{adicional_resource_listar_param_id_conta}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET1(id id: Int, sort: [String]?, page: Int?, limit: Int?, completion: ((data: AdicionalResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET1WithRequestBuilder(id: id, sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{adicional_resource_listar}}}
     
     - GET /api/contas/{id}/adicionais
     - {{{adicional_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroIdentidade" : "aeiou",
  "idConta" : 123456789,
  "numeroReceitaFederal" : "aeiou",
  "idParentesco" : 123456789,
  "nome" : "aeiou",
  "orgaoExpedidorIdentidade" : "aeiou",
  "flagAtivo" : 1,
  "idPessoa" : 123456789,
  "dataCancelamentoPortador" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "unidadeFederativaIdentidade" : "aeiou",
  "dataCadastroPortador" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "nomeImpresso" : "aeiou",
  "dataNascimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sexo" : "aeiou",
  "dataEmissaoIdentidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
}}]
     
     - parameter id: (path) {{{adicional_resource_listar_param_id_conta}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<AdicionalResponse> 
     */
    public class func listarUsingGET1WithRequestBuilder(id id: Int, sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<AdicionalResponse> {
        var path = "/api/contas/{id}/adicionais"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AdicionalResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{endereco_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{endereco_request_id_value}}} (optional)
     - parameter idPessoa: (query) {{{endereco_request_id_pessoa_value}}} (optional)
     - parameter idTipoEndereco: (query) {{{endereco_request_id_tipo_endereco_value}}} (optional)
     - parameter cep: (query) {{{endereco_request_cep_value}}} (optional)
     - parameter logradouro: (query) {{{endereco_request_logradouro_value}}} (optional)
     - parameter numero: (query) {{{endereco_request_numero_value}}} (optional)
     - parameter complemento: (query) {{{endereco_request_complemento_value}}} (optional)
     - parameter pontoReferencia: (query) {{{endereco_request_ponto_referencia_value}}} (optional)
     - parameter bairro: (query) {{{endereco_request_bairro_value}}} (optional)
     - parameter cidade: (query) {{{endereco_request_cidade_value}}} (optional)
     - parameter uf: (query) {{{endereco_request_uf_value}}} (optional)
     - parameter pais: (query) {{{endereco_request_pais_value}}} (optional)
     - parameter dataInclusao: (query) {{{endereco_request_data_inclusao_value}}} (optional)
     - parameter dataUltimaAtualizacao: (query) {{{endereco_request_data_ultima_atualizacao_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET25(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?, dataInclusao: String?, dataUltimaAtualizacao: String?, completion: ((data: PageEnderecoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET25WithRequestBuilder(sort: sort, page: page, limit: limit, id: id, idPessoa: idPessoa, idTipoEndereco: idTipoEndereco, cep: cep, logradouro: logradouro, numero: numero, complemento: complemento, pontoReferencia: pontoReferencia, bairro: bairro, cidade: cidade, uf: uf, pais: pais, dataInclusao: dataInclusao, dataUltimaAtualizacao: dataUltimaAtualizacao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{endereco_resource_listar}}}
     
     - GET /api/enderecos
     - {{{endereco_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "pontoReferencia" : "aeiou",
    "cidade" : "aeiou",
    "numero" : 123,
    "bairro" : "aeiou",
    "idTipoEndereco" : 123456789,
    "cep" : "aeiou",
    "pais" : "aeiou",
    "flagCorrespondencia" : false,
    "idPessoa" : 123456789,
    "uf" : "aeiou",
    "complemento" : "aeiou",
    "logradouro" : "aeiou",
    "dataInclusao" : "aeiou",
    "dataUltimaAtualizacao" : "aeiou",
    "id" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{endereco_request_id_value}}} (optional)
     - parameter idPessoa: (query) {{{endereco_request_id_pessoa_value}}} (optional)
     - parameter idTipoEndereco: (query) {{{endereco_request_id_tipo_endereco_value}}} (optional)
     - parameter cep: (query) {{{endereco_request_cep_value}}} (optional)
     - parameter logradouro: (query) {{{endereco_request_logradouro_value}}} (optional)
     - parameter numero: (query) {{{endereco_request_numero_value}}} (optional)
     - parameter complemento: (query) {{{endereco_request_complemento_value}}} (optional)
     - parameter pontoReferencia: (query) {{{endereco_request_ponto_referencia_value}}} (optional)
     - parameter bairro: (query) {{{endereco_request_bairro_value}}} (optional)
     - parameter cidade: (query) {{{endereco_request_cidade_value}}} (optional)
     - parameter uf: (query) {{{endereco_request_uf_value}}} (optional)
     - parameter pais: (query) {{{endereco_request_pais_value}}} (optional)
     - parameter dataInclusao: (query) {{{endereco_request_data_inclusao_value}}} (optional)
     - parameter dataUltimaAtualizacao: (query) {{{endereco_request_data_ultima_atualizacao_value}}} (optional)

     - returns: RequestBuilder<PageEnderecoResponse> 
     */
    public class func listarUsingGET25WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?, dataInclusao: String?, dataUltimaAtualizacao: String?) -> RequestBuilder<PageEnderecoResponse> {
        let path = "/api/enderecos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "idPessoa": idPessoa,
            "idTipoEndereco": idTipoEndereco,
            "cep": cep,
            "logradouro": logradouro,
            "numero": numero,
            "complemento": complemento,
            "pontoReferencia": pontoReferencia,
            "bairro": bairro,
            "cidade": cidade,
            "uf": uf,
            "pais": pais,
            "dataInclusao": dataInclusao,
            "dataUltimaAtualizacao": dataUltimaAtualizacao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageEnderecoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{pessoa_detalhe_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idPessoa: (query) {{{pessoa_detalhe_request_id_pessoa_value}}} (optional)
     - parameter nomeMae: (query) {{{pessoa_detalhe_request_nome_mae_value}}} (optional)
     - parameter idEstadoCivil: (query) {{{pessoa_detalhe_request_id_estado_civil_value}}} (optional)
     - parameter idProfissao: (query) {{{pessoa_detalhe_request_id_profissao_value}}} (optional)
     - parameter idNaturezaOcupacao: (query) {{{pessoa_detalhe_request_id_natureza_ocupacao_value}}} (optional)
     - parameter idNacionalidade: (query) {{{pessoa_detalhe_request_id_nacionalidade_value}}} (optional)
     - parameter numeroBanco: (query) {{{pessoa_detalhe_request_numero_banco_value}}} (optional)
     - parameter numeroAgencia: (query) {{{pessoa_detalhe_request_numero_agencia_value}}} (optional)
     - parameter numeroContaCorrente: (query) {{{pessoa_detalhe_request_numero_conta_corrente_value}}} (optional)
     - parameter email: (query) {{{pessoa_detalhe_request_email_value}}} (optional)
     - parameter nomeEmpresa: (query) {{{pessoa_detalhe_request_nome_empresa_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET40(sort sort: [String]?, page: Int?, limit: Int?, idPessoa: Int?, nomeMae: String?, idEstadoCivil: Int?, idProfissao: String?, idNaturezaOcupacao: Int?, idNacionalidade: Int?, numeroBanco: Int?, numeroAgencia: Int?, numeroContaCorrente: String?, email: String?, nomeEmpresa: String?, completion: ((data: PagePessoaDetalheResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET40WithRequestBuilder(sort: sort, page: page, limit: limit, idPessoa: idPessoa, nomeMae: nomeMae, idEstadoCivil: idEstadoCivil, idProfissao: idProfissao, idNaturezaOcupacao: idNaturezaOcupacao, idNacionalidade: idNacionalidade, numeroBanco: numeroBanco, numeroAgencia: numeroAgencia, numeroContaCorrente: numeroContaCorrente, email: email, nomeEmpresa: nomeEmpresa).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{pessoa_detalhe_resource_listar}}}
     
     - GET /api/pessoas-detalhes
     - {{{pessoa_detalhe_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idNacionalidade" : 123456789,
    "numeroBanco" : 123,
    "idPessoa" : 123456789,
    "idEstadoCivil" : 123456789,
    "nomeEmpresa" : "aeiou",
    "idProfissao" : "aeiou",
    "idNaturezaOcupacao" : 123456789,
    "numeroContaCorrente" : "aeiou",
    "numeroAgencia" : 123,
    "nomeMae" : "aeiou",
    "email" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idPessoa: (query) {{{pessoa_detalhe_request_id_pessoa_value}}} (optional)
     - parameter nomeMae: (query) {{{pessoa_detalhe_request_nome_mae_value}}} (optional)
     - parameter idEstadoCivil: (query) {{{pessoa_detalhe_request_id_estado_civil_value}}} (optional)
     - parameter idProfissao: (query) {{{pessoa_detalhe_request_id_profissao_value}}} (optional)
     - parameter idNaturezaOcupacao: (query) {{{pessoa_detalhe_request_id_natureza_ocupacao_value}}} (optional)
     - parameter idNacionalidade: (query) {{{pessoa_detalhe_request_id_nacionalidade_value}}} (optional)
     - parameter numeroBanco: (query) {{{pessoa_detalhe_request_numero_banco_value}}} (optional)
     - parameter numeroAgencia: (query) {{{pessoa_detalhe_request_numero_agencia_value}}} (optional)
     - parameter numeroContaCorrente: (query) {{{pessoa_detalhe_request_numero_conta_corrente_value}}} (optional)
     - parameter email: (query) {{{pessoa_detalhe_request_email_value}}} (optional)
     - parameter nomeEmpresa: (query) {{{pessoa_detalhe_request_nome_empresa_value}}} (optional)

     - returns: RequestBuilder<PagePessoaDetalheResponse> 
     */
    public class func listarUsingGET40WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idPessoa: Int?, nomeMae: String?, idEstadoCivil: Int?, idProfissao: String?, idNaturezaOcupacao: Int?, idNacionalidade: Int?, numeroBanco: Int?, numeroAgencia: Int?, numeroContaCorrente: String?, email: String?, nomeEmpresa: String?) -> RequestBuilder<PagePessoaDetalheResponse> {
        let path = "/api/pessoas-detalhes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idPessoa": idPessoa,
            "nomeMae": nomeMae,
            "idEstadoCivil": idEstadoCivil,
            "idProfissao": idProfissao,
            "idNaturezaOcupacao": idNaturezaOcupacao,
            "idNacionalidade": idNacionalidade,
            "numeroBanco": numeroBanco,
            "numeroAgencia": numeroAgencia,
            "numeroContaCorrente": numeroContaCorrente,
            "email": email,
            "nomeEmpresa": nomeEmpresa
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PagePessoaDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{pessoa_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{pessoa_request_id_value}}} (optional)
     - parameter nome: (query) {{{pessoa_request_nome_value}}} (optional)
     - parameter tipo: (query) {{{pessoa_request_tipo_value}}} (optional)
     - parameter cpf: (query) {{{pessoa_request_cpf_value}}} (optional)
     - parameter cnpj: (query) {{{pessoa_request_cnpj_value}}} (optional)
     - parameter dataNascimento: (query) {{{pessoa_request_data_nascimento_value}}} (optional)
     - parameter sexo: (query) {{{pessoa_request_sexo_value}}} (optional)
     - parameter numeroIdentidade: (query) {{{pessoa_request_numero_identidade_value}}} (optional)
     - parameter orgaoExpedidorIdentidade: (query) {{{pessoa_request_orgao_expedidor_identidade_value}}} (optional)
     - parameter unidadeFederativaIdentidade: (query) {{{pessoa_request_unidade_federativa_identidade_value}}} (optional)
     - parameter dataEmissaoIdentidade: (query) {{{pessoa_request_data_emissao_identidade_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET41(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, nome: String?, tipo: String?, cpf: String?, cnpj: String?, dataNascimento: String?, sexo: String?, numeroIdentidade: String?, orgaoExpedidorIdentidade: String?, unidadeFederativaIdentidade: String?, dataEmissaoIdentidade: String?, completion: ((data: PagePessoaResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET41WithRequestBuilder(sort: sort, page: page, limit: limit, id: id, nome: nome, tipo: tipo, cpf: cpf, cnpj: cnpj, dataNascimento: dataNascimento, sexo: sexo, numeroIdentidade: numeroIdentidade, orgaoExpedidorIdentidade: orgaoExpedidorIdentidade, unidadeFederativaIdentidade: unidadeFederativaIdentidade, dataEmissaoIdentidade: dataEmissaoIdentidade).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{pessoa_resource_listar}}}
     
     - GET /api/pessoas
     - {{{pessoa_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "numeroIdentidade" : "aeiou",
    "tipo" : "aeiou",
    "cpf" : "aeiou",
    "unidadeFederativaIdentidade" : "aeiou",
    "nome" : "aeiou",
    "id" : 123456789,
    "cnpj" : "aeiou",
    "dataNascimento" : "aeiou",
    "sexo" : "aeiou",
    "dataEmissaoIdentidade" : "aeiou",
    "orgaoExpedidorIdentidade" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{pessoa_request_id_value}}} (optional)
     - parameter nome: (query) {{{pessoa_request_nome_value}}} (optional)
     - parameter tipo: (query) {{{pessoa_request_tipo_value}}} (optional)
     - parameter cpf: (query) {{{pessoa_request_cpf_value}}} (optional)
     - parameter cnpj: (query) {{{pessoa_request_cnpj_value}}} (optional)
     - parameter dataNascimento: (query) {{{pessoa_request_data_nascimento_value}}} (optional)
     - parameter sexo: (query) {{{pessoa_request_sexo_value}}} (optional)
     - parameter numeroIdentidade: (query) {{{pessoa_request_numero_identidade_value}}} (optional)
     - parameter orgaoExpedidorIdentidade: (query) {{{pessoa_request_orgao_expedidor_identidade_value}}} (optional)
     - parameter unidadeFederativaIdentidade: (query) {{{pessoa_request_unidade_federativa_identidade_value}}} (optional)
     - parameter dataEmissaoIdentidade: (query) {{{pessoa_request_data_emissao_identidade_value}}} (optional)

     - returns: RequestBuilder<PagePessoaResponse> 
     */
    public class func listarUsingGET41WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, nome: String?, tipo: String?, cpf: String?, cnpj: String?, dataNascimento: String?, sexo: String?, numeroIdentidade: String?, orgaoExpedidorIdentidade: String?, unidadeFederativaIdentidade: String?, dataEmissaoIdentidade: String?) -> RequestBuilder<PagePessoaResponse> {
        let path = "/api/pessoas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "nome": nome,
            "tipo": tipo,
            "cpf": cpf,
            "cnpj": cnpj,
            "dataNascimento": dataNascimento,
            "sexo": sexo,
            "numeroIdentidade": numeroIdentidade,
            "orgaoExpedidorIdentidade": orgaoExpedidorIdentidade,
            "unidadeFederativaIdentidade": unidadeFederativaIdentidade,
            "dataEmissaoIdentidade": dataEmissaoIdentidade
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PagePessoaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{telefone_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{telefone_request_id_value}}} (optional)
     - parameter idTipoTelefone: (query) {{{telefone_request_id_tipo_telefone_value}}} (optional)
     - parameter idPessoa: (query) {{{telefone_request_id_pessoa_value}}} (optional)
     - parameter ddd: (query) {{{telefone_request_ddd_value}}} (optional)
     - parameter telefone: (query) {{{telefone_request_telefone_value}}} (optional)
     - parameter ramal: (query) {{{telefone_request_ramal_value}}} (optional)
     - parameter status: (query) {{{telefone_request_status_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET53(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, idTipoTelefone: Int?, idPessoa: Int?, ddd: String?, telefone: String?, ramal: String?, status: Int?, completion: ((data: PageTelefoneResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET53WithRequestBuilder(sort: sort, page: page, limit: limit, id: id, idTipoTelefone: idTipoTelefone, idPessoa: idPessoa, ddd: ddd, telefone: telefone, ramal: ramal, status: status).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{telefone_resource_listar}}}
     
     - GET /api/telefones
     - {{{telefone_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idPessoa" : 123456789,
    "telefone" : "aeiou",
    "ddd" : "aeiou",
    "idTipoTelefone" : 123456789,
    "id" : 123456789,
    "ramal" : "aeiou",
    "status" : 123
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{telefone_request_id_value}}} (optional)
     - parameter idTipoTelefone: (query) {{{telefone_request_id_tipo_telefone_value}}} (optional)
     - parameter idPessoa: (query) {{{telefone_request_id_pessoa_value}}} (optional)
     - parameter ddd: (query) {{{telefone_request_ddd_value}}} (optional)
     - parameter telefone: (query) {{{telefone_request_telefone_value}}} (optional)
     - parameter ramal: (query) {{{telefone_request_ramal_value}}} (optional)
     - parameter status: (query) {{{telefone_request_status_value}}} (optional)

     - returns: RequestBuilder<PageTelefoneResponse> 
     */
    public class func listarUsingGET53WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, idTipoTelefone: Int?, idPessoa: Int?, ddd: String?, telefone: String?, ramal: String?, status: Int?) -> RequestBuilder<PageTelefoneResponse> {
        let path = "/api/telefones"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "idTipoTelefone": idTipoTelefone,
            "idPessoa": idPessoa,
            "ddd": ddd,
            "telefone": telefone,
            "ramal": ramal,
            "status": status
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTelefoneResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{conta_pessoa_resource_salvar_pessoa_fisica_aprovada}}}
     
     - parameter pessoaPersist: (body) pessoaPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarPessoaFisicaAprovadaUsingPOST(pessoaPersist pessoaPersist: PessoaFisicaAprovadaPersistValue, completion: ((data: PessoaFisicaAprovadaResponse?, error: ErrorType?) -> Void)) {
        salvarPessoaFisicaAprovadaUsingPOSTWithRequestBuilder(pessoaPersist: pessoaPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{conta_pessoa_resource_salvar_pessoa_fisica_aprovada}}}
     
     - POST /api/clientes-pessoas-fisicas
     - {{{conta_pessoa_resource_salvar_pessoa_fisica_aprovada_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroIdentidade" : "aeiou",
  "idEstadoCivil" : 123456789,
  "idOrigemComercial" : 123456789,
  "idNaturezaOcupacao" : 123456789,
  "limiteGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "diaVencimento" : 123,
  "valorPontuacao" : 123,
  "idNacionalidade" : 123456789,
  "idProduto" : 123456789,
  "cpf" : "aeiou",
  "unidadeFederativaIdentidade" : "aeiou",
  "id" : 123456789,
  "dataNascimento" : "aeiou",
  "dataEmissaoIdentidade" : "aeiou",
  "email" : "aeiou",
  "idConta" : 123456789,
  "idProfissao" : "aeiou",
  "idProposta" : 123456789,
  "limiteParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "nome" : "aeiou",
  "canalEntrada" : "aeiou",
  "telefones" : [ {
    "telefone" : "aeiou",
    "ddd" : "aeiou",
    "idTipoTelefone" : 123456789,
    "id" : 123456789,
    "ramal" : "aeiou"
  } ],
  "orgaoExpedidorIdentidade" : "aeiou",
  "nomeEmpresa" : "aeiou",
  "enderecos" : [ {
    "pontoReferencia" : "aeiou",
    "enderecoCorrespondencia" : false,
    "uf" : "aeiou",
    "cidade" : "aeiou",
    "complemento" : "aeiou",
    "numero" : 123,
    "logradouro" : "aeiou",
    "bairro" : "aeiou",
    "id" : 123456789,
    "idTipoEndereco" : 123456789,
    "cep" : "aeiou",
    "pais" : "aeiou"
  } ],
  "limiteMaximo" : 1.3579000000000001069366817318950779736042022705078125,
  "numeroContaCorrente" : "aeiou",
  "limiteConsignado" : 1.3579000000000001069366817318950779736042022705078125,
  "sexo" : "aeiou",
  "nomeImpresso" : "aeiou",
  "numeroAgencia" : 123,
  "nomeMae" : "aeiou"
}}]
     
     - parameter pessoaPersist: (body) pessoaPersist 

     - returns: RequestBuilder<PessoaFisicaAprovadaResponse> 
     */
    public class func salvarPessoaFisicaAprovadaUsingPOSTWithRequestBuilder(pessoaPersist pessoaPersist: PessoaFisicaAprovadaPersistValue) -> RequestBuilder<PessoaFisicaAprovadaResponse> {
        let path = "/api/clientes-pessoas-fisicas"
        let URLString = PierAPI.basePath + path
        
        let parameters = pessoaPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<PessoaFisicaAprovadaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{conta_pessoa_resource_salvar_pessoa_juridica_aprovada}}}
     
     - parameter pessoaPersist: (body) pessoaPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarPessoaJuridicaAprovadaUsingPOST(pessoaPersist pessoaPersist: PessoaJuridicaAprovadaPersist, completion: ((data: PessoaJuridicaAprovadaResponse?, error: ErrorType?) -> Void)) {
        salvarPessoaJuridicaAprovadaUsingPOSTWithRequestBuilder(pessoaPersist: pessoaPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{conta_pessoa_resource_salvar_pessoa_juridica_aprovada}}}
     
     - POST /api/clientes-pessoas-juridicas
     - {{{conta_pessoa_resource_salvar_pessoa_juridica_aprovada_notes}}}
     - examples: [{contentType=application/json, example={
  "idOrigemComercial" : 123456789,
  "dataAberturaEmpresa" : "aeiou",
  "referencias" : [ {
    "telefone" : "aeiou",
    "ddd" : "aeiou",
    "nomeContrato" : "aeiou",
    "razaoSocial" : "aeiou",
    "email" : "aeiou"
  } ],
  "cnpj" : "aeiou",
  "limiteGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "diaVencimento" : 123,
  "valorPontuacao" : 123,
  "nomeFantasia" : "aeiou",
  "idProduto" : 123456789,
  "id" : 123456789,
  "email" : "aeiou",
  "idConta" : 123456789,
  "idProposta" : 123456789,
  "limiteParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "canalEntrada" : "aeiou",
  "telefones" : [ {
    "telefone" : "aeiou",
    "ddd" : "aeiou",
    "idTipoTelefone" : 123456789,
    "id" : 123456789,
    "ramal" : "aeiou"
  } ],
  "socios" : [ {
    "numeroIdentidade" : "aeiou",
    "profissao" : "aeiou",
    "nome" : "aeiou",
    "estadoCivil" : "aeiou",
    "telefones" : [ "" ],
    "orgaoExpedidorIdentidade" : "aeiou",
    "cpf" : "aeiou",
    "unidadeFederativaIdentidade" : "aeiou",
    "id" : 123456789,
    "dataNascimento" : "aeiou",
    "sexo" : "aeiou",
    "dataEmissaoIdentidade" : "aeiou",
    "nacionalidade" : "aeiou",
    "email" : "aeiou"
  } ],
  "numeroBanco" : 123,
  "enderecos" : [ {
    "pontoReferencia" : "aeiou",
    "enderecoCorrespondencia" : false,
    "uf" : "aeiou",
    "cidade" : "aeiou",
    "complemento" : "aeiou",
    "numero" : 123,
    "logradouro" : "aeiou",
    "bairro" : "aeiou",
    "id" : 123456789,
    "idTipoEndereco" : 123456789,
    "cep" : "aeiou",
    "pais" : "aeiou"
  } ],
  "limiteMaximo" : 1.3579000000000001069366817318950779736042022705078125,
  "inscricaoEstadual" : "aeiou",
  "numeroContaCorrente" : "aeiou",
  "nomeImpresso" : "aeiou",
  "razaoSocial" : "aeiou",
  "numeroAgencia" : 123
}}]
     
     - parameter pessoaPersist: (body) pessoaPersist 

     - returns: RequestBuilder<PessoaJuridicaAprovadaResponse> 
     */
    public class func salvarPessoaJuridicaAprovadaUsingPOSTWithRequestBuilder(pessoaPersist pessoaPersist: PessoaJuridicaAprovadaPersist) -> RequestBuilder<PessoaJuridicaAprovadaResponse> {
        let path = "/api/clientes-pessoas-juridicas"
        let URLString = PierAPI.basePath + path
        
        let parameters = pessoaPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<PessoaJuridicaAprovadaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{endereco_resource_salvar}}}
     
     - parameter idPessoa: (query) {{{endereco_persist_id_pessoa_value}}} (optional)
     - parameter idTipoEndereco: (query) {{{endereco_persist_id_tipo_endereco_value}}} (optional)
     - parameter cep: (query) {{{endereco_persist_cep_value}}} (optional)
     - parameter logradouro: (query) {{{endereco_persist_logradouro_value}}} (optional)
     - parameter numero: (query) {{{endereco_persist_numero_value}}} (optional)
     - parameter complemento: (query) {{{endereco_persist_complemento_value}}} (optional)
     - parameter pontoReferencia: (query) {{{endereco_persist_ponto_referencia_value}}} (optional)
     - parameter bairro: (query) {{{endereco_persist_bairro_value}}} (optional)
     - parameter cidade: (query) {{{endereco_persist_cidade_value}}} (optional)
     - parameter uf: (query) {{{endereco_persist_uf_value}}} (optional)
     - parameter pais: (query) {{{endereco_persist_pais_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST14(idPessoa idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?, completion: ((data: EnderecoResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST14WithRequestBuilder(idPessoa: idPessoa, idTipoEndereco: idTipoEndereco, cep: cep, logradouro: logradouro, numero: numero, complemento: complemento, pontoReferencia: pontoReferencia, bairro: bairro, cidade: cidade, uf: uf, pais: pais).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{endereco_resource_salvar}}}
     
     - POST /api/enderecos
     - {{{endereco_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "pontoReferencia" : "aeiou",
  "cidade" : "aeiou",
  "numero" : 123,
  "bairro" : "aeiou",
  "idTipoEndereco" : 123456789,
  "cep" : "aeiou",
  "pais" : "aeiou",
  "flagCorrespondencia" : false,
  "idPessoa" : 123456789,
  "uf" : "aeiou",
  "complemento" : "aeiou",
  "logradouro" : "aeiou",
  "dataInclusao" : "aeiou",
  "dataUltimaAtualizacao" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter idPessoa: (query) {{{endereco_persist_id_pessoa_value}}} (optional)
     - parameter idTipoEndereco: (query) {{{endereco_persist_id_tipo_endereco_value}}} (optional)
     - parameter cep: (query) {{{endereco_persist_cep_value}}} (optional)
     - parameter logradouro: (query) {{{endereco_persist_logradouro_value}}} (optional)
     - parameter numero: (query) {{{endereco_persist_numero_value}}} (optional)
     - parameter complemento: (query) {{{endereco_persist_complemento_value}}} (optional)
     - parameter pontoReferencia: (query) {{{endereco_persist_ponto_referencia_value}}} (optional)
     - parameter bairro: (query) {{{endereco_persist_bairro_value}}} (optional)
     - parameter cidade: (query) {{{endereco_persist_cidade_value}}} (optional)
     - parameter uf: (query) {{{endereco_persist_uf_value}}} (optional)
     - parameter pais: (query) {{{endereco_persist_pais_value}}} (optional)

     - returns: RequestBuilder<EnderecoResponse> 
     */
    public class func salvarUsingPOST14WithRequestBuilder(idPessoa idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?) -> RequestBuilder<EnderecoResponse> {
        let path = "/api/enderecos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idPessoa": idPessoa,
            "idTipoEndereco": idTipoEndereco,
            "cep": cep,
            "logradouro": logradouro,
            "numero": numero,
            "complemento": complemento,
            "pontoReferencia": pontoReferencia,
            "bairro": bairro,
            "cidade": cidade,
            "uf": uf,
            "pais": pais
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<EnderecoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{integracao_emissor_resource_salvar}}}
     
     - parameter id: (path) {{{integracao_emissor_resource_salvar_param_id_conta}}} 
     - parameter body: (body) {{{integracao_emissor_resource_salvar_param_body}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST17(id id: Int, body: IntegracaoEmissorPersist?, completion: ((data: IntegracaoEmissorResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST17WithRequestBuilder(id: id, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{integracao_emissor_resource_salvar}}}
     
     - POST /api/contas/{id}/incluir-registro-integracao
     - {{{integracao_emissor_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "idArquivo" : 123456789,
  "idConta" : 123456789,
  "dataInclusao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "id" : 123456789,
  "dataAlteracao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "status" : "aeiou"
}}]
     
     - parameter id: (path) {{{integracao_emissor_resource_salvar_param_id_conta}}} 
     - parameter body: (body) {{{integracao_emissor_resource_salvar_param_body}}} (optional)

     - returns: RequestBuilder<IntegracaoEmissorResponse> 
     */
    public class func salvarUsingPOST17WithRequestBuilder(id id: Int, body: IntegracaoEmissorPersist?) -> RequestBuilder<IntegracaoEmissorResponse> {
        var path = "/api/contas/{id}/incluir-registro-integracao"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = body?.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<IntegracaoEmissorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{pessoa_detalhe_resource_salvar}}}
     
     - parameter idPessoa: (query) {{{pessoa_detalhe_persist_id_pessoa_value}}} 
     - parameter nomeMae: (query) {{{pessoa_detalhe_persist_nome_mae_value}}} (optional)
     - parameter idEstadoCivil: (query) {{{pessoa_detalhe_persist_id_estado_civil_value}}} (optional)
     - parameter idProfissao: (query) {{{pessoa_detalhe_persist_id_profissao_value}}} (optional)
     - parameter idNaturezaOcupacao: (query) {{{pessoa_detalhe_persist_id_natureza_ocupacao_value}}} (optional)
     - parameter idNacionalidade: (query) {{{pessoa_detalhe_persist_id_nacionalidade_value}}} (optional)
     - parameter numeroBanco: (query) {{{pessoa_detalhe_persist_numero_banco_value}}} (optional)
     - parameter numeroAgencia: (query) {{{pessoa_detalhe_persist_numero_agencia_value}}} (optional)
     - parameter numeroContaCorrente: (query) {{{pessoa_detalhe_persist_numero_conta_corrente_value}}} (optional)
     - parameter email: (query) {{{pessoa_detalhe_persist_email_value}}} (optional)
     - parameter nomeEmpresa: (query) {{{pessoa_detalhe_persist_nome_empresa_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST25(idPessoa idPessoa: Int, nomeMae: String?, idEstadoCivil: Int?, idProfissao: String?, idNaturezaOcupacao: Int?, idNacionalidade: Int?, numeroBanco: Int?, numeroAgencia: Int?, numeroContaCorrente: String?, email: String?, nomeEmpresa: String?, completion: ((data: PessoaDetalheResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST25WithRequestBuilder(idPessoa: idPessoa, nomeMae: nomeMae, idEstadoCivil: idEstadoCivil, idProfissao: idProfissao, idNaturezaOcupacao: idNaturezaOcupacao, idNacionalidade: idNacionalidade, numeroBanco: numeroBanco, numeroAgencia: numeroAgencia, numeroContaCorrente: numeroContaCorrente, email: email, nomeEmpresa: nomeEmpresa).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{pessoa_detalhe_resource_salvar}}}
     
     - POST /api/pessoas-detalhes
     - {{{pessoa_detalhe_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "idNacionalidade" : 123456789,
  "numeroBanco" : 123,
  "idPessoa" : 123456789,
  "idEstadoCivil" : 123456789,
  "nomeEmpresa" : "aeiou",
  "idProfissao" : "aeiou",
  "idNaturezaOcupacao" : 123456789,
  "numeroContaCorrente" : "aeiou",
  "numeroAgencia" : 123,
  "nomeMae" : "aeiou",
  "email" : "aeiou"
}}]
     
     - parameter idPessoa: (query) {{{pessoa_detalhe_persist_id_pessoa_value}}} 
     - parameter nomeMae: (query) {{{pessoa_detalhe_persist_nome_mae_value}}} (optional)
     - parameter idEstadoCivil: (query) {{{pessoa_detalhe_persist_id_estado_civil_value}}} (optional)
     - parameter idProfissao: (query) {{{pessoa_detalhe_persist_id_profissao_value}}} (optional)
     - parameter idNaturezaOcupacao: (query) {{{pessoa_detalhe_persist_id_natureza_ocupacao_value}}} (optional)
     - parameter idNacionalidade: (query) {{{pessoa_detalhe_persist_id_nacionalidade_value}}} (optional)
     - parameter numeroBanco: (query) {{{pessoa_detalhe_persist_numero_banco_value}}} (optional)
     - parameter numeroAgencia: (query) {{{pessoa_detalhe_persist_numero_agencia_value}}} (optional)
     - parameter numeroContaCorrente: (query) {{{pessoa_detalhe_persist_numero_conta_corrente_value}}} (optional)
     - parameter email: (query) {{{pessoa_detalhe_persist_email_value}}} (optional)
     - parameter nomeEmpresa: (query) {{{pessoa_detalhe_persist_nome_empresa_value}}} (optional)

     - returns: RequestBuilder<PessoaDetalheResponse> 
     */
    public class func salvarUsingPOST25WithRequestBuilder(idPessoa idPessoa: Int, nomeMae: String?, idEstadoCivil: Int?, idProfissao: String?, idNaturezaOcupacao: Int?, idNacionalidade: Int?, numeroBanco: Int?, numeroAgencia: Int?, numeroContaCorrente: String?, email: String?, nomeEmpresa: String?) -> RequestBuilder<PessoaDetalheResponse> {
        let path = "/api/pessoas-detalhes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idPessoa": idPessoa,
            "nomeMae": nomeMae,
            "idEstadoCivil": idEstadoCivil,
            "idProfissao": idProfissao,
            "idNaturezaOcupacao": idNaturezaOcupacao,
            "idNacionalidade": idNacionalidade,
            "numeroBanco": numeroBanco,
            "numeroAgencia": numeroAgencia,
            "numeroContaCorrente": numeroContaCorrente,
            "email": email,
            "nomeEmpresa": nomeEmpresa
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PessoaDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{pessoa_resource_salvar}}}
     
     - parameter nome: (query) {{{pessoa_persist_nome_value}}} 
     - parameter tipo: (query) {{{pessoa_persist_tipo_value}}} 
     - parameter dataNascimento: (query) {{{pessoa_persist_data_nascimento_value}}} 
     - parameter cpf: (query) {{{pessoa_persist_cpf_value}}} (optional)
     - parameter cnpj: (query) {{{pessoa_persist_cnpj_value}}} (optional)
     - parameter sexo: (query) {{{pessoa_persist_sexo_value}}} (optional)
     - parameter numeroIdentidade: (query) {{{pessoa_persist_numero_identidade_value}}} (optional)
     - parameter orgaoExpedidorIdentidade: (query) {{{pessoa_persist_orgao_expedidor_identidade_value}}} (optional)
     - parameter unidadeFederativaIdentidade: (query) {{{pessoa_persist_unidade_federativa_identidade_value}}} (optional)
     - parameter dataEmissaoIdentidade: (query) {{{pessoa_persist_data_emissao_identidade_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST26(nome nome: String, tipo: String, dataNascimento: String, cpf: String?, cnpj: String?, sexo: String?, numeroIdentidade: String?, orgaoExpedidorIdentidade: String?, unidadeFederativaIdentidade: String?, dataEmissaoIdentidade: String?, completion: ((data: PessoaResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST26WithRequestBuilder(nome: nome, tipo: tipo, dataNascimento: dataNascimento, cpf: cpf, cnpj: cnpj, sexo: sexo, numeroIdentidade: numeroIdentidade, orgaoExpedidorIdentidade: orgaoExpedidorIdentidade, unidadeFederativaIdentidade: unidadeFederativaIdentidade, dataEmissaoIdentidade: dataEmissaoIdentidade).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{pessoa_resource_salvar}}}
     
     - POST /api/pessoas
     - {{{pessoa_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroIdentidade" : "aeiou",
  "tipo" : "aeiou",
  "cpf" : "aeiou",
  "unidadeFederativaIdentidade" : "aeiou",
  "nome" : "aeiou",
  "id" : 123456789,
  "cnpj" : "aeiou",
  "dataNascimento" : "aeiou",
  "sexo" : "aeiou",
  "dataEmissaoIdentidade" : "aeiou",
  "orgaoExpedidorIdentidade" : "aeiou"
}}]
     
     - parameter nome: (query) {{{pessoa_persist_nome_value}}} 
     - parameter tipo: (query) {{{pessoa_persist_tipo_value}}} 
     - parameter dataNascimento: (query) {{{pessoa_persist_data_nascimento_value}}} 
     - parameter cpf: (query) {{{pessoa_persist_cpf_value}}} (optional)
     - parameter cnpj: (query) {{{pessoa_persist_cnpj_value}}} (optional)
     - parameter sexo: (query) {{{pessoa_persist_sexo_value}}} (optional)
     - parameter numeroIdentidade: (query) {{{pessoa_persist_numero_identidade_value}}} (optional)
     - parameter orgaoExpedidorIdentidade: (query) {{{pessoa_persist_orgao_expedidor_identidade_value}}} (optional)
     - parameter unidadeFederativaIdentidade: (query) {{{pessoa_persist_unidade_federativa_identidade_value}}} (optional)
     - parameter dataEmissaoIdentidade: (query) {{{pessoa_persist_data_emissao_identidade_value}}} (optional)

     - returns: RequestBuilder<PessoaResponse> 
     */
    public class func salvarUsingPOST26WithRequestBuilder(nome nome: String, tipo: String, dataNascimento: String, cpf: String?, cnpj: String?, sexo: String?, numeroIdentidade: String?, orgaoExpedidorIdentidade: String?, unidadeFederativaIdentidade: String?, dataEmissaoIdentidade: String?) -> RequestBuilder<PessoaResponse> {
        let path = "/api/pessoas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "nome": nome,
            "tipo": tipo,
            "cpf": cpf,
            "cnpj": cnpj,
            "dataNascimento": dataNascimento,
            "sexo": sexo,
            "numeroIdentidade": numeroIdentidade,
            "orgaoExpedidorIdentidade": orgaoExpedidorIdentidade,
            "unidadeFederativaIdentidade": unidadeFederativaIdentidade,
            "dataEmissaoIdentidade": dataEmissaoIdentidade
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PessoaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{telefone_resource_salvar}}}
     
     - parameter idTipoTelefone: (query) {{{telefone_persist_id_tipo_telefone_value}}} (optional)
     - parameter idPessoa: (query) {{{telefone_persist_id_pessoa_value}}} (optional)
     - parameter ddd: (query) {{{telefone_persist_ddd_value}}} (optional)
     - parameter telefone: (query) {{{telefone_persist_telefone_value}}} (optional)
     - parameter ramal: (query) {{{telefone_persist_ramal_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST29(idTipoTelefone idTipoTelefone: Int?, idPessoa: Int?, ddd: String?, telefone: String?, ramal: String?, completion: ((data: TelefoneResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST29WithRequestBuilder(idTipoTelefone: idTipoTelefone, idPessoa: idPessoa, ddd: ddd, telefone: telefone, ramal: ramal).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{telefone_resource_salvar}}}
     
     - POST /api/telefones
     - {{{telefone_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "idPessoa" : 123456789,
  "telefone" : "aeiou",
  "ddd" : "aeiou",
  "idTipoTelefone" : 123456789,
  "id" : 123456789,
  "ramal" : "aeiou",
  "status" : 123
}}]
     
     - parameter idTipoTelefone: (query) {{{telefone_persist_id_tipo_telefone_value}}} (optional)
     - parameter idPessoa: (query) {{{telefone_persist_id_pessoa_value}}} (optional)
     - parameter ddd: (query) {{{telefone_persist_ddd_value}}} (optional)
     - parameter telefone: (query) {{{telefone_persist_telefone_value}}} (optional)
     - parameter ramal: (query) {{{telefone_persist_ramal_value}}} (optional)

     - returns: RequestBuilder<TelefoneResponse> 
     */
    public class func salvarUsingPOST29WithRequestBuilder(idTipoTelefone idTipoTelefone: Int?, idPessoa: Int?, ddd: String?, telefone: String?, ramal: String?) -> RequestBuilder<TelefoneResponse> {
        let path = "/api/telefones"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idTipoTelefone": idTipoTelefone,
            "idPessoa": idPessoa,
            "ddd": ddd,
            "telefone": telefone,
            "ramal": ramal
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TelefoneResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

}
