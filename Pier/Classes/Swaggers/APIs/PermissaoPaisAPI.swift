//
// PermissaoPaisAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class PermissaoPaisAPI: APIBase {
    /**
     
     Apresenta dados de um determinado pa\u00EDs
     
     - parameter id: (path) C\u00F3digo de identifica\u00E7\u00E3o do pa\u00EDs (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarPaisUsingGET(id id: Int, completion: ((data: PaisResponse?, error: ErrorType?) -> Void)) {
        consultarPaisUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Apresenta dados de um determinado pa\u00EDs
     
     - GET /api/paises/{id}
     - Este m\u00E9todo permite consultar dados de um determinado pa\u00EDs a partir de seu codigo de identifica\u00E7\u00E3o (id).
     - examples: [{contentType=application/json, example={
  "continente" : "aeiou",
  "codigo" : "aeiou",
  "sigla" : "aeiou",
  "id" : 123456789,
  "flagAtivo" : false,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) C\u00F3digo de identifica\u00E7\u00E3o do pa\u00EDs (id). 

     - returns: RequestBuilder<PaisResponse> 
     */
    public class func consultarPaisUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<PaisResponse> {
        var path = "/api/paises/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PaisResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Lista os continentes
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarContinentesUsingGET(completion: ((data: [AnyObject]?, error: ErrorType?) -> Void)) {
        listarContinentesUsingGETWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista os continentes
     
     - GET /api/continentes
     - Este recurso permite listar os continentes utilizados no recurso de permiss\u00E3o de uso do cart\u00E3o no exterior
     - examples: [{contentType=application/json, example=[ "{}" ]}]

     - returns: RequestBuilder<[AnyObject]> 
     */
    public class func listarContinentesUsingGETWithRequestBuilder() -> RequestBuilder<[AnyObject]> {
        let path = "/api/continentes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<[AnyObject]>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Lista os pa\u00EDses
     
     - parameter sort: (query) Tipo de ordena\u00E7\u00E3o dos registros. (optional)
     - parameter page: (query) P\u00E1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50) (optional)
     - parameter codigo: (query) C\u00F3digo do pa\u00EDs (optional)
     - parameter sigla: (query) Sigla do pa\u00EDs (optional)
     - parameter descricao: (query) Nome do pa\u00EDs (optional)
     - parameter continente: (query) Continente no qual o pa\u00EDs faz parte (optional)
     - parameter flagAtivo: (query) Atributo que representa se o pa\u00EDs est\u00E1 ativo (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarPaisesUsingGET(sort sort: [String]?, page: Int?, limit: Int?, codigo: String?, sigla: String?, descricao: String?, continente: String?, flagAtivo: Bool?, completion: ((data: PagePaisResponse?, error: ErrorType?) -> Void)) {
        listarPaisesUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, codigo: codigo, sigla: sigla, descricao: descricao, continente: continente, flagAtivo: flagAtivo).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista os pa\u00EDses
     
     - GET /api/paises
     - Este recurso permite listar os pa\u00EDses.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "continente" : "aeiou",
    "codigo" : "aeiou",
    "sigla" : "aeiou",
    "id" : 123456789,
    "flagAtivo" : false,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) Tipo de ordena\u00E7\u00E3o dos registros. (optional)
     - parameter page: (query) P\u00E1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50) (optional)
     - parameter codigo: (query) C\u00F3digo do pa\u00EDs (optional)
     - parameter sigla: (query) Sigla do pa\u00EDs (optional)
     - parameter descricao: (query) Nome do pa\u00EDs (optional)
     - parameter continente: (query) Continente no qual o pa\u00EDs faz parte (optional)
     - parameter flagAtivo: (query) Atributo que representa se o pa\u00EDs est\u00E1 ativo (optional)

     - returns: RequestBuilder<PagePaisResponse> 
     */
    public class func listarPaisesUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, codigo: String?, sigla: String?, descricao: String?, continente: String?, flagAtivo: Bool?) -> RequestBuilder<PagePaisResponse> {
        let path = "/api/paises"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "codigo": codigo,
            "sigla": sigla,
            "descricao": descricao,
            "continente": continente,
            "flagAtivo": flagAtivo
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PagePaisResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
