//
// GlobaltagchavecriptografiaAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltagchavecriptografiaAPI: APIBase {
    /**
     
     {{{chave_criptografia_recurso_descriptografar}}}
     
     - parameter chaveCriptografiaRequest: (body) chaveCriptografiaRequest 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func descriptografarUsingPOST(chaveCriptografiaRequest chaveCriptografiaRequest: ChaveCriptografiaRequest, completion: ((data: ChaveCriptografiaResponse?, error: ErrorType?) -> Void)) {
        descriptografarUsingPOSTWithRequestBuilder(chaveCriptografiaRequest: chaveCriptografiaRequest).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{chave_criptografia_recurso_descriptografar}}}
     
     - POST /api/chaves-criptografia/descriptografar
     - {{{chave_criptografia_recurso_descriptografar_notas}}}
     - examples: [{contentType=application/json, example={
  "conteudo" : "aeiou"
}}]
     
     - parameter chaveCriptografiaRequest: (body) chaveCriptografiaRequest 

     - returns: RequestBuilder<ChaveCriptografiaResponse> 
     */
    public class func descriptografarUsingPOSTWithRequestBuilder(chaveCriptografiaRequest chaveCriptografiaRequest: ChaveCriptografiaRequest) -> RequestBuilder<ChaveCriptografiaResponse> {
        let path = "/api/chaves-criptografia/descriptografar"
        let URLString = PierAPI.basePath + path
        
        let parameters = chaveCriptografiaRequest.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ChaveCriptografiaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
