//
// TokenAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class TokenAPI: APIBase {
    /**
     
     /api/tokens/callback
     
     - parameter bodyAccessToken: (body) bodyAccessToken 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func callbackUsingPOST(bodyAccessToken bodyAccessToken: BodyAccessToken, completion: ((data: BodyAccessToken?, error: ErrorType?) -> Void)) {
        callbackUsingPOSTWithRequestBuilder(bodyAccessToken: bodyAccessToken).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     /api/tokens/callback
     
     - POST /api/tokens/callback
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "AuthToken" : {
    "owner" : "aeiou",
    "code" : "aeiou",
    "id" : 123,
    "extraInfo" : {
      "idEmissor" : 123
    },
    "status" : "aeiou"
  },
  "action" : "aeiou",
  "user" : "aeiou"
}}]
     
     - parameter bodyAccessToken: (body) bodyAccessToken 

     - returns: RequestBuilder<BodyAccessToken> 
     */
    public class func callbackUsingPOSTWithRequestBuilder(bodyAccessToken bodyAccessToken: BodyAccessToken) -> RequestBuilder<BodyAccessToken> {
        let path = "/api/tokens/callback"
        let URLString = PierAPI.basePath + path
        
        let parameters = bodyAccessToken.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<BodyAccessToken>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     /api/tokens/validar
     
     - parameter bodyAccessToken: (body) bodyAccessToken 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func validarUsingPOST(bodyAccessToken bodyAccessToken: BodyAccessToken, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        validarUsingPOSTWithRequestBuilder(bodyAccessToken: bodyAccessToken).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     /api/tokens/validar
     
     - POST /api/tokens/validar
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter bodyAccessToken: (body) bodyAccessToken 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func validarUsingPOSTWithRequestBuilder(bodyAccessToken bodyAccessToken: BodyAccessToken) -> RequestBuilder<AnyObject> {
        let path = "/api/tokens/validar"
        let URLString = PierAPI.basePath + path
        
        let parameters = bodyAccessToken.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
