//
// CartaoAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class CartaoAPI: APIBase {
    /**
     
     /contas/{idConta}/cartoes/{idCartao}/cancelar
     
     - parameter idConta: (path) ID da Conta 
     - parameter idCartao: (path) ID do Cart\u00C3\u00A3o que deseja cancelar 
     - parameter motivo: (query) Motivo do cancelamento 
     - parameter observacao: (query) Alguma observa\u00C3\u00A7\u00C3\u00A3o para o cancelamento 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cancelarCartaoUsingPOST(idConta idConta: Int, idCartao: Int, motivo: Int, observacao: String, completion: ((data: CancelarCartaoResponse?, error: ErrorType?) -> Void)) {
        cancelarCartaoUsingPOSTWithRequestBuilder(idConta: idConta, idCartao: idCartao, motivo: motivo, observacao: observacao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     /contas/{idConta}/cartoes/{idCartao}/cancelar
     
     - POST /api/v1/contas/{idConta}/cartoes/{idCartao}/cancelar
     - Cancelar um determinado cart\u00C3\u00A3o
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "idCartao" : 123,
  "idConta" : 123,
  "descricaoRetorno" : "aeiou",
  "codigoRetorno" : 123
}}]
     
     - parameter idConta: (path) ID da Conta 
     - parameter idCartao: (path) ID do Cart\u00C3\u00A3o que deseja cancelar 
     - parameter motivo: (query) Motivo do cancelamento 
     - parameter observacao: (query) Alguma observa\u00C3\u00A7\u00C3\u00A3o para o cancelamento 

     - returns: RequestBuilder<CancelarCartaoResponse> 
     */
    public class func cancelarCartaoUsingPOSTWithRequestBuilder(idConta idConta: Int, idCartao: Int, motivo: Int, observacao: String) -> RequestBuilder<CancelarCartaoResponse> {
        var path = "/api/v1/contas/{idConta}/cartoes/{idCartao}/cancelar"
        path = path.stringByReplacingOccurrencesOfString("{idConta}", withString: "\(idConta)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idCartao}", withString: "\(idCartao)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "motivo": motivo,
            "observacao": observacao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CancelarCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     /contas/{idConta}/cartoes/{idCartao}
     
     - parameter idConta: (path) ID da Conta que pertence o cart\u00C3\u00A3o 
     - parameter idCartao: (path) ID do Cart\u00C3\u00A3o que deseja consultar 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarCartaoUsingGET(idConta idConta: Int, idCartao: Int, completion: ((data: ConsultarCartaoResponse?, error: ErrorType?) -> Void)) {
        consultarCartaoUsingGETWithRequestBuilder(idConta: idConta, idCartao: idCartao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     /contas/{idConta}/cartoes/{idCartao}
     
     - GET /api/v1/contas/{idConta}/cartoes/{idCartao}
     - Consultar as informa\u00C3\u00A7\u00C3\u00B5es de um determinado cart\u00C3\u00A3o de uma conta
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "descricaoRetorno" : "aeiou",
  "cartoes" : [ {
    "idCartao" : 123,
    "idConta" : 123,
    "codigoDesbloqueio" : "aeiou",
    "bin" : 123,
    "flagSenha" : true,
    "estagioData" : "2000-01-23T04:56:07.000+0000",
    "flagReversao" : true,
    "numeroCartaoReal" : "aeiou",
    "dataEmissao" : "2000-01-23T04:56:07.000+0000",
    "estagioCartao" : 123,
    "dataVencimentoPadrao" : "aeiou",
    "numeroCartao" : "aeiou",
    "criptografiaHSM" : "aeiou",
    "idProduto" : 123,
    "descricaoRetorno" : "aeiou",
    "dataValidade" : "2000-01-23T04:56:07.000+0000",
    "idPessoaFisica" : 123,
    "codRetorno" : 123,
    "idEmissor" : 123,
    "statusCartao" : 123,
    "statusData" : "2000-01-23T04:56:07.000+0000",
    "idLog" : "aeiou"
  } ],
  "codigoRetorno" : 123
}}]
     
     - parameter idConta: (path) ID da Conta que pertence o cart\u00C3\u00A3o 
     - parameter idCartao: (path) ID do Cart\u00C3\u00A3o que deseja consultar 

     - returns: RequestBuilder<ConsultarCartaoResponse> 
     */
    public class func consultarCartaoUsingGETWithRequestBuilder(idConta idConta: Int, idCartao: Int) -> RequestBuilder<ConsultarCartaoResponse> {
        var path = "/api/v1/contas/{idConta}/cartoes/{idCartao}"
        path = path.stringByReplacingOccurrencesOfString("{idConta}", withString: "\(idConta)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idCartao}", withString: "\(idCartao)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ConsultarCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     /contas/{idConta}/cartoes
     
     - parameter idConta: (path) ID da Conta 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarCartoesUsingGET(idConta idConta: Int, completion: ((data: ConsultarCartaoResponse?, error: ErrorType?) -> Void)) {
        consultarCartoesUsingGETWithRequestBuilder(idConta: idConta).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     /contas/{idConta}/cartoes
     
     - GET /api/v1/contas/{idConta}/cartoes
     - Consultar todos os cart\u00C3\u00B5es de uma determinada conta
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "descricaoRetorno" : "aeiou",
  "cartoes" : [ {
    "idCartao" : 123,
    "idConta" : 123,
    "codigoDesbloqueio" : "aeiou",
    "bin" : 123,
    "flagSenha" : true,
    "estagioData" : "2000-01-23T04:56:07.000+0000",
    "flagReversao" : true,
    "numeroCartaoReal" : "aeiou",
    "dataEmissao" : "2000-01-23T04:56:07.000+0000",
    "estagioCartao" : 123,
    "dataVencimentoPadrao" : "aeiou",
    "numeroCartao" : "aeiou",
    "criptografiaHSM" : "aeiou",
    "idProduto" : 123,
    "descricaoRetorno" : "aeiou",
    "dataValidade" : "2000-01-23T04:56:07.000+0000",
    "idPessoaFisica" : 123,
    "codRetorno" : 123,
    "idEmissor" : 123,
    "statusCartao" : 123,
    "statusData" : "2000-01-23T04:56:07.000+0000",
    "idLog" : "aeiou"
  } ],
  "codigoRetorno" : 123
}}]
     
     - parameter idConta: (path) ID da Conta 

     - returns: RequestBuilder<ConsultarCartaoResponse> 
     */
    public class func consultarCartoesUsingGETWithRequestBuilder(idConta idConta: Int) -> RequestBuilder<ConsultarCartaoResponse> {
        var path = "/api/v1/contas/{idConta}/cartoes"
        path = path.stringByReplacingOccurrencesOfString("{idConta}", withString: "\(idConta)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ConsultarCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     /contas/{idConta}/cartoes/{idCartao}/faturas
     
     - parameter idConta: (path) ID da Conta 
     - parameter idCartao: (path) ID do Cart\u00C3\u00A3o que deseja consultar o extrato 
     - parameter dataVencimento: (query) Data limite para o vencimento das transa\u00C3\u00A7\u00C3\u00B5es 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarExtratoFaturasUsingGET(idConta idConta: Int, idCartao: Int, dataVencimento: String, completion: ((data: ConsultarExtratoContaResponse?, error: ErrorType?) -> Void)) {
        consultarExtratoFaturasUsingGETWithRequestBuilder(idConta: idConta, idCartao: idCartao, dataVencimento: dataVencimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     /contas/{idConta}/cartoes/{idCartao}/faturas
     
     - GET /api/v1/contas/{idConta}/cartoes/{idCartao}/faturas
     - Consulte os extratos/faturas do cart\u00C3\u00A3o de uma determinada conta
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "idCartao" : 123,
  "idConta" : 123,
  "debitosNacionais" : 1.3579000000000001069366817318950779736042022705078125,
  "tarifasNacionais" : 1.3579000000000001069366817318950779736042022705078125,
  "pagamentos" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoAtualFinal" : 1.3579000000000001069366817318950779736042022705078125,
  "multa" : 1.3579000000000001069366817318950779736042022705078125,
  "valorMinimoExtrato" : 1.3579000000000001069366817318950779736042022705078125,
  "codigoRetorno" : 123,
  "saldoExtratoAnterior" : 1.3579000000000001069366817318950779736042022705078125,
  "descricaoRetorno" : "aeiou",
  "dataVencimento" : "aeiou",
  "cpf" : "aeiou",
  "creditosNacionais" : 1.3579000000000001069366817318950779736042022705078125,
  "extrato" : [ {
    "nomeEstabVisa" : "aeiou",
    "cotacaoDolar" : 1.3579000000000001069366817318950779736042022705078125,
    "cidadeUFPais" : "aeiou",
    "dataCotacaoDolar" : "2000-01-23T04:56:07.000+0000",
    "origem" : "aeiou",
    "descricaoModoEntrada" : "aeiou",
    "encargosFinanceiros" : 1.3579000000000001069366817318950779736042022705078125,
    "mcc" : 123,
    "dataCompra" : "aeiou",
    "credito" : 1.3579000000000001069366817318950779736042022705078125,
    "idTipoTransacao" : 123,
    "nomePlastico" : "aeiou",
    "valorDolar" : 1.3579000000000001069366817318950779736042022705078125,
    "debito" : 1.3579000000000001069366817318950779736042022705078125,
    "chip" : "aeiou",
    "codigoMoedaDestino" : "aeiou",
    "dataTransacaoUTC" : "aeiou",
    "historico" : "aeiou",
    "descricaoTransacao" : "aeiou",
    "taxaEmbarque" : 1.3579000000000001069366817318950779736042022705078125,
    "codigoAutorizacao" : "aeiou",
    "cartao" : "aeiou",
    "tipoEvento" : "aeiou",
    "idTransacao" : 123,
    "idEventoExterno" : 123,
    "codigoMoeda" : "aeiou",
    "numeroEstabelecimento" : 123,
    "dataEntradaCompra" : "aeiou"
  } ],
  "comprasNacionais" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter idConta: (path) ID da Conta 
     - parameter idCartao: (path) ID do Cart\u00C3\u00A3o que deseja consultar o extrato 
     - parameter dataVencimento: (query) Data limite para o vencimento das transa\u00C3\u00A7\u00C3\u00B5es 

     - returns: RequestBuilder<ConsultarExtratoContaResponse> 
     */
    public class func consultarExtratoFaturasUsingGETWithRequestBuilder(idConta idConta: Int, idCartao: Int, dataVencimento: String) -> RequestBuilder<ConsultarExtratoContaResponse> {
        var path = "/api/v1/contas/{idConta}/cartoes/{idCartao}/faturas"
        path = path.stringByReplacingOccurrencesOfString("{idConta}", withString: "\(idConta)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idCartao}", withString: "\(idCartao)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "dataVencimento": dataVencimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ConsultarExtratoContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     /contas/{idConta}/cartoes/{idCartao}/limites
     
     - parameter idConta: (path) ID da Conta 
     - parameter idCartao: (path) ID do Cart\u00C3\u00A3o que deseja consultar o saldo/limite 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarSaldosLimitesUsingGET(idConta idConta: Int, idCartao: Int, completion: ((data: ConsultarSaldoLimitesResponse?, error: ErrorType?) -> Void)) {
        consultarSaldosLimitesUsingGETWithRequestBuilder(idConta: idConta, idCartao: idCartao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     /contas/{idConta}/cartoes/{idCartao}/limites
     
     - GET /api/v1/contas/{idConta}/cartoes/{idCartao}/limites
     - Consulte os limites de um determinado cart\u00C3\u00A3o
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "disponibParcelasNac" : 1.3579000000000001069366817318950779736042022705078125,
  "disponibCompraNac" : 1.3579000000000001069366817318950779736042022705078125,
  "disponibParceladoNac" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteSaqueNacPeriodo" : 1.3579000000000001069366817318950779736042022705078125,
  "disponibGlobalCredito" : 1.3579000000000001069366817318950779736042022705078125,
  "rendaComprovada" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteGlobalCredito" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteCompraNac" : 1.3579000000000001069366817318950779736042022705078125,
  "codigoRetorno" : 123,
  "descricaoRetorno" : "aeiou",
  "limiteParcelasNac" : 1.3579000000000001069366817318950779736042022705078125,
  "disponibSaqueNacGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "solicitacaoPendente" : true,
  "codRetorno" : 123,
  "limiteParceladoNac" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteSaqueNacGlobal" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter idConta: (path) ID da Conta 
     - parameter idCartao: (path) ID do Cart\u00C3\u00A3o que deseja consultar o saldo/limite 

     - returns: RequestBuilder<ConsultarSaldoLimitesResponse> 
     */
    public class func consultarSaldosLimitesUsingGETWithRequestBuilder(idConta idConta: Int, idCartao: Int) -> RequestBuilder<ConsultarSaldoLimitesResponse> {
        var path = "/api/v1/contas/{idConta}/cartoes/{idCartao}/limites"
        path = path.stringByReplacingOccurrencesOfString("{idConta}", withString: "\(idConta)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idCartao}", withString: "\(idCartao)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ConsultarSaldoLimitesResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     /contas/{idConta}/cartoes/{idCartao}/desbloquear
     
     - parameter idConta: (path) ID da Conta 
     - parameter idCartao: (path) ID do Cart\u00C3\u00A3o que deseja consultar o saldo/limite 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desbloquearCartaoUsingPOST(idConta idConta: Int, idCartao: Int, completion: ((data: DesbloquearCartaoResponse?, error: ErrorType?) -> Void)) {
        desbloquearCartaoUsingPOSTWithRequestBuilder(idConta: idConta, idCartao: idCartao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     /contas/{idConta}/cartoes/{idCartao}/desbloquear
     
     - POST /api/v1/contas/{idConta}/cartoes/{idCartao}/desbloquear
     - Desbloquear cart\u00C3\u00A3o de uma determinada conta
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "descricaoRetorno" : "aeiou",
  "codigoRetorno" : 123
}}]
     
     - parameter idConta: (path) ID da Conta 
     - parameter idCartao: (path) ID do Cart\u00C3\u00A3o que deseja consultar o saldo/limite 

     - returns: RequestBuilder<DesbloquearCartaoResponse> 
     */
    public class func desbloquearCartaoUsingPOSTWithRequestBuilder(idConta idConta: Int, idCartao: Int) -> RequestBuilder<DesbloquearCartaoResponse> {
        var path = "/api/v1/contas/{idConta}/cartoes/{idCartao}/desbloquear"
        path = path.stringByReplacingOccurrencesOfString("{idConta}", withString: "\(idConta)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idCartao}", withString: "\(idCartao)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<DesbloquearCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
