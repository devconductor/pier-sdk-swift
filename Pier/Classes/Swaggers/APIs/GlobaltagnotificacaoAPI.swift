//
// GlobaltagnotificacaoAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltagnotificacaoAPI: APIBase {
    /**
     
     {{{email_resource_alterar_configuracao}}}
     
     - parameter id: (path) {{{email_resource_alterar_configuracao_param_id}}} 
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarConfiguracaoUsingPUT(id id: Int, persist: ConfiguracaoEmailPersist, completion: ((data: ConfiguracaoEmailResponse?, error: ErrorType?) -> Void)) {
        alterarConfiguracaoUsingPUTWithRequestBuilder(id: id, persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{email_resource_alterar_configuracao}}}
     
     - PUT /api/configuracoes-email/{id}
     - {{{email_resource_alterar_configuracao_notes}}}
     - examples: [{contentType=application/json, example={
  "portSSL" : "aeiou",
  "requerTLS" : false,
  "dataAlteracao" : "aeiou",
  "protocolo" : "aeiou",
  "requerAutenticacao" : false,
  "senha" : "aeiou",
  "requerSSL" : false,
  "port" : "aeiou",
  "host" : "aeiou",
  "portTLSSTARTTLS" : "aeiou",
  "dataInclusao" : "aeiou",
  "usuario" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter id: (path) {{{email_resource_alterar_configuracao_param_id}}} 
     - parameter persist: (body) persist 

     - returns: RequestBuilder<ConfiguracaoEmailResponse> 
     */
    public class func alterarConfiguracaoUsingPUTWithRequestBuilder(id id: Int, persist: ConfiguracaoEmailPersist) -> RequestBuilder<ConfiguracaoEmailResponse> {
        var path = "/api/configuracoes-email/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ConfiguracaoEmailResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{notificacao_resource_alterar_template_notificacao}}}
     
     - parameter id: (path) {{{notificacao_resource_alterar_template_notificacao_param_id}}} 
     - parameter conteudo: (body) {{{notificacao_resource_alterar_template_notificacao_param_conteudo}}} 
     - parameter idConfiguracaoEmail: (query) {{{template_notificacao_persist_id_configuracao_email_value}}} (optional)
     - parameter tipoLayout: (query) {{{template_notificacao_persist_tipo_layout_value}}} (optional)
     - parameter tipoNotificacao: (query) {{{template_notificacao_persist_tipo_notificacao_value}}} (optional)
     - parameter remetente: (query) {{{template_notificacao_persist_remetente_value}}} (optional)
     - parameter assunto: (query) {{{template_notificacao_persist_assunto_value}}} (optional)
     - parameter templatePadrao: (query) {{{template_notificacao_persist_template_padrao_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarTemplateNotificacaoUsingPUT(id id: Int, conteudo: String, idConfiguracaoEmail: Int?, tipoLayout: String?, tipoNotificacao: String?, remetente: String?, assunto: String?, templatePadrao: Bool?, completion: ((data: TemplateNotificacaoDetalheResponse?, error: ErrorType?) -> Void)) {
        alterarTemplateNotificacaoUsingPUTWithRequestBuilder(id: id, conteudo: conteudo, idConfiguracaoEmail: idConfiguracaoEmail, tipoLayout: tipoLayout, tipoNotificacao: tipoNotificacao, remetente: remetente, assunto: assunto, templatePadrao: templatePadrao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_alterar_template_notificacao}}}
     
     - PUT /api/templates-notificacoes/{id}
     - {{{notificacao_resource_alterar_template_notificacao_notes}}}
     - examples: [{contentType=application/json, example={
  "idConfiguracaoEmail" : 123456789,
  "remetente" : "aeiou",
  "assunto" : "aeiou",
  "conteudo" : "aeiou",
  "templatePadrao" : "aeiou",
  "dataInclusao" : "aeiou",
  "id" : 123456789,
  "tipoNotificacao" : "aeiou",
  "tipoLayout" : "aeiou",
  "dataAlteracao" : "aeiou"
}}]
     
     - parameter id: (path) {{{notificacao_resource_alterar_template_notificacao_param_id}}} 
     - parameter conteudo: (body) {{{notificacao_resource_alterar_template_notificacao_param_conteudo}}} 
     - parameter idConfiguracaoEmail: (query) {{{template_notificacao_persist_id_configuracao_email_value}}} (optional)
     - parameter tipoLayout: (query) {{{template_notificacao_persist_tipo_layout_value}}} (optional)
     - parameter tipoNotificacao: (query) {{{template_notificacao_persist_tipo_notificacao_value}}} (optional)
     - parameter remetente: (query) {{{template_notificacao_persist_remetente_value}}} (optional)
     - parameter assunto: (query) {{{template_notificacao_persist_assunto_value}}} (optional)
     - parameter templatePadrao: (query) {{{template_notificacao_persist_template_padrao_value}}} (optional)

     - returns: RequestBuilder<TemplateNotificacaoDetalheResponse> 
     */
    public class func alterarTemplateNotificacaoUsingPUTWithRequestBuilder(id id: Int, conteudo: String, idConfiguracaoEmail: Int?, tipoLayout: String?, tipoNotificacao: String?, remetente: String?, assunto: String?, templatePadrao: Bool?) -> RequestBuilder<TemplateNotificacaoDetalheResponse> {
        var path = "/api/templates-notificacoes/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = conteudo.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TemplateNotificacaoDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{notificacao_resource_atualizar_s_m_s}}}
     
     - parameter nsu: (query) {{{notificacao_resource_atualizar_s_m_s_param_nsu}}} (optional)
     - parameter status: (query) {{{notificacao_resource_atualizar_s_m_s_param_status}}} (optional)
     - parameter data: (query) {{{notificacao_resource_atualizar_s_m_s_param_data}}} (optional)
     - parameter textoStatus: (query) {{{notificacao_resource_atualizar_s_m_s_param_texto_status}}} (optional)
     - parameter operadora: (query) {{{notificacao_resource_atualizar_s_m_s_param_operadora}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func atualizarSMSUsingPOST(nsu nsu: String?, status: String?, data: String?, textoStatus: String?, operadora: String?, completion: ((data: NotificacaoSMSResponse?, error: ErrorType?) -> Void)) {
        atualizarSMSUsingPOSTWithRequestBuilder(nsu: nsu, status: status, data: data, textoStatus: textoStatus, operadora: operadora).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_atualizar_s_m_s}}}
     
     - POST /api/notificacoes/sms/atualizar-status
     - {{{notificacao_resource_atualizar_s_m_s_notes}}}
     - examples: [{contentType=application/json, example={
  "quantidadeTentativasEnvio" : 123,
  "conteudo" : "aeiou",
  "idConta" : 123456789,
  "dataAlteracaoStatus" : "aeiou",
  "dataAgendamento" : "aeiou",
  "descricaoStatus" : "aeiou",
  "protocolo" : "aeiou",
  "nsu" : 123456789,
  "idPessoa" : 123456789,
  "tipoEvento" : "aeiou",
  "resposta" : "aeiou",
  "celular" : "aeiou",
  "dataInclusao" : "aeiou",
  "id" : 123456789,
  "idEmissor" : 123456789,
  "operadora" : "aeiou",
  "status" : "aeiou"
}}]
     
     - parameter nsu: (query) {{{notificacao_resource_atualizar_s_m_s_param_nsu}}} (optional)
     - parameter status: (query) {{{notificacao_resource_atualizar_s_m_s_param_status}}} (optional)
     - parameter data: (query) {{{notificacao_resource_atualizar_s_m_s_param_data}}} (optional)
     - parameter textoStatus: (query) {{{notificacao_resource_atualizar_s_m_s_param_texto_status}}} (optional)
     - parameter operadora: (query) {{{notificacao_resource_atualizar_s_m_s_param_operadora}}} (optional)

     - returns: RequestBuilder<NotificacaoSMSResponse> 
     */
    public class func atualizarSMSUsingPOSTWithRequestBuilder(nsu nsu: String?, status: String?, data: String?, textoStatus: String?, operadora: String?) -> RequestBuilder<NotificacaoSMSResponse> {
        let path = "/api/notificacoes/sms/atualizar-status"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "nsu": nsu,
            "status": status,
            "data": data,
            "texto_status": textoStatus,
            "operadora": operadora
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<NotificacaoSMSResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{email_resource_consultar_configuracao}}}
     
     - parameter id: (path) {{{email_resource_consultar_configuracao_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarConfiguracaoUsingGET(id id: Int, completion: ((data: ConfiguracaoEmailResponse?, error: ErrorType?) -> Void)) {
        consultarConfiguracaoUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{email_resource_consultar_configuracao}}}
     
     - GET /api/configuracoes-email/{id}
     - {{{email_resource_consultar_configuracao_notes}}}
     - examples: [{contentType=application/json, example={
  "portSSL" : "aeiou",
  "requerTLS" : false,
  "dataAlteracao" : "aeiou",
  "protocolo" : "aeiou",
  "requerAutenticacao" : false,
  "senha" : "aeiou",
  "requerSSL" : false,
  "port" : "aeiou",
  "host" : "aeiou",
  "portTLSSTARTTLS" : "aeiou",
  "dataInclusao" : "aeiou",
  "usuario" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter id: (path) {{{email_resource_consultar_configuracao_param_id}}} 

     - returns: RequestBuilder<ConfiguracaoEmailResponse> 
     */
    public class func consultarConfiguracaoUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<ConfiguracaoEmailResponse> {
        var path = "/api/configuracoes-email/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ConfiguracaoEmailResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{codigo_seguranca_resource_consultar_por_email}}}
     
     - parameter id: (path) {{{codigo_seguranca_resource_consultar_por_email_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarPorEmailUsingGET(id id: Int, completion: ((data: CodigoSegurancaResponse?, error: ErrorType?) -> Void)) {
        consultarPorEmailUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{codigo_seguranca_resource_consultar_por_email}}}
     
     - GET /api/codigos-seguranca-email/{id}
     - {{{codigo_seguranca_resource_consultar_por_email_notes}}}
     - examples: [{contentType=application/json, example={
  "ativo" : false,
  "dataValidade" : "aeiou",
  "modoEnvio" : "aeiou",
  "id" : 123456789,
  "idEmissor" : 123456789,
  "contato" : "aeiou"
}}]
     
     - parameter id: (path) {{{codigo_seguranca_resource_consultar_por_email_param_id}}} 

     - returns: RequestBuilder<CodigoSegurancaResponse> 
     */
    public class func consultarPorEmailUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<CodigoSegurancaResponse> {
        var path = "/api/codigos-seguranca-email/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CodigoSegurancaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{codigo_seguranca_resource_consultar_por_s_m_s}}}
     
     - parameter id: (path) {{{codigo_seguranca_resource_consultar_por_s_m_s_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarPorSMSUsingGET(id id: Int, completion: ((data: CodigoSegurancaResponse?, error: ErrorType?) -> Void)) {
        consultarPorSMSUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{codigo_seguranca_resource_consultar_por_s_m_s}}}
     
     - GET /api/codigos-seguranca-sms/{id}
     - {{{codigo_seguranca_resource_consultar_por_s_m_s_notes}}}
     - examples: [{contentType=application/json, example={
  "ativo" : false,
  "dataValidade" : "aeiou",
  "modoEnvio" : "aeiou",
  "id" : 123456789,
  "idEmissor" : 123456789,
  "contato" : "aeiou"
}}]
     
     - parameter id: (path) {{{codigo_seguranca_resource_consultar_por_s_m_s_param_id}}} 

     - returns: RequestBuilder<CodigoSegurancaResponse> 
     */
    public class func consultarPorSMSUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<CodigoSegurancaResponse> {
        var path = "/api/codigos-seguranca-sms/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CodigoSegurancaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{notificacao_resource_consultar_template_notificacao}}}
     
     - parameter id: (path) {{{notificacao_resource_consultar_template_notificacao_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarTemplateNotificacaoUsingGET(id id: Int, completion: ((data: TemplateNotificacaoDetalheResponse?, error: ErrorType?) -> Void)) {
        consultarTemplateNotificacaoUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_consultar_template_notificacao}}}
     
     - GET /api/templates-notificacoes/{id}
     - {{{notificacao_resource_consultar_template_notificacao_notes}}}
     - examples: [{contentType=application/json, example={
  "idConfiguracaoEmail" : 123456789,
  "remetente" : "aeiou",
  "assunto" : "aeiou",
  "conteudo" : "aeiou",
  "templatePadrao" : "aeiou",
  "dataInclusao" : "aeiou",
  "id" : 123456789,
  "tipoNotificacao" : "aeiou",
  "tipoLayout" : "aeiou",
  "dataAlteracao" : "aeiou"
}}]
     
     - parameter id: (path) {{{notificacao_resource_consultar_template_notificacao_param_id}}} 

     - returns: RequestBuilder<TemplateNotificacaoDetalheResponse> 
     */
    public class func consultarTemplateNotificacaoUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<TemplateNotificacaoDetalheResponse> {
        var path = "/api/templates-notificacoes/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TemplateNotificacaoDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{codigo_seguranca_resource_gerar_token_e_m_a_i_l}}}
     
     - parameter email: (body) email 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func gerarTokenEMAILUsingPOST(email email: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        gerarTokenEMAILUsingPOSTWithRequestBuilder(email: email).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{codigo_seguranca_resource_gerar_token_e_m_a_i_l}}}
     
     - POST /api/notificacoes-email/gerar-codigo-seguranca
     - {{{codigo_seguranca_resource_gerar_token_e_m_a_i_l_notes}}}
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter email: (body) email 

     - returns: RequestBuilder<String> 
     */
    public class func gerarTokenEMAILUsingPOSTWithRequestBuilder(email email: String) -> RequestBuilder<String> {
        let path = "/api/notificacoes-email/gerar-codigo-seguranca"
        let URLString = PierAPI.basePath + path
        
        let parameters = email.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<String>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{codigo_seguranca_resource_gerar_token_s_m_s}}}
     
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func gerarTokenSMSUsingPOST(persist persist: CodigoSegurancaSMSPersist, completion: ((data: String?, error: ErrorType?) -> Void)) {
        gerarTokenSMSUsingPOSTWithRequestBuilder(persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{codigo_seguranca_resource_gerar_token_s_m_s}}}
     
     - POST /api/notificacoes-sms/gerar-codigo-seguranca
     - {{{codigo_seguranca_resource_gerar_token_s_m_s_notes}}}
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter persist: (body) persist 

     - returns: RequestBuilder<String> 
     */
    public class func gerarTokenSMSUsingPOSTWithRequestBuilder(persist persist: CodigoSegurancaSMSPersist) -> RequestBuilder<String> {
        let path = "/api/notificacoes-sms/gerar-codigo-seguranca"
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<String>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{email_resource_listar_configuracao}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarConfiguracaoUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageConfiguracaoEmailResponse?, error: ErrorType?) -> Void)) {
        listarConfiguracaoUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{email_resource_listar_configuracao}}}
     
     - GET /api/configuracoes-email
     - {{{email_resource_listar_configuracao_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "portSSL" : "aeiou",
    "requerTLS" : false,
    "dataAlteracao" : "aeiou",
    "protocolo" : "aeiou",
    "requerAutenticacao" : false,
    "senha" : "aeiou",
    "requerSSL" : false,
    "port" : "aeiou",
    "host" : "aeiou",
    "portTLSSTARTTLS" : "aeiou",
    "dataInclusao" : "aeiou",
    "usuario" : "aeiou",
    "id" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageConfiguracaoEmailResponse> 
     */
    public class func listarConfiguracaoUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageConfiguracaoEmailResponse> {
        let path = "/api/configuracoes-email"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageConfiguracaoEmailResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{codigo_seguranca_resource_listar_por_email}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarPorEmailUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageCodigoSegurancaResponse?, error: ErrorType?) -> Void)) {
        listarPorEmailUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{codigo_seguranca_resource_listar_por_email}}}
     
     - GET /api/codigos-seguranca-email
     - {{{codigo_seguranca_resource_listar_por_email_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "ativo" : false,
    "dataValidade" : "aeiou",
    "modoEnvio" : "aeiou",
    "id" : 123456789,
    "idEmissor" : 123456789,
    "contato" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageCodigoSegurancaResponse> 
     */
    public class func listarPorEmailUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageCodigoSegurancaResponse> {
        let path = "/api/codigos-seguranca-email"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageCodigoSegurancaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{codigo_seguranca_resource_listar_por_s_m_s}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarPorSMSUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageCodigoSegurancaResponse?, error: ErrorType?) -> Void)) {
        listarPorSMSUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{codigo_seguranca_resource_listar_por_s_m_s}}}
     
     - GET /api/codigos-seguranca-sms
     - {{{codigo_seguranca_resource_listar_por_s_m_s_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "ativo" : false,
    "dataValidade" : "aeiou",
    "modoEnvio" : "aeiou",
    "id" : 123456789,
    "idEmissor" : 123456789,
    "contato" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageCodigoSegurancaResponse> 
     */
    public class func listarPorSMSUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageCodigoSegurancaResponse> {
        let path = "/api/codigos-seguranca-sms"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageCodigoSegurancaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{notificacao_resource_listar_push}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter dataEnvio: (query) {{{notificacao_push_request_data_envio_value}}} (optional)
     - parameter tipoEvento: (query) {{{notificacao_push_request_tipo_evento_value}}} (optional)
     - parameter status: (query) {{{notificacao_push_request_status_value}}} (optional)
     - parameter plataforma: (query) {{{notificacao_push_request_plataforma_value}}} (optional)
     - parameter protocolo: (query) {{{notificacao_push_request_protocolo_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarPushUsingGET(sort sort: [String]?, page: Int?, limit: Int?, dataEnvio: String?, tipoEvento: String?, status: String?, plataforma: String?, protocolo: String?, completion: ((data: PagePushResponse?, error: ErrorType?) -> Void)) {
        listarPushUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, dataEnvio: dataEnvio, tipoEvento: tipoEvento, status: status, plataforma: plataforma, protocolo: protocolo).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_listar_push}}}
     
     - GET /api/notificacoes/push
     - {{{notificacao_resource_listar_push_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "protocolo" : "aeiou",
    "idPessoa" : 123456789,
    "conteudo" : "aeiou",
    "idConta" : 123456789,
    "tipoEvento" : "aeiou",
    "plataforma" : "aeiou",
    "titulo" : "aeiou",
    "idEmissor" : 123456789,
    "tokenDispositivo" : "aeiou",
    "dataEnvio" : "aeiou",
    "status" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter dataEnvio: (query) {{{notificacao_push_request_data_envio_value}}} (optional)
     - parameter tipoEvento: (query) {{{notificacao_push_request_tipo_evento_value}}} (optional)
     - parameter status: (query) {{{notificacao_push_request_status_value}}} (optional)
     - parameter plataforma: (query) {{{notificacao_push_request_plataforma_value}}} (optional)
     - parameter protocolo: (query) {{{notificacao_push_request_protocolo_value}}} (optional)

     - returns: RequestBuilder<PagePushResponse> 
     */
    public class func listarPushUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, dataEnvio: String?, tipoEvento: String?, status: String?, plataforma: String?, protocolo: String?) -> RequestBuilder<PagePushResponse> {
        let path = "/api/notificacoes/push"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "dataEnvio": dataEnvio,
            "tipoEvento": tipoEvento,
            "status": status,
            "plataforma": plataforma,
            "protocolo": protocolo
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PagePushResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{notificacao_resource_listar_s_m_s}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter dataInclusao: (query) {{{notificacao_s_m_s_request_data_inclusao_value}}} (optional)
     - parameter tipoEvento: (query) {{{notificacao_s_m_s_request_tipo_evento_value}}} (optional)
     - parameter status: (query) {{{notificacao_s_m_s_request_status_value}}} (optional)
     - parameter operadora: (query) {{{notificacao_s_m_s_request_operadora_value}}} (optional)
     - parameter protocolo: (query) {{{notificacao_s_m_s_request_protocolo_value}}} (optional)
     - parameter nsu: (query) {{{notificacao_s_m_s_request_nsu_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarSMSUsingGET(sort sort: [String]?, page: Int?, limit: Int?, dataInclusao: String?, tipoEvento: String?, status: String?, operadora: String?, protocolo: String?, nsu: Int?, completion: ((data: PageSMSResponse?, error: ErrorType?) -> Void)) {
        listarSMSUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, dataInclusao: dataInclusao, tipoEvento: tipoEvento, status: status, operadora: operadora, protocolo: protocolo, nsu: nsu).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_listar_s_m_s}}}
     
     - GET /api/notificacoes/sms
     - {{{notificacao_resource_listar_s_m_s_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "quantidadeTentativasEnvio" : 123,
    "conteudo" : "aeiou",
    "idConta" : 123456789,
    "dataAlteracaoStatus" : "aeiou",
    "dataAgendamento" : "aeiou",
    "descricaoStatus" : "aeiou",
    "protocolo" : "aeiou",
    "nsu" : 123456789,
    "idPessoa" : 123456789,
    "tipoEvento" : "aeiou",
    "resposta" : "aeiou",
    "celular" : "aeiou",
    "dataInclusao" : "aeiou",
    "id" : 123456789,
    "idEmissor" : 123456789,
    "operadora" : "aeiou",
    "status" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter dataInclusao: (query) {{{notificacao_s_m_s_request_data_inclusao_value}}} (optional)
     - parameter tipoEvento: (query) {{{notificacao_s_m_s_request_tipo_evento_value}}} (optional)
     - parameter status: (query) {{{notificacao_s_m_s_request_status_value}}} (optional)
     - parameter operadora: (query) {{{notificacao_s_m_s_request_operadora_value}}} (optional)
     - parameter protocolo: (query) {{{notificacao_s_m_s_request_protocolo_value}}} (optional)
     - parameter nsu: (query) {{{notificacao_s_m_s_request_nsu_value}}} (optional)

     - returns: RequestBuilder<PageSMSResponse> 
     */
    public class func listarSMSUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, dataInclusao: String?, tipoEvento: String?, status: String?, operadora: String?, protocolo: String?, nsu: Int?) -> RequestBuilder<PageSMSResponse> {
        let path = "/api/notificacoes/sms"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "dataInclusao": dataInclusao,
            "tipoEvento": tipoEvento,
            "status": status,
            "operadora": operadora,
            "protocolo": protocolo,
            "nsu": nsu
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageSMSResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{notificacao_resource_listar_template_notificacao}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarTemplateNotificacaoUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageTemplateNotificacaoResponse?, error: ErrorType?) -> Void)) {
        listarTemplateNotificacaoUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_listar_template_notificacao}}}
     
     - GET /api/templates-notificacoes
     - {{{notificacao_resource_listar_template_notificacao_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idConfiguracaoEmail" : 123456789,
    "remetente" : "aeiou",
    "assunto" : "aeiou",
    "templatePadrao" : "aeiou",
    "dataInclusao" : "aeiou",
    "id" : 123456789,
    "tipoNotificacao" : "aeiou",
    "tipoLayout" : "aeiou",
    "dataAlteracao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageTemplateNotificacaoResponse> 
     */
    public class func listarTemplateNotificacaoUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageTemplateNotificacaoResponse> {
        let path = "/api/templates-notificacoes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTemplateNotificacaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{enum_resource_listar_tipos_layouts}}}
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarTiposLayoutsUsingGET(completion: ((data: [AnyObject]?, error: ErrorType?) -> Void)) {
        listarTiposLayoutsUsingGETWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{enum_resource_listar_tipos_layouts}}}
     
     - GET /api/tipos-layouts
     - {{{enum_resource_listar_tipos_layouts_notes}}}
     - examples: [{contentType=application/json, example=[ "{}" ]}]

     - returns: RequestBuilder<[AnyObject]> 
     */
    public class func listarTiposLayoutsUsingGETWithRequestBuilder() -> RequestBuilder<[AnyObject]> {
        let path = "/api/tipos-layouts"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<[AnyObject]>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{notificacao_resource_notificacao_email}}}
     
     - parameter request: (body) request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func notificacaoEmailUsingPOST(request request: NotificacaoEmailRequest, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        notificacaoEmailUsingPOSTWithRequestBuilder(request: request).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_notificacao_email}}}
     
     - POST /api/notificacoes-email
     - {{{notificacao_resource_notificacao_email_notes}}}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter request: (body) request 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func notificacaoEmailUsingPOSTWithRequestBuilder(request request: NotificacaoEmailRequest) -> RequestBuilder<AnyObject> {
        let path = "/api/notificacoes-email"
        let URLString = PierAPI.basePath + path
        
        let parameters = request.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{codigo_seguranca_resource_reenviar_token_s_m_s}}}
     
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func reenviarTokenSMSUsingPOST(persist persist: CodigoSegurancaSMSPersist, completion: ((data: String?, error: ErrorType?) -> Void)) {
        reenviarTokenSMSUsingPOSTWithRequestBuilder(persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{codigo_seguranca_resource_reenviar_token_s_m_s}}}
     
     - POST /api/notificacoes-sms/reenviar-codigo-seguranca
     - {{{codigo_seguranca_resource_reenviar_token_s_m_s_notes}}}
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter persist: (body) persist 

     - returns: RequestBuilder<String> 
     */
    public class func reenviarTokenSMSUsingPOSTWithRequestBuilder(persist persist: CodigoSegurancaSMSPersist) -> RequestBuilder<String> {
        let path = "/api/notificacoes-sms/reenviar-codigo-seguranca"
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<String>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{notificacao_resource_responder_s_m_s_get}}}
     
     - parameter nsu: (query) {{{notificacao_resource_responder_s_m_s_get_param_nsu}}} (optional)
     - parameter data: (query) {{{notificacao_resource_responder_s_m_s_get_param_data}}} (optional)
     - parameter resposta: (query) {{{notificacao_resource_responder_s_m_s_get_param_resposta}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func responderSMSGetUsingGET(nsu nsu: String?, data: String?, resposta: String?, completion: ((data: NotificacaoSMSResponse?, error: ErrorType?) -> Void)) {
        responderSMSGetUsingGETWithRequestBuilder(nsu: nsu, data: data, resposta: resposta).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_responder_s_m_s_get}}}
     
     - GET /api/notificacoes/sms/responder
     - {{{notificacao_resource_responder_s_m_s_get_notes}}}
     - examples: [{contentType=application/json, example={
  "quantidadeTentativasEnvio" : 123,
  "conteudo" : "aeiou",
  "idConta" : 123456789,
  "dataAlteracaoStatus" : "aeiou",
  "dataAgendamento" : "aeiou",
  "descricaoStatus" : "aeiou",
  "protocolo" : "aeiou",
  "nsu" : 123456789,
  "idPessoa" : 123456789,
  "tipoEvento" : "aeiou",
  "resposta" : "aeiou",
  "celular" : "aeiou",
  "dataInclusao" : "aeiou",
  "id" : 123456789,
  "idEmissor" : 123456789,
  "operadora" : "aeiou",
  "status" : "aeiou"
}}]
     
     - parameter nsu: (query) {{{notificacao_resource_responder_s_m_s_get_param_nsu}}} (optional)
     - parameter data: (query) {{{notificacao_resource_responder_s_m_s_get_param_data}}} (optional)
     - parameter resposta: (query) {{{notificacao_resource_responder_s_m_s_get_param_resposta}}} (optional)

     - returns: RequestBuilder<NotificacaoSMSResponse> 
     */
    public class func responderSMSGetUsingGETWithRequestBuilder(nsu nsu: String?, data: String?, resposta: String?) -> RequestBuilder<NotificacaoSMSResponse> {
        let path = "/api/notificacoes/sms/responder"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "nsu": nsu,
            "data": data,
            "resposta": resposta
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<NotificacaoSMSResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{email_resource_salvar_configuracao}}}
     
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarConfiguracaoUsingPOST(persist persist: ConfiguracaoEmailPersist, completion: ((data: ConfiguracaoEmailResponse?, error: ErrorType?) -> Void)) {
        salvarConfiguracaoUsingPOSTWithRequestBuilder(persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{email_resource_salvar_configuracao}}}
     
     - POST /api/configuracoes-email
     - {{{email_resource_salvar_configuracao_notes}}}
     - examples: [{contentType=application/json, example={
  "portSSL" : "aeiou",
  "requerTLS" : false,
  "dataAlteracao" : "aeiou",
  "protocolo" : "aeiou",
  "requerAutenticacao" : false,
  "senha" : "aeiou",
  "requerSSL" : false,
  "port" : "aeiou",
  "host" : "aeiou",
  "portTLSSTARTTLS" : "aeiou",
  "dataInclusao" : "aeiou",
  "usuario" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter persist: (body) persist 

     - returns: RequestBuilder<ConfiguracaoEmailResponse> 
     */
    public class func salvarConfiguracaoUsingPOSTWithRequestBuilder(persist persist: ConfiguracaoEmailPersist) -> RequestBuilder<ConfiguracaoEmailResponse> {
        let path = "/api/configuracoes-email"
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ConfiguracaoEmailResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{notificacao_resource_salvar_push_f_c_m}}}
     
     - parameter pushPersists: (body) pushPersists 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarPushFCMUsingPOST(pushPersists pushPersists: [PushFCMGCMPersistValue], completion: ((data: NotificacaoResponse?, error: ErrorType?) -> Void)) {
        salvarPushFCMUsingPOSTWithRequestBuilder(pushPersists: pushPersists).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_salvar_push_f_c_m}}}
     
     - POST /api/notificacoes/push/fcm
     - {{{notificacao_resource_salvar_push_f_c_m_notes}}}
     - examples: [{contentType=application/json, example={
  "protocolo" : "aeiou",
  "mensagem" : "aeiou"
}}]
     
     - parameter pushPersists: (body) pushPersists 

     - returns: RequestBuilder<NotificacaoResponse> 
     */
    public class func salvarPushFCMUsingPOSTWithRequestBuilder(pushPersists pushPersists: [PushFCMGCMPersistValue]) -> RequestBuilder<NotificacaoResponse> {
        let path = "/api/notificacoes/push/fcm"
        let URLString = PierAPI.basePath + path
        
        let parameters = pushPersists.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<NotificacaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{notificacao_resource_salvar_push_g_c_m}}}
     
     - parameter pushPersists: (body) pushPersists 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarPushGCMUsingPOST(pushPersists pushPersists: [PushFCMGCMPersistValue], completion: ((data: NotificacaoResponse?, error: ErrorType?) -> Void)) {
        salvarPushGCMUsingPOSTWithRequestBuilder(pushPersists: pushPersists).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_salvar_push_g_c_m}}}
     
     - POST /api/notificacoes/push/gcm
     - {{{notificacao_resource_salvar_push_g_c_m_notes}}}
     - examples: [{contentType=application/json, example={
  "protocolo" : "aeiou",
  "mensagem" : "aeiou"
}}]
     
     - parameter pushPersists: (body) pushPersists 

     - returns: RequestBuilder<NotificacaoResponse> 
     */
    public class func salvarPushGCMUsingPOSTWithRequestBuilder(pushPersists pushPersists: [PushFCMGCMPersistValue]) -> RequestBuilder<NotificacaoResponse> {
        let path = "/api/notificacoes/push/gcm"
        let URLString = PierAPI.basePath + path
        
        let parameters = pushPersists.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<NotificacaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{notificacao_resource_salvar_push}}}
     
     - parameter pushPersists: (body) pushPersists 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarPushUsingPOST(pushPersists pushPersists: [PushAPNSPersistValue], completion: ((data: NotificacaoResponse?, error: ErrorType?) -> Void)) {
        salvarPushUsingPOSTWithRequestBuilder(pushPersists: pushPersists).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_salvar_push}}}
     
     - POST /api/notificacoes/push/apns
     - {{{notificacao_resource_salvar_push_notes}}}
     - examples: [{contentType=application/json, example={
  "protocolo" : "aeiou",
  "mensagem" : "aeiou"
}}]
     
     - parameter pushPersists: (body) pushPersists 

     - returns: RequestBuilder<NotificacaoResponse> 
     */
    public class func salvarPushUsingPOSTWithRequestBuilder(pushPersists pushPersists: [PushAPNSPersistValue]) -> RequestBuilder<NotificacaoResponse> {
        let path = "/api/notificacoes/push/apns"
        let URLString = PierAPI.basePath + path
        
        let parameters = pushPersists.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<NotificacaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{notificacao_resource_salvar_s_m_s}}}
     
     - parameter listaSMS: (body) listaSMS 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarSMSUsingPOST(listaSMS listaSMS: [SMSPersistValue], completion: ((data: NotificacaoResponse?, error: ErrorType?) -> Void)) {
        salvarSMSUsingPOSTWithRequestBuilder(listaSMS: listaSMS).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_salvar_s_m_s}}}
     
     - POST /api/notificacoes/sms
     - {{{notificacao_resource_salvar_s_m_s_notes}}}
     - examples: [{contentType=application/json, example={
  "protocolo" : "aeiou",
  "mensagem" : "aeiou"
}}]
     
     - parameter listaSMS: (body) listaSMS 

     - returns: RequestBuilder<NotificacaoResponse> 
     */
    public class func salvarSMSUsingPOSTWithRequestBuilder(listaSMS listaSMS: [SMSPersistValue]) -> RequestBuilder<NotificacaoResponse> {
        let path = "/api/notificacoes/sms"
        let URLString = PierAPI.basePath + path
        
        let parameters = listaSMS.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<NotificacaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{notificacao_resource_salvar_template_notificacao}}}
     
     - parameter conteudo: (body) {{{notificacao_resource_salvar_template_notificacao_param_conteudo}}} 
     - parameter idConfiguracaoEmail: (query) {{{template_notificacao_persist_id_configuracao_email_value}}} (optional)
     - parameter tipoLayout: (query) {{{template_notificacao_persist_tipo_layout_value}}} (optional)
     - parameter tipoNotificacao: (query) {{{template_notificacao_persist_tipo_notificacao_value}}} (optional)
     - parameter remetente: (query) {{{template_notificacao_persist_remetente_value}}} (optional)
     - parameter assunto: (query) {{{template_notificacao_persist_assunto_value}}} (optional)
     - parameter templatePadrao: (query) {{{template_notificacao_persist_template_padrao_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarTemplateNotificacaoUsingPOST(conteudo conteudo: String, idConfiguracaoEmail: Int?, tipoLayout: String?, tipoNotificacao: String?, remetente: String?, assunto: String?, templatePadrao: Bool?, completion: ((data: TemplateNotificacaoDetalheResponse?, error: ErrorType?) -> Void)) {
        salvarTemplateNotificacaoUsingPOSTWithRequestBuilder(conteudo: conteudo, idConfiguracaoEmail: idConfiguracaoEmail, tipoLayout: tipoLayout, tipoNotificacao: tipoNotificacao, remetente: remetente, assunto: assunto, templatePadrao: templatePadrao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{notificacao_resource_salvar_template_notificacao}}}
     
     - POST /api/templates-notificacoes
     - {{{notificacao_resource_salvar_template_notificacao_notes}}}
     - examples: [{contentType=application/json, example={
  "idConfiguracaoEmail" : 123456789,
  "remetente" : "aeiou",
  "assunto" : "aeiou",
  "conteudo" : "aeiou",
  "templatePadrao" : "aeiou",
  "dataInclusao" : "aeiou",
  "id" : 123456789,
  "tipoNotificacao" : "aeiou",
  "tipoLayout" : "aeiou",
  "dataAlteracao" : "aeiou"
}}]
     
     - parameter conteudo: (body) {{{notificacao_resource_salvar_template_notificacao_param_conteudo}}} 
     - parameter idConfiguracaoEmail: (query) {{{template_notificacao_persist_id_configuracao_email_value}}} (optional)
     - parameter tipoLayout: (query) {{{template_notificacao_persist_tipo_layout_value}}} (optional)
     - parameter tipoNotificacao: (query) {{{template_notificacao_persist_tipo_notificacao_value}}} (optional)
     - parameter remetente: (query) {{{template_notificacao_persist_remetente_value}}} (optional)
     - parameter assunto: (query) {{{template_notificacao_persist_assunto_value}}} (optional)
     - parameter templatePadrao: (query) {{{template_notificacao_persist_template_padrao_value}}} (optional)

     - returns: RequestBuilder<TemplateNotificacaoDetalheResponse> 
     */
    public class func salvarTemplateNotificacaoUsingPOSTWithRequestBuilder(conteudo conteudo: String, idConfiguracaoEmail: Int?, tipoLayout: String?, tipoNotificacao: String?, remetente: String?, assunto: String?, templatePadrao: Bool?) -> RequestBuilder<TemplateNotificacaoDetalheResponse> {
        let path = "/api/templates-notificacoes"
        let URLString = PierAPI.basePath + path
        
        let parameters = conteudo.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TemplateNotificacaoDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{codigo_seguranca_resource_validar_token_e_m_a_i_l}}}
     
     - parameter request: (body) request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func validarTokenEMAILUsingPOST(request request: CodigoSegurancaEMAILPersist, completion: ((data: String?, error: ErrorType?) -> Void)) {
        validarTokenEMAILUsingPOSTWithRequestBuilder(request: request).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{codigo_seguranca_resource_validar_token_e_m_a_i_l}}}
     
     - POST /api/notificacoes-email/validar-codigo-seguranca
     - {{{codigo_seguranca_resource_validar_token_e_m_a_i_l_notes}}}
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter request: (body) request 

     - returns: RequestBuilder<String> 
     */
    public class func validarTokenEMAILUsingPOSTWithRequestBuilder(request request: CodigoSegurancaEMAILPersist) -> RequestBuilder<String> {
        let path = "/api/notificacoes-email/validar-codigo-seguranca"
        let URLString = PierAPI.basePath + path
        
        let parameters = request.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<String>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{codigo_seguranca_resource_validar_token_s_m_s}}}
     
     - parameter request: (body) request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func validarTokenSMSUsingPOST(request request: CodigoSegurancaSMSRequest, completion: ((data: String?, error: ErrorType?) -> Void)) {
        validarTokenSMSUsingPOSTWithRequestBuilder(request: request).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{codigo_seguranca_resource_validar_token_s_m_s}}}
     
     - POST /api/notificacoes-sms/validar-codigo-seguranca
     - {{{codigo_seguranca_resource_validar_token_s_m_s_notes}}}
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter request: (body) request 

     - returns: RequestBuilder<String> 
     */
    public class func validarTokenSMSUsingPOSTWithRequestBuilder(request request: CodigoSegurancaSMSRequest) -> RequestBuilder<String> {
        let path = "/api/notificacoes-sms/validar-codigo-seguranca"
        let URLString = PierAPI.basePath + path
        
        let parameters = request.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<String>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
