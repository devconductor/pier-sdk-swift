//
// ContaAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ContaAPI: APIBase {
    /**
     
     Lan\u00C3\u00A7a um ajuste para a conta do id informado
     
     - parameter id: (path) Id Conta 
     - parameter idTipoAjuste: (query) C\u00C3\u00B3digo identificador do tipo de ajuste. 
     - parameter dataAjuste: (query) Data do ajuste. 
     - parameter valorAjuste: (query) Valor do ajuste 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func ajustarContaUsingPOST(id id: Int, idTipoAjuste: Int, dataAjuste: String, valorAjuste: Double, completion: ((data: AjusteResponse?, error: ErrorType?) -> Void)) {
        ajustarContaUsingPOSTWithRequestBuilder(id: id, idTipoAjuste: idTipoAjuste, dataAjuste: dataAjuste, valorAjuste: valorAjuste).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lan\u00C3\u00A7a um ajuste para a conta do id informado
     
     - POST /api/contas/{id}/ajustes-financeiros
     - Este recurso insere um ajuste para a conta do id informado
     - examples: [{contentType=application/json, example={
  "idAjuste" : 123456789
}}]
     
     - parameter id: (path) Id Conta 
     - parameter idTipoAjuste: (query) C\u00C3\u00B3digo identificador do tipo de ajuste. 
     - parameter dataAjuste: (query) Data do ajuste. 
     - parameter valorAjuste: (query) Valor do ajuste 

     - returns: RequestBuilder<AjusteResponse> 
     */
    public class func ajustarContaUsingPOSTWithRequestBuilder(id id: Int, idTipoAjuste: Int, dataAjuste: String, valorAjuste: Double) -> RequestBuilder<AjusteResponse> {
        var path = "/api/contas/{id}/ajustes-financeiros"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idTipoAjuste": idTipoAjuste,
            "dataAjuste": dataAjuste,
            "valorAjuste": valorAjuste
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AjusteResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Realiza a altera\u00C3\u00A7\u00C3\u00A3o dos limites da conta
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter limiteGlobal: (query) Apresenta o valor do limite de cr\u00C3\u00A9dito que o portador do cart\u00C3\u00A3o possui. 
     - parameter limiteCompra: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador possui para uso exclusivo em Compras Nacionais. 
     - parameter limiteParcelado: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador possui para realizar transa\u00C3\u00A7\u00C3\u00B5es de compras parceladas. 
     - parameter limiteParcelas: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que portador pode acumular a partir da soma das parcelas das compras que forem realizadas nesta modalidade. 
     - parameter limiteSaqueGlobal: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador pode utilizar para realizar transa\u00C3\u00A7\u00C3\u00B5es de Saque Nacional. 
     - parameter limiteSaquePeriodo: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador pode utilizar para realizar transa\u00C3\u00A7\u00C3\u00B5es de Saque Nacional dentro de cada ciclo de faturamento. 
     - parameter limiteConsignado: (query) Quando utilizado pelo emissor, este campo apresenta o valor da margem de cr\u00C3\u00A9dito que ele poder\u00C3\u00A1 utilizar para ser cobrado de forma consignada (desconto em folha) em seu sal\u00C3\u00A1rio/vencimentos. 
     - parameter limiteInternacionalCompra: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador possui para uso exclusivo em Compras Internacionais. 
     - parameter limiteInternacionalParcelado: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador possui para realizar transa\u00C3\u00A7\u00C3\u00B5es Internacionais de Compras Parceladas. 
     - parameter limiteInternacionalParcelas: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que portador pode acumular a partir da soma das parcelas das compras internacionais que forem realizadas nesta modalidade. 
     - parameter limiteInternacionalSaqueGlobal: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador pode utilizar para realizar transa\u00C3\u00A7\u00C3\u00B5es de Saque Internacional. 
     - parameter limiteInternacionalSaquePeriodo: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador pode utilizar para realizar transa\u00C3\u00A7\u00C3\u00B5es de Saque Internacional dentro de cada ciclo de faturamento. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarLimiteUsingPUT(id id: Int, limiteGlobal: Double, limiteCompra: Double, limiteParcelado: Double, limiteParcelas: Double, limiteSaqueGlobal: Double, limiteSaquePeriodo: Double, limiteConsignado: Double, limiteInternacionalCompra: Double, limiteInternacionalParcelado: Double, limiteInternacionalParcelas: Double, limiteInternacionalSaqueGlobal: Double, limiteInternacionalSaquePeriodo: Double, completion: ((data: LimiteDisponibilidade?, error: ErrorType?) -> Void)) {
        alterarLimiteUsingPUTWithRequestBuilder(id: id, limiteGlobal: limiteGlobal, limiteCompra: limiteCompra, limiteParcelado: limiteParcelado, limiteParcelas: limiteParcelas, limiteSaqueGlobal: limiteSaqueGlobal, limiteSaquePeriodo: limiteSaquePeriodo, limiteConsignado: limiteConsignado, limiteInternacionalCompra: limiteInternacionalCompra, limiteInternacionalParcelado: limiteInternacionalParcelado, limiteInternacionalParcelas: limiteInternacionalParcelas, limiteInternacionalSaqueGlobal: limiteInternacionalSaqueGlobal, limiteInternacionalSaquePeriodo: limiteInternacionalSaquePeriodo).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realiza a altera\u00C3\u00A7\u00C3\u00A3o dos limites da conta
     
     - PUT /api/contas/{id}/alterar-limites
     - Esse recurso permite realizar a altera\u00C3\u00A7\u00C3\u00A3o dos Limites de uma determinada Conta.
     - examples: [{contentType=application/json, example={
  "saldoDisponivelCompraInternacional" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelSaque" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteSaquePeriodo" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalSaqueGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalSaquePeriodo" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelSaqueInternacional" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoPontosFidelidade" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 123456789,
  "limiteConsignado" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteSaqueGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteCompra" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter limiteGlobal: (query) Apresenta o valor do limite de cr\u00C3\u00A9dito que o portador do cart\u00C3\u00A3o possui. 
     - parameter limiteCompra: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador possui para uso exclusivo em Compras Nacionais. 
     - parameter limiteParcelado: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador possui para realizar transa\u00C3\u00A7\u00C3\u00B5es de compras parceladas. 
     - parameter limiteParcelas: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que portador pode acumular a partir da soma das parcelas das compras que forem realizadas nesta modalidade. 
     - parameter limiteSaqueGlobal: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador pode utilizar para realizar transa\u00C3\u00A7\u00C3\u00B5es de Saque Nacional. 
     - parameter limiteSaquePeriodo: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador pode utilizar para realizar transa\u00C3\u00A7\u00C3\u00B5es de Saque Nacional dentro de cada ciclo de faturamento. 
     - parameter limiteConsignado: (query) Quando utilizado pelo emissor, este campo apresenta o valor da margem de cr\u00C3\u00A9dito que ele poder\u00C3\u00A1 utilizar para ser cobrado de forma consignada (desconto em folha) em seu sal\u00C3\u00A1rio/vencimentos. 
     - parameter limiteInternacionalCompra: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador possui para uso exclusivo em Compras Internacionais. 
     - parameter limiteInternacionalParcelado: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador possui para realizar transa\u00C3\u00A7\u00C3\u00B5es Internacionais de Compras Parceladas. 
     - parameter limiteInternacionalParcelas: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que portador pode acumular a partir da soma das parcelas das compras internacionais que forem realizadas nesta modalidade. 
     - parameter limiteInternacionalSaqueGlobal: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador pode utilizar para realizar transa\u00C3\u00A7\u00C3\u00B5es de Saque Internacional. 
     - parameter limiteInternacionalSaquePeriodo: (query) Quando utilizado pelo emissor, este campo apresenta o valor do limite de cr\u00C3\u00A9dito que o portador pode utilizar para realizar transa\u00C3\u00A7\u00C3\u00B5es de Saque Internacional dentro de cada ciclo de faturamento. 

     - returns: RequestBuilder<LimiteDisponibilidade> 
     */
    public class func alterarLimiteUsingPUTWithRequestBuilder(id id: Int, limiteGlobal: Double, limiteCompra: Double, limiteParcelado: Double, limiteParcelas: Double, limiteSaqueGlobal: Double, limiteSaquePeriodo: Double, limiteConsignado: Double, limiteInternacionalCompra: Double, limiteInternacionalParcelado: Double, limiteInternacionalParcelas: Double, limiteInternacionalSaqueGlobal: Double, limiteInternacionalSaquePeriodo: Double) -> RequestBuilder<LimiteDisponibilidade> {
        var path = "/api/contas/{id}/alterar-limites"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "limiteGlobal": limiteGlobal,
            "limiteCompra": limiteCompra,
            "limiteParcelado": limiteParcelado,
            "limiteParcelas": limiteParcelas,
            "limiteSaqueGlobal": limiteSaqueGlobal,
            "limiteSaquePeriodo": limiteSaquePeriodo,
            "limiteConsignado": limiteConsignado,
            "limiteInternacionalCompra": limiteInternacionalCompra,
            "limiteInternacionalParcelado": limiteInternacionalParcelado,
            "limiteInternacionalParcelas": limiteInternacionalParcelas,
            "limiteInternacionalSaqueGlobal": limiteInternacionalSaqueGlobal,
            "limiteInternacionalSaquePeriodo": limiteInternacionalSaquePeriodo
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<LimiteDisponibilidade>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Realiza a altera\u00C3\u00A7\u00C3\u00A3o de uma Pessoa tilular da conta
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta (id) 
     - parameter idPessoa: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o de uma Pessoa (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarTitularUsingPOST(id id: Int, idPessoa: Int, completion: ((data: ContaResponse?, error: ErrorType?) -> Void)) {
        alterarTitularUsingPOSTWithRequestBuilder(id: id, idPessoa: idPessoa).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realiza a altera\u00C3\u00A7\u00C3\u00A3o de uma Pessoa tilular da conta
     
     - POST /api/contas/{id}/alterar-titular
     - Esta m\u00C3\u00A9todo permite altera a pessoa de uma conta.
     - examples: [{contentType=application/json, example={
  "idPessoa" : 123456789,
  "idStatusConta" : 123456789,
  "valorRenda" : 1.3579000000000001069366817318950779736042022705078125,
  "idProduto" : 123456789,
  "idOrigemComercial" : 123456789,
  "melhorDiaCompra" : 123,
  "dataUltimaAlteracaoVencimento" : "aeiou",
  "dataStatusConta" : "aeiou",
  "id" : 123456789,
  "diaVencimento" : 123,
  "dataCadastro" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta (id) 
     - parameter idPessoa: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o de uma Pessoa (id). 

     - returns: RequestBuilder<ContaResponse> 
     */
    public class func alterarTitularUsingPOSTWithRequestBuilder(id id: Int, idPessoa: Int) -> RequestBuilder<ContaResponse> {
        var path = "/api/contas/{id}/alterar-titular"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_pessoa": idPessoa
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Realiza a altera\u00C3\u00A7\u00C3\u00A3o do dia de vencimento das faturas da conta
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter novoDiaVencimento: (query) Novo dia de vencimento. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarVencimentoUsingPUT(id id: Int, novoDiaVencimento: Int, completion: ((data: ContaResponse?, error: ErrorType?) -> Void)) {
        alterarVencimentoUsingPUTWithRequestBuilder(id: id, novoDiaVencimento: novoDiaVencimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realiza a altera\u00C3\u00A7\u00C3\u00A3o do dia de vencimento das faturas da conta
     
     - PUT /api/contas/{id}/alterar-vencimento
     - Esse recurso permite alterar o vencimento de uma conta especifica.
     - examples: [{contentType=application/json, example={
  "idPessoa" : 123456789,
  "idStatusConta" : 123456789,
  "valorRenda" : 1.3579000000000001069366817318950779736042022705078125,
  "idProduto" : 123456789,
  "idOrigemComercial" : 123456789,
  "melhorDiaCompra" : 123,
  "dataUltimaAlteracaoVencimento" : "aeiou",
  "dataStatusConta" : "aeiou",
  "id" : 123456789,
  "diaVencimento" : 123,
  "dataCadastro" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter novoDiaVencimento: (query) Novo dia de vencimento. 

     - returns: RequestBuilder<ContaResponse> 
     */
    public class func alterarVencimentoUsingPUTWithRequestBuilder(id id: Int, novoDiaVencimento: Int) -> RequestBuilder<ContaResponse> {
        var path = "/api/contas/{id}/alterar-vencimento"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "novo_dia_vencimento": novoDiaVencimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
      Ativa o servi\u00C3\u00A7o de envio de fatura por email
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func ativarEnvioFaturaEmailUsingPOST(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        ativarEnvioFaturaEmailUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
      Ativa o servi\u00C3\u00A7o de envio de fatura por email
     
     - POST /api/contas/{id}/ativar-fatura-email
     - Este recurso ativa o servi\u00C3\u00A7o de envio de fatura por email
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func ativarEnvioFaturaEmailUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/contas/{id}/ativar-fatura-email"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Consulta os dados de um determinado boleto da fatura
     
     - parameter id: (path) Id Conta 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarBoletoEmitidoUsingGET(id id: Int, completion: ((data: BoletoDeFatura?, error: ErrorType?) -> Void)) {
        consultarBoletoEmitidoUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consulta os dados de um determinado boleto da fatura
     
     - GET /api/contas/{id}/consultar-dados-pagamento-fatura
     - Este recurso consulta um boleto da fatura
     - examples: [{contentType=application/json, example={
  "codigoBeneficiario" : "aeiou",
  "locaisDePagamento" : [ "aeiou" ],
  "dataDocumento" : "aeiou",
  "dataProcessamento" : "aeiou",
  "instrucoes" : [ "aeiou" ],
  "cidadePagador" : "aeiou",
  "agencia" : "aeiou",
  "especie" : "aeiou",
  "bairroPagador" : "aeiou",
  "valorBoleto" : 1.3579000000000001069366817318950779736042022705078125,
  "especieDoDocumento" : "aeiou",
  "cepPagador" : "aeiou",
  "numeroDoDocumento" : "aeiou",
  "linhaDigitavel" : "aeiou",
  "carteira" : "aeiou",
  "digitoCodigoBeneficiario" : "aeiou",
  "ufPagador" : "aeiou",
  "codigoDeBarras" : "aeiou",
  "documentoBeneficiario" : "aeiou",
  "aceite" : false,
  "nomeBeneficiario" : "aeiou",
  "banco" : "aeiou",
  "nomePagador" : "aeiou",
  "numeroConvenio" : "aeiou",
  "logradouroPagador" : "aeiou",
  "documentoPagador" : "aeiou",
  "dataVencimento" : "aeiou",
  "digitoNossoNumero" : "aeiou",
  "nossoNumero" : "aeiou"
}}]
     
     - parameter id: (path) Id Conta 

     - returns: RequestBuilder<BoletoDeFatura> 
     */
    public class func consultarBoletoEmitidoUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<BoletoDeFatura> {
        var path = "/api/contas/{id}/consultar-dados-pagamento-fatura"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<BoletoDeFatura>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Consulta a d\u00C3\u00ADvida atualizada do cliente
     
     - parameter id: (path) Id Conta 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter dataVencimento: (query) Data do vencimento (optional)
     - parameter idEscritorioCobranca: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do escrit\u00C3\u00B3rio de cobran\u00C3\u00A7a (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarDividaAtualizadaClienteUsingGET(id id: Int, page: Int?, limit: Int?, dataVencimento: String?, idEscritorioCobranca: Int?, completion: ((data: DividaClienteResponse?, error: ErrorType?) -> Void)) {
        consultarDividaAtualizadaClienteUsingGETWithRequestBuilder(id: id, page: page, limit: limit, dataVencimento: dataVencimento, idEscritorioCobranca: idEscritorioCobranca).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consulta a d\u00C3\u00ADvida atualizada do cliente
     
     - GET /api/contas/{id}/recuperar-divida-atualizada
     - Este recurso consulta a d\u00C3\u00ADvida atualizada do cliente
     - examples: [{contentType=application/json, example={
  "dataVencimentoFaturaAtraso" : "aeiou",
  "quantidadeDiasAtrasoCorrigido" : 123456789,
  "idStatusConta" : 123456789,
  "idStatusAcordo" : 123456789,
  "valorSaldoCorrigido" : 1.3579000000000001069366817318950779736042022705078125,
  "emailPessoaConta" : "aeiou",
  "nomeEscritorioCobranca" : "aeiou",
  "taxaCorrecao" : 1.3579000000000001069366817318950779736042022705078125,
  "idEscritorioCobranca" : 123456789,
  "dataVencimentoAcordo" : "aeiou",
  "descricaoStatusConta" : "aeiou",
  "descricaoStatusAcordo" : "aeiou",
  "id" : 123456789,
  "quantidadeDiasAtraso" : 123456789,
  "valorSaldoDevedor" : 1.3579000000000001069366817318950779736042022705078125,
  "valorCorrecao" : 1.3579000000000001069366817318950779736042022705078125,
  "valorIOF" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Id Conta 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter dataVencimento: (query) Data do vencimento (optional)
     - parameter idEscritorioCobranca: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do escrit\u00C3\u00B3rio de cobran\u00C3\u00A7a (optional)

     - returns: RequestBuilder<DividaClienteResponse> 
     */
    public class func consultarDividaAtualizadaClienteUsingGETWithRequestBuilder(id id: Int, page: Int?, limit: Int?, dataVencimento: String?, idEscritorioCobranca: Int?) -> RequestBuilder<DividaClienteResponse> {
        var path = "/api/contas/{id}/recuperar-divida-atualizada"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "dataVencimento": dataVencimento,
            "idEscritorioCobranca": idEscritorioCobranca
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<DividaClienteResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Consultar a fatura consignadas abertas da conta
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter dataVencimento: (query) Data Vencimento (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarFaturaConsignadaAbertaUsingGET(id id: Int, dataVencimento: String?, completion: ((data: DetalhesFaturaConsignadaResponse?, error: ErrorType?) -> Void)) {
        consultarFaturaConsignadaAbertaUsingGETWithRequestBuilder(id: id, dataVencimento: dataVencimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consultar a fatura consignadas abertas da conta
     
     - GET /api/contas/{id}/faturas-consignadas/consultar-aberta
     - Atrav\u00C3\u00A9s desta opera\u00C3\u00A7\u00C3\u00A3o os Emissores ou Portadores poder\u00C3\u00A3o consultar a fatura consignada em aberto
     - examples: [{contentType=application/json, example={
  "transacoes" : [ {
    "statusTransacao" : "aeiou",
    "grupoMCC" : 123456789,
    "valorUSD" : 1.3579000000000001069366817318950779736042022705078125,
    "planoParcelamento" : 123456789,
    "cartaoMascarado" : "aeiou",
    "codigoTerminal" : "aeiou",
    "flagFaturado" : 123,
    "codigoMoedaOrigem" : "aeiou",
    "codigoReferencia" : "aeiou",
    "dataCotacaoUSD" : "aeiou",
    "nomePortador" : "aeiou",
    "dataFaturamento" : "aeiou",
    "localidadeEstabelecimento" : "aeiou",
    "flagEstorno" : 123,
    "id" : 123456789,
    "valorBRL" : 1.3579000000000001069366817318950779736042022705078125,
    "cotacaoUSD" : 1.3579000000000001069366817318950779736042022705078125,
    "numeroParcela" : 123456789,
    "codigoMCC" : 123456789,
    "flagCredito" : 123,
    "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTaxaEmbarque" : 1.3579000000000001069366817318950779736042022705078125,
    "idEstabelecimento" : 123456789,
    "idConta" : 123456789,
    "codigoMoedaDestino" : "aeiou",
    "idEvento" : 123456789,
    "dataTransacaoUTC" : "aeiou",
    "modoEntradaTransacao" : "aeiou",
    "idTransacaoEstorno" : 123456789,
    "nomeEstabelecimento" : "aeiou",
    "codigoAutorizacao" : "aeiou",
    "tipoTransacao" : "aeiou",
    "tipoEvento" : "aeiou",
    "detalhesTransacao" : "aeiou",
    "dataVencimento" : "aeiou",
    "grupoDescricaoMCC" : "aeiou"
  } ],
  "faturaConsignadaResponse" : {
    "dataVencimentoFatura" : "aeiou",
    "flagEmiteFatura" : 123,
    "totalJuros" : 1.3579000000000001069366817318950779736042022705078125,
    "totalPagamentos" : 1.3579000000000001069366817318950779736042022705078125,
    "totalAjustes" : 1.3579000000000001069366817318950779736042022705078125,
    "valorFaturaAnterior" : 1.3579000000000001069366817318950779736042022705078125,
    "totalDebitosRecorrentes" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123456789,
    "valorPagamentoConsignado" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTotalFatura" : 1.3579000000000001069366817318950779736042022705078125,
    "totalCreditosNacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "idConta" : 123456789,
    "totalDebitosInternacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaMaximaProximoPeriodo" : 1.3579000000000001069366817318950779736042022705078125,
    "totalComprasNacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "totalDebitosDiversosNacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "totalDebitosNacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "totalServicos" : 1.3579000000000001069366817318950779736042022705078125,
    "valorPagamentoMinimo" : 1.3579000000000001069366817318950779736042022705078125,
    "totalTarifas" : 1.3579000000000001069366817318950779736042022705078125,
    "valorPagamentoComplementar" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaSaque" : 1.3579000000000001069366817318950779736042022705078125,
    "totalComprasInternacionas" : 1.3579000000000001069366817318950779736042022705078125,
    "totalMulta" : 1.3579000000000001069366817318950779736042022705078125,
    "totalSaquesInternacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "totalDebitosOpcionais" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaRotativo" : 1.3579000000000001069366817318950779736042022705078125,
    "totalSaquesNacionais" : 1.3579000000000001069366817318950779736042022705078125
  }
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter dataVencimento: (query) Data Vencimento (optional)

     - returns: RequestBuilder<DetalhesFaturaConsignadaResponse> 
     */
    public class func consultarFaturaConsignadaAbertaUsingGETWithRequestBuilder(id id: Int, dataVencimento: String?) -> RequestBuilder<DetalhesFaturaConsignadaResponse> {
        var path = "/api/contas/{id}/faturas-consignadas/consultar-aberta"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "dataVencimento": dataVencimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<DetalhesFaturaConsignadaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Apresenta dados de uma determinada fatura consignada
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter idFatura: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da fatura (id_fatura). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarFaturaConsignadaUsingGET(id id: Int, idFatura: Int, completion: ((data: FaturaConsignadaDetalheResponse?, error: ErrorType?) -> Void)) {
        consultarFaturaConsignadaUsingGETWithRequestBuilder(id: id, idFatura: idFatura).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Apresenta dados de uma determinada fatura consignada
     
     - GET /api/contas/{id}/faturas-consignadas/{idFatura}
     - Atrav\u00C3\u00A9s desta opera\u00C3\u00A7\u00C3\u00A3o os Emissores ou Portadores poder\u00C3\u00A3o consultar uma fatura, atrav\u00C3\u00A9s do id da conta e o id da fatura.
     - examples: [{contentType=application/json, example={
  "dataVencimentoFatura" : "aeiou",
  "flagEmiteFatura" : 123,
  "saldoDisponivelSaque" : 1.3579000000000001069366817318950779736042022705078125,
  "totalJuros" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteSaquePeriodo" : 1.3579000000000001069366817318950779736042022705078125,
  "totalPagamentos" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalSaqueGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "totalAjustes" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalSaquePeriodo" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelSaqueInternacional" : 1.3579000000000001069366817318950779736042022705078125,
  "valorFaturaAnterior" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "totalDebitosRecorrentes" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 123456789,
  "valorPagamentoConsignado" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteSaqueGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "valorTotalFatura" : 1.3579000000000001069366817318950779736042022705078125,
  "totalCreditosNacionais" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelCompraInternacional" : 1.3579000000000001069366817318950779736042022705078125,
  "idConta" : 123456789,
  "totalDebitosInternacionais" : 1.3579000000000001069366817318950779736042022705078125,
  "taxaMaximaProximoPeriodo" : 1.3579000000000001069366817318950779736042022705078125,
  "totalComprasNacionais" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "totalDebitosDiversosNacionais" : 1.3579000000000001069366817318950779736042022705078125,
  "totalDebitosNacionais" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "totalServicos" : 1.3579000000000001069366817318950779736042022705078125,
  "valorPagamentoMinimo" : 1.3579000000000001069366817318950779736042022705078125,
  "totalTarifas" : 1.3579000000000001069366817318950779736042022705078125,
  "valorPagamentoComplementar" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoPontosFidelidade" : 1.3579000000000001069366817318950779736042022705078125,
  "taxaSaque" : 1.3579000000000001069366817318950779736042022705078125,
  "totalComprasInternacionas" : 1.3579000000000001069366817318950779736042022705078125,
  "totalMulta" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteConsignado" : 1.3579000000000001069366817318950779736042022705078125,
  "totalSaquesInternacionais" : 1.3579000000000001069366817318950779736042022705078125,
  "totalDebitosOpcionais" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "taxaRotativo" : 1.3579000000000001069366817318950779736042022705078125,
  "totalSaquesNacionais" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteCompra" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter idFatura: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da fatura (id_fatura). 

     - returns: RequestBuilder<FaturaConsignadaDetalheResponse> 
     */
    public class func consultarFaturaConsignadaUsingGETWithRequestBuilder(id id: Int, idFatura: Int) -> RequestBuilder<FaturaConsignadaDetalheResponse> {
        var path = "/api/contas/{id}/faturas-consignadas/{idFatura}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idFatura}", withString: "\(idFatura)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<FaturaConsignadaDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Consultar Fatura da Conta
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter dataVencimento: (query) Data Vencimento. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarFaturaUsingGET(id id: Int, dataVencimento: String, completion: ((data: DetalhesFaturaResponse?, error: ErrorType?) -> Void)) {
        consultarFaturaUsingGETWithRequestBuilder(id: id, dataVencimento: dataVencimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consultar Fatura da Conta
     
     - GET /api/contas/{id}/faturas/consultar-fechada
     - Atrav\u00C3\u00A9s desta opera\u00C3\u00A7\u00C3\u00A3o os Emissores ou Portadores poder\u00C3\u00A3o consultar os detalhes de uma fatura vinculados a uma determinada conta.
     - examples: [{contentType=application/json, example={
  "fatura" : {
    "maxNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "ultimoNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "faixaNossoNumero" : 123,
    "minNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "banco" : 123456789,
    "id" : 123456789,
    "descricao" : "aeiou",
    "tamNossoNumero" : 123
  },
  "transacoes" : [ {
    "statusTransacao" : "aeiou",
    "grupoMCC" : 123456789,
    "valorUSD" : 1.3579000000000001069366817318950779736042022705078125,
    "planoParcelamento" : 123456789,
    "cartaoMascarado" : "aeiou",
    "codigoTerminal" : "aeiou",
    "flagFaturado" : 123,
    "codigoMoedaOrigem" : "aeiou",
    "codigoReferencia" : "aeiou",
    "dataCotacaoUSD" : "aeiou",
    "nomePortador" : "aeiou",
    "dataFaturamento" : "aeiou",
    "localidadeEstabelecimento" : "aeiou",
    "flagEstorno" : 123,
    "id" : 123456789,
    "valorBRL" : 1.3579000000000001069366817318950779736042022705078125,
    "cotacaoUSD" : 1.3579000000000001069366817318950779736042022705078125,
    "numeroParcela" : 123456789,
    "codigoMCC" : 123456789,
    "flagCredito" : 123,
    "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTaxaEmbarque" : 1.3579000000000001069366817318950779736042022705078125,
    "idEstabelecimento" : 123456789,
    "idConta" : 123456789,
    "codigoMoedaDestino" : "aeiou",
    "idEvento" : 123456789,
    "dataTransacaoUTC" : "aeiou",
    "modoEntradaTransacao" : "aeiou",
    "idTransacaoEstorno" : 123456789,
    "nomeEstabelecimento" : "aeiou",
    "codigoAutorizacao" : "aeiou",
    "tipoTransacao" : "aeiou",
    "tipoEvento" : "aeiou",
    "detalhesTransacao" : "aeiou",
    "dataVencimento" : "aeiou",
    "grupoDescricaoMCC" : "aeiou"
  } ]
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter dataVencimento: (query) Data Vencimento. 

     - returns: RequestBuilder<DetalhesFaturaResponse> 
     */
    public class func consultarFaturaUsingGETWithRequestBuilder(id id: Int, dataVencimento: String) -> RequestBuilder<DetalhesFaturaResponse> {
        var path = "/api/contas/{id}/faturas/consultar-fechada"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "dataVencimento": dataVencimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<DetalhesFaturaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Consultar Lan\u00C3\u00A7amentos Futuros da Fatura de uma Conta
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter dataVencimento: (query) Data Vencimento (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarLancamentosFuturosFaturaUsingGET(id id: Int, dataVencimento: String?, completion: ((data: DetalhesFaturaResponse?, error: ErrorType?) -> Void)) {
        consultarLancamentosFuturosFaturaUsingGETWithRequestBuilder(id: id, dataVencimento: dataVencimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consultar Lan\u00C3\u00A7amentos Futuros da Fatura de uma Conta
     
     - GET /api/contas/{id}/faturas/consultar-aberta
     - Atrav\u00C3\u00A9s desta opera\u00C3\u00A7\u00C3\u00A3o os Emissores ou Portadores poder\u00C3\u00A3o consultar os detalhes dos lan\u00C3\u00A7amentos futuros de uma fatura vinculados a uma determinada conta.
     - examples: [{contentType=application/json, example={
  "fatura" : {
    "maxNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "ultimoNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "faixaNossoNumero" : 123,
    "minNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "banco" : 123456789,
    "id" : 123456789,
    "descricao" : "aeiou",
    "tamNossoNumero" : 123
  },
  "transacoes" : [ {
    "statusTransacao" : "aeiou",
    "grupoMCC" : 123456789,
    "valorUSD" : 1.3579000000000001069366817318950779736042022705078125,
    "planoParcelamento" : 123456789,
    "cartaoMascarado" : "aeiou",
    "codigoTerminal" : "aeiou",
    "flagFaturado" : 123,
    "codigoMoedaOrigem" : "aeiou",
    "codigoReferencia" : "aeiou",
    "dataCotacaoUSD" : "aeiou",
    "nomePortador" : "aeiou",
    "dataFaturamento" : "aeiou",
    "localidadeEstabelecimento" : "aeiou",
    "flagEstorno" : 123,
    "id" : 123456789,
    "valorBRL" : 1.3579000000000001069366817318950779736042022705078125,
    "cotacaoUSD" : 1.3579000000000001069366817318950779736042022705078125,
    "numeroParcela" : 123456789,
    "codigoMCC" : 123456789,
    "flagCredito" : 123,
    "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTaxaEmbarque" : 1.3579000000000001069366817318950779736042022705078125,
    "idEstabelecimento" : 123456789,
    "idConta" : 123456789,
    "codigoMoedaDestino" : "aeiou",
    "idEvento" : 123456789,
    "dataTransacaoUTC" : "aeiou",
    "modoEntradaTransacao" : "aeiou",
    "idTransacaoEstorno" : 123456789,
    "nomeEstabelecimento" : "aeiou",
    "codigoAutorizacao" : "aeiou",
    "tipoTransacao" : "aeiou",
    "tipoEvento" : "aeiou",
    "detalhesTransacao" : "aeiou",
    "dataVencimento" : "aeiou",
    "grupoDescricaoMCC" : "aeiou"
  } ]
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter dataVencimento: (query) Data Vencimento (optional)

     - returns: RequestBuilder<DetalhesFaturaResponse> 
     */
    public class func consultarLancamentosFuturosFaturaUsingGETWithRequestBuilder(id id: Int, dataVencimento: String?) -> RequestBuilder<DetalhesFaturaResponse> {
        var path = "/api/contas/{id}/faturas/consultar-aberta"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "dataVencimento": dataVencimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<DetalhesFaturaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Apresenta os limites da conta
     
     - parameter id: (path) Id Conta 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarLimiteDisponibilidadeUsingGET1(id id: Int, completion: ((data: LimiteDisponibilidade?, error: ErrorType?) -> Void)) {
        consultarLimiteDisponibilidadeUsingGET1WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Apresenta os limites da conta
     
     - GET /api/contas/{id}/limites-disponibilidades
     - Este m\u00C3\u00A9todo permite consultar os Limites configurados para uma determinada Conta, a partir do c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id).
     - examples: [{contentType=application/json, example={
  "saldoDisponivelCompraInternacional" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelSaque" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteSaquePeriodo" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalSaqueGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalSaquePeriodo" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelSaqueInternacional" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoPontosFidelidade" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 123456789,
  "limiteConsignado" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteSaqueGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteCompra" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Id Conta 

     - returns: RequestBuilder<LimiteDisponibilidade> 
     */
    public class func consultarLimiteDisponibilidadeUsingGET1WithRequestBuilder(id id: Int) -> RequestBuilder<LimiteDisponibilidade> {
        var path = "/api/contas/{id}/limites-disponibilidades"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<LimiteDisponibilidade>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Permite consultar a partir do ID da conta as taxas e tarifas
     
     - parameter id: (path) ID da conta a ser consultada. 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarTaxasTarifasUsingGET(id id: Int, page: Int?, limit: Int?, completion: ((data: PageTaxasRefinanciamento?, error: ErrorType?) -> Void)) {
        consultarTaxasTarifasUsingGETWithRequestBuilder(id: id, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Permite consultar a partir do ID da conta as taxas e tarifas
     
     - GET /api/contas/{id}/consultar-taxas-tarifas
     - Esta opera\u00C3\u00A7\u00C3\u00A3o tem como objetivo permitir que os Emissores consultem as taxas e tarifas da conta
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idConta" : 123456789,
    "taxaMaximaCompraJuros" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaMaximaProximoPeriodo" : 1.3579000000000001069366817318950779736042022705078125,
    "agenciamento" : 1.3579000000000001069366817318950779736042022705078125,
    "planoTaxaDefault" : 123,
    "vencimento" : "aeiou",
    "taxaMaximaSaque" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaEncargosFinanciamento" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaPermanencia" : 1.3579000000000001069366817318950779736042022705078125,
    "idProduto" : 123456789,
    "taxaRecuperacaoRefinanciamento" : 1.3579000000000001069366817318950779736042022705078125,
    "dataEntrada" : "aeiou",
    "idPlanoConta" : 123456789,
    "idPlanoPct" : 123456789,
    "taxaCompraJuros" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaRefinanciamento" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaSaque" : 1.3579000000000001069366817318950779736042022705078125,
    "comissaoGarantia" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123456789,
    "taxaPercCalcPagamentoMinimo" : 1.3579000000000001069366817318950779736042022705078125,
    "recuperacaoEncargosFinanceiros" : 1.3579000000000001069366817318950779736042022705078125,
    "idPlanoCreditoTaxa" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) ID da conta a ser consultada. 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)

     - returns: RequestBuilder<PageTaxasRefinanciamento> 
     */
    public class func consultarTaxasTarifasUsingGETWithRequestBuilder(id id: Int, page: Int?, limit: Int?) -> RequestBuilder<PageTaxasRefinanciamento> {
        var path = "/api/contas/{id}/consultar-taxas-tarifas"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTaxasRefinanciamento>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Consultar uma transfer\u00C3\u00AAncia banc\u00C3\u00A1ria para um banco
     
     - parameter id: (path) Id Conta 
     - parameter idTransferencia: (path) Id Transfer\u00C3\u00AAncia 
     - parameter idContaBancariaDestino: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria de destino (id) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET23(id id: Int, idTransferencia: Int, idContaBancariaDestino: Int?, completion: ((data: LinkTransferenciaBancariaResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET23WithRequestBuilder(id: id, idTransferencia: idTransferencia, idContaBancariaDestino: idContaBancariaDestino).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consultar uma transfer\u00C3\u00AAncia banc\u00C3\u00A1ria para um banco
     
     - GET /api/contas/{id}/transferencias-creditos-contas-bancarias/{idTransferencia}
     - Este recurso permite consultar os detalhes de uma determinada transfer\u00C3\u00AAncia de cr\u00C3\u00A9dito realizada para uma conta banc\u00C3\u00A1ria. De modo geral, esta opera\u00C3\u00A7\u00C3\u00A3o poder\u00C3\u00A1 ser utilizada para uma consulta simples destes detalhes ou para realizar a montagem de um comprovante de 2\u00C2\u00AA via de transfer\u00C3\u00AAncia entre contas.
     - examples: [{contentType=application/json, example={
  "numeroParcelas" : 123,
  "idOperacao" : 123456789,
  "idAutorizacao" : 123456789,
  "origem" : "aeiou",
  "valorCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "idTransferencia" : 123456789,
  "idContaPortador" : 123456789,
  "dataCompra" : "aeiou",
  "dataVencimentoPadrao" : "aeiou",
  "nsuorigem" : 123456789,
  "valorContrato" : 1.3579000000000001069366817318950779736042022705078125,
  "valorTAC" : 1.3579000000000001069366817318950779736042022705078125,
  "dataAutorizacao" : "aeiou",
  "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
  "idCartao" : 123456789,
  "idEstabelecimento" : 123456789,
  "idConta" : 123456789,
  "valor" : 1.3579000000000001069366817318950779736042022705078125,
  "terminal" : "aeiou",
  "codigoAutorizacao" : "aeiou",
  "valorParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "dataMovimento" : "aeiou",
  "taxaJuros" : 1.3579000000000001069366817318950779736042022705078125,
  "numeroEstabelecimento" : 123456789,
  "dataVencimentoReal" : "aeiou",
  "valorIOF" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Id Conta 
     - parameter idTransferencia: (path) Id Transfer\u00C3\u00AAncia 
     - parameter idContaBancariaDestino: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria de destino (id) (optional)

     - returns: RequestBuilder<LinkTransferenciaBancariaResponse> 
     */
    public class func consultarUsingGET23WithRequestBuilder(id id: Int, idTransferencia: Int, idContaBancariaDestino: Int?) -> RequestBuilder<LinkTransferenciaBancariaResponse> {
        var path = "/api/contas/{id}/transferencias-creditos-contas-bancarias/{idTransferencia}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idTransferencia}", withString: "\(idTransferencia)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_conta_bancaria_destino": idContaBancariaDestino
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<LinkTransferenciaBancariaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Consulta os detalhes de uma determinada transfer\u00C3\u00AAncia
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter idTransferencia: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da transfer\u00C3\u00AAncia (id_transferencia). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET24(id id: Int, idTransferencia: Int, completion: ((data: PageTransferencias?, error: ErrorType?) -> Void)) {
        consultarUsingGET24WithRequestBuilder(id: id, idTransferencia: idTransferencia).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consulta os detalhes de uma determinada transfer\u00C3\u00AAncia
     
     - GET /api/contas/{id}/transferencias-creditos-cartoes/{idTransferencia}
     - Este m\u00C3\u00A9todo permite consultar os detalhes de uma determinada transfer\u00C3\u00AAncia de cr\u00C3\u00A9dito realizada entre contas.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "valorTransferencia" : 1.3579000000000001069366817318950779736042022705078125,
    "idContaOrigem" : 123456789,
    "dataTransferencia" : "aeiou",
    "nomePessoaOrigem" : "aeiou",
    "idContaDestino" : 123456789,
    "valorTarifa" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123456789,
    "nomePessoaDestino" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter idTransferencia: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da transfer\u00C3\u00AAncia (id_transferencia). 

     - returns: RequestBuilder<PageTransferencias> 
     */
    public class func consultarUsingGET24WithRequestBuilder(id id: Int, idTransferencia: Int) -> RequestBuilder<PageTransferencias> {
        var path = "/api/contas/{id}/transferencias-creditos-cartoes/{idTransferencia}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idTransferencia}", withString: "\(idTransferencia)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTransferencias>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Apresenta dados de uma determinada conta
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET4(id id: Int, completion: ((data: ContaDetalheResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET4WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Apresenta dados de uma determinada conta
     
     - GET /api/contas/{id}
     - Este m\u00C3\u00A9todo permite consultar dados de uma determinada conta a partir de seu codigo de identifica\u00C3\u00A7\u00C3\u00A3o (id).
     - examples: [{contentType=application/json, example={
  "idOrigemComercial" : 123456789,
  "melhorDiaCompra" : 123,
  "saldoDisponivelSaque" : 1.3579000000000001069366817318950779736042022705078125,
  "statusConta" : "aeiou",
  "limiteGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "diaVencimento" : 123,
  "formaEnvioFatura" : "aeiou",
  "nomeFantasiaBasica" : "aeiou",
  "idProduto" : 123456789,
  "nomeOrigemComercial" : "aeiou",
  "dataUltimaAlteracaoVencimento" : "aeiou",
  "diasAtraso" : 123456789,
  "id" : 123456789,
  "saldoDisponivelGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "dataCadastro" : "aeiou",
  "limiteSaqueGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "idStatusConta" : 123456789,
  "valorRenda" : 1.3579000000000001069366817318950779736042022705078125,
  "nome" : "aeiou",
  "idPessoa" : 123456789,
  "numeroContaCorrente" : "aeiou",
  "dataStatusConta" : "aeiou",
  "idFantasiaBasica" : 123456789,
  "numeroAgencia" : 123,
  "titular" : false,
  "dataHoraUltimaCompra" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 

     - returns: RequestBuilder<ContaDetalheResponse> 
     */
    public class func consultarUsingGET4WithRequestBuilder(id id: Int) -> RequestBuilder<ContaDetalheResponse> {
        var path = "/api/contas/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ContaDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Desativa o servi\u00C3\u00A7o de envio de fatura por email
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desativarEnvioFaturaEmailUsingPOST(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        desativarEnvioFaturaEmailUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Desativa o servi\u00C3\u00A7o de envio de fatura por email
     
     - POST /api/contas/{id}/desativar-fatura-email
     - Este recurso desativa o servi\u00C3\u00A7o de envio de fatura por email
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func desativarEnvioFaturaEmailUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/contas/{id}/desativar-fatura-email"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Gera um boleto de recarga
     
     - parameter id: (path) Id Conta 
     - parameter valor: (query) Atributo que representa o valor do Boleto Emitido 
     - parameter dataVencimento: (query) Atributo que representa a data de vencimento do boleto 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func gerarBoletoRecargaUsingPOST(id id: Int, valor: Double, dataVencimento: String, completion: ((data: BoletoDeFatura?, error: ErrorType?) -> Void)) {
        gerarBoletoRecargaUsingPOSTWithRequestBuilder(id: id, valor: valor, dataVencimento: dataVencimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Gera um boleto de recarga
     
     - POST /api/contas/{id}/gerar-boleto-recarga
     - Este recurso gera um boleto de recarga
     - examples: [{contentType=application/json, example={
  "codigoBeneficiario" : "aeiou",
  "locaisDePagamento" : [ "aeiou" ],
  "dataDocumento" : "aeiou",
  "dataProcessamento" : "aeiou",
  "instrucoes" : [ "aeiou" ],
  "cidadePagador" : "aeiou",
  "agencia" : "aeiou",
  "especie" : "aeiou",
  "bairroPagador" : "aeiou",
  "valorBoleto" : 1.3579000000000001069366817318950779736042022705078125,
  "especieDoDocumento" : "aeiou",
  "cepPagador" : "aeiou",
  "numeroDoDocumento" : "aeiou",
  "linhaDigitavel" : "aeiou",
  "carteira" : "aeiou",
  "digitoCodigoBeneficiario" : "aeiou",
  "ufPagador" : "aeiou",
  "codigoDeBarras" : "aeiou",
  "documentoBeneficiario" : "aeiou",
  "aceite" : false,
  "nomeBeneficiario" : "aeiou",
  "banco" : "aeiou",
  "nomePagador" : "aeiou",
  "numeroConvenio" : "aeiou",
  "logradouroPagador" : "aeiou",
  "documentoPagador" : "aeiou",
  "dataVencimento" : "aeiou",
  "digitoNossoNumero" : "aeiou",
  "nossoNumero" : "aeiou"
}}]
     
     - parameter id: (path) Id Conta 
     - parameter valor: (query) Atributo que representa o valor do Boleto Emitido 
     - parameter dataVencimento: (query) Atributo que representa a data de vencimento do boleto 

     - returns: RequestBuilder<BoletoDeFatura> 
     */
    public class func gerarBoletoRecargaUsingPOSTWithRequestBuilder(id id: Int, valor: Double, dataVencimento: String) -> RequestBuilder<BoletoDeFatura> {
        var path = "/api/contas/{id}/gerar-boleto-recarga"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "valor": valor,
            "dataVencimento": dataVencimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<BoletoDeFatura>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Realiza a gera\u00C3\u00A7\u00C3\u00A3o de um novo cart\u00C3\u00A3o para impress\u00C3\u00A3o avulsa
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter idPessoa: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da pessoa (id). 
     - parameter idTipoPlastico: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do TipoPlastico (id). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func gerarCartaoUsingPOST(id id: Int, idPessoa: Int, idTipoPlastico: Int?, completion: ((data: CartaoImpressao?, error: ErrorType?) -> Void)) {
        gerarCartaoUsingPOSTWithRequestBuilder(id: id, idPessoa: idPessoa, idTipoPlastico: idTipoPlastico).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realiza a gera\u00C3\u00A7\u00C3\u00A3o de um novo cart\u00C3\u00A3o para impress\u00C3\u00A3o avulsa
     
     - POST /api/contas/{id}/pessoas/{idPessoa}/gerar-cartao
     - Este recurso permite que seja gerado um novo Cart\u00C3\u00A3o para um determinado Portador que esteja vinculado a uma Conta. Para isso, ser\u00C3\u00A1 preciso informar o c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da Conta (id), o idPessoa do Portador e o idTipoPlastico do Cart\u00C3\u00A3o que dever\u00C3\u00A1 ser gerado para impress\u00C3\u00A3o. Esta funcionalidade poder\u00C3\u00A1 ser utilizada para realizar a impress\u00C3\u00A3o de cart\u00C3\u00B5es em Lojas, Quiosques, Escrit\u00C3\u00B3rios, Terminais de Auto Atendimento, ou outro local que o Emissor escolher, desde que se possua uma impressora de Cart\u00C3\u00B5es habilidade para o fazer, no local.
     - examples: [{contentType=application/json, example={
  "cvv2" : "aeiou",
  "idCartao" : 123456789,
  "trilha1" : "aeiou",
  "trilhaCVV2" : "aeiou",
  "idConta" : 123456789,
  "trilhaCVV1" : "aeiou",
  "idTipoCartao" : 123456789,
  "idBandeira" : 123456789,
  "trilha2" : "aeiou",
  "nomeEmpregador" : "aeiou",
  "numeroCartao" : "aeiou",
  "numeroContaCorente" : "aeiou",
  "idPessoa" : 123456789,
  "nomeEmpresa" : "aeiou",
  "dataValidade" : "aeiou",
  "nomeOrigemComercial" : "aeiou",
  "cpf" : "aeiou",
  "nomePlastico" : "aeiou",
  "flagVirtual" : 123,
  "numeroAgencia" : 123,
  "nomeEmpresaBeneficio" : "aeiou",
  "dataGeracao" : "aeiou",
  "tipoPortador" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter idPessoa: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da pessoa (id). 
     - parameter idTipoPlastico: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do TipoPlastico (id). (optional)

     - returns: RequestBuilder<CartaoImpressao> 
     */
    public class func gerarCartaoUsingPOSTWithRequestBuilder(id id: Int, idPessoa: Int, idTipoPlastico: Int?) -> RequestBuilder<CartaoImpressao> {
        var path = "/api/contas/{id}/pessoas/{idPessoa}/gerar-cartao"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idPessoa}", withString: "\(idPessoa)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_tipo_plastico": idTipoPlastico
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CartaoImpressao>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Realiza a gera\u00C3\u00A7\u00C3\u00A3o de um cart\u00C3\u00A3o virtual
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter dataValidade: (query) Data de Validade 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func gerarCartaoVirtualUsingPOST(id id: Int, dataValidade: String, completion: ((data: CartaoImpressao?, error: ErrorType?) -> Void)) {
        gerarCartaoVirtualUsingPOSTWithRequestBuilder(id: id, dataValidade: dataValidade).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realiza a gera\u00C3\u00A7\u00C3\u00A3o de um cart\u00C3\u00A3o virtual
     
     - POST /api/contas/{id}/gerar-cartao-virtual
     - Este recurso permite que seja gerado um Cart\u00C3\u00A3o virtual para um determinado Portador que esteja vinculado a uma Conta. Para isso, ser\u00C3\u00A1 preciso informar o c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da Conta (id). Esta funcionalidade poder\u00C3\u00A1 ser utilizada para realizar a cria\u00C3\u00A7\u00C3\u00A3o de cart\u00C3\u00B5es virtuaes atraves de um app.
     - examples: [{contentType=application/json, example={
  "cvv2" : "aeiou",
  "idCartao" : 123456789,
  "trilha1" : "aeiou",
  "trilhaCVV2" : "aeiou",
  "idConta" : 123456789,
  "trilhaCVV1" : "aeiou",
  "idTipoCartao" : 123456789,
  "idBandeira" : 123456789,
  "trilha2" : "aeiou",
  "nomeEmpregador" : "aeiou",
  "numeroCartao" : "aeiou",
  "numeroContaCorente" : "aeiou",
  "idPessoa" : 123456789,
  "nomeEmpresa" : "aeiou",
  "dataValidade" : "aeiou",
  "nomeOrigemComercial" : "aeiou",
  "cpf" : "aeiou",
  "nomePlastico" : "aeiou",
  "flagVirtual" : 123,
  "numeroAgencia" : 123,
  "nomeEmpresaBeneficio" : "aeiou",
  "dataGeracao" : "aeiou",
  "tipoPortador" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter dataValidade: (query) Data de Validade 

     - returns: RequestBuilder<CartaoImpressao> 
     */
    public class func gerarCartaoVirtualUsingPOSTWithRequestBuilder(id id: Int, dataValidade: String) -> RequestBuilder<CartaoImpressao> {
        var path = "/api/contas/{id}/gerar-cartao-virtual"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "dataValidade": dataValidade
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CartaoImpressao>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista as faturas consignadas da conta
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter dataVencimento: (query) Apresenta a data de vencimento da fatura. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarFaturasConsignadasUsingGET(id id: Int, page: Int?, limit: Int?, dataVencimento: String?, completion: ((data: PageFaturasConsignadas?, error: ErrorType?) -> Void)) {
        listarFaturasConsignadasUsingGETWithRequestBuilder(id: id, page: page, limit: limit, dataVencimento: dataVencimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista as faturas consignadas da conta
     
     - GET /api/contas/{id}/faturas-consignadas
     - Atrav\u00C3\u00A9s desta opera\u00C3\u00A7\u00C3\u00A3o os Emissores ou Portadores poder\u00C3\u00A3o consultar todo o Hist\u00C3\u00B3rico de Faturas vinculados a uma determinada Conta, independentemente do valor delas.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "dataVencimentoFatura" : "aeiou",
    "flagEmiteFatura" : 123,
    "totalJuros" : 1.3579000000000001069366817318950779736042022705078125,
    "totalPagamentos" : 1.3579000000000001069366817318950779736042022705078125,
    "totalAjustes" : 1.3579000000000001069366817318950779736042022705078125,
    "valorFaturaAnterior" : 1.3579000000000001069366817318950779736042022705078125,
    "totalDebitosRecorrentes" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123456789,
    "valorPagamentoConsignado" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTotalFatura" : 1.3579000000000001069366817318950779736042022705078125,
    "totalCreditosNacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "idConta" : 123456789,
    "totalDebitosInternacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaMaximaProximoPeriodo" : 1.3579000000000001069366817318950779736042022705078125,
    "totalComprasNacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "totalDebitosDiversosNacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "totalDebitosNacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "totalServicos" : 1.3579000000000001069366817318950779736042022705078125,
    "valorPagamentoMinimo" : 1.3579000000000001069366817318950779736042022705078125,
    "totalTarifas" : 1.3579000000000001069366817318950779736042022705078125,
    "valorPagamentoComplementar" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaSaque" : 1.3579000000000001069366817318950779736042022705078125,
    "totalComprasInternacionas" : 1.3579000000000001069366817318950779736042022705078125,
    "totalMulta" : 1.3579000000000001069366817318950779736042022705078125,
    "totalSaquesInternacionais" : 1.3579000000000001069366817318950779736042022705078125,
    "totalDebitosOpcionais" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaRotativo" : 1.3579000000000001069366817318950779736042022705078125,
    "totalSaquesNacionais" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter dataVencimento: (query) Apresenta a data de vencimento da fatura. (optional)

     - returns: RequestBuilder<PageFaturasConsignadas> 
     */
    public class func listarFaturasConsignadasUsingGETWithRequestBuilder(id id: Int, page: Int?, limit: Int?, dataVencimento: String?) -> RequestBuilder<PageFaturasConsignadas> {
        var path = "/api/contas/{id}/faturas-consignadas"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "dataVencimento": dataVencimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageFaturasConsignadas>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista as faturas da conta
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter dataVencimento: (query) Data de Vencimento da Fatura. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarFaturasUsingGET(id id: Int, page: Int?, limit: Int?, dataVencimento: String?, completion: ((data: PageFaturas?, error: ErrorType?) -> Void)) {
        listarFaturasUsingGETWithRequestBuilder(id: id, page: page, limit: limit, dataVencimento: dataVencimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista as faturas da conta
     
     - GET /api/contas/{id}/faturas
     - Atrav\u00C3\u00A9s desta opera\u00C3\u00A7\u00C3\u00A3o os Emissores ou Portadores poder\u00C3\u00A3o consultar todo o Hist\u00C3\u00B3rico de Faturas vinculados a uma determinada Conta, independentemente do valor delas.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "maxNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "ultimoNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "faixaNossoNumero" : 123,
    "minNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "banco" : 123456789,
    "id" : 123456789,
    "descricao" : "aeiou",
    "tamNossoNumero" : 123
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter dataVencimento: (query) Data de Vencimento da Fatura. (optional)

     - returns: RequestBuilder<PageFaturas> 
     */
    public class func listarFaturasUsingGETWithRequestBuilder(id id: Int, page: Int?, limit: Int?, dataVencimento: String?) -> RequestBuilder<PageFaturas> {
        var path = "/api/contas/{id}/faturas"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "dataVencimento": dataVencimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageFaturas>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista o hist\u00C3\u00B3rico de altera\u00C3\u00A7\u00C3\u00B5es de limites da conta
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarHistoricoAlteracoesLimitesUsingGET(id id: Int, page: Int?, limit: Int?, completion: ((data: PageHistoricoEventos?, error: ErrorType?) -> Void)) {
        listarHistoricoAlteracoesLimitesUsingGETWithRequestBuilder(id: id, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista o hist\u00C3\u00B3rico de altera\u00C3\u00A7\u00C3\u00B5es de limites da conta
     
     - GET /api/contas/{id}/historicos-alteracoes-limites
     - Este recurso consulta o hist\u00C3\u00B3rico com as altera\u00C3\u00A7\u00C3\u00B5es de limites da conta informada
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "tipoHistorico" : "aeiou",
    "valorAtribuido" : "aeiou",
    "dataHistorico" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "idHistorico" : 123456789,
    "valorAnterior" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)

     - returns: RequestBuilder<PageHistoricoEventos> 
     */
    public class func listarHistoricoAlteracoesLimitesUsingGETWithRequestBuilder(id id: Int, page: Int?, limit: Int?) -> RequestBuilder<PageHistoricoEventos> {
        var path = "/api/contas/{id}/historicos-alteracoes-limites"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageHistoricoEventos>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista o hist\u00C3\u00B3rico de entradas/sa\u00C3\u00ADdas de assessorias de cobran\u00C3\u00A7a
     
     - parameter id: (path) Id Conta 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarHistoricoAssessoriaUsingGET(id id: Int, page: Int?, limit: Int?, completion: ((data: LinkPageHistoricoAssessoriaResponse?, error: ErrorType?) -> Void)) {
        listarHistoricoAssessoriaUsingGETWithRequestBuilder(id: id, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista o hist\u00C3\u00B3rico de entradas/sa\u00C3\u00ADdas de assessorias de cobran\u00C3\u00A7a
     
     - GET /api/contas/{id}/historicos-assessorias-cobranca
     - Permite listar todos os registros de entrada e sa\u00C3\u00ADda da Conta em arquivos de integra\u00C3\u00A7\u00C3\u00A3o com empresas de assessorias de cobran\u00C3\u00A7a a partir do c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (idConta).
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "tipoHistorico" : "aeiou",
    "nomeAssessoria" : "aeiou",
    "dataHoraHistorico" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) Id Conta 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)

     - returns: RequestBuilder<LinkPageHistoricoAssessoriaResponse> 
     */
    public class func listarHistoricoAssessoriaUsingGETWithRequestBuilder(id id: Int, page: Int?, limit: Int?) -> RequestBuilder<LinkPageHistoricoAssessoriaResponse> {
        var path = "/api/contas/{id}/historicos-assessorias-cobranca"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<LinkPageHistoricoAssessoriaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista o historico de atrasos das faturas
     
     - parameter id: (path) Id Conta 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarHistoricoAtrasosFaturasUsingGET(id id: Int, completion: ((data: PageHistoricoAtraso?, error: ErrorType?) -> Void)) {
        listarHistoricoAtrasosFaturasUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista o historico de atrasos das faturas
     
     - GET /api/contas/{id}/historicos-faturas-atrasos
     - Este recurso lista o hist\u00C3\u00B3rico do pagamento de faturas em atraso
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "dataVencimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "diasPagamentoAposVencimento" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) Id Conta 

     - returns: RequestBuilder<PageHistoricoAtraso> 
     */
    public class func listarHistoricoAtrasosFaturasUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<PageHistoricoAtraso> {
        var path = "/api/contas/{id}/historicos-faturas-atrasos"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageHistoricoAtraso>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Lista as transa\u00C3\u00A7\u00C3\u00B5es n\u00C3\u00A3o processadas da conta
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter dataInicio: (query) Data de in\u00C3\u00ADcio da consulta do extrato no formato yyyy-MM-dd (Par\u00C3\u00A2mentro Ignorado se dataFim n\u00C3\u00A3o for definida). (optional)
     - parameter dataFim: (query) Data fim da consulta do extrato no formato yyyy-MM-dd  (Par\u00C3\u00A2mentro Ignorado se dataInicio n\u00C3\u00A3o for definida). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarNaoProcessadasUsingGET(id id: Int, page: Int?, limit: Int?, dataInicio: String?, dataFim: String?, completion: ((data: PageTransacoesCorrentes?, error: ErrorType?) -> Void)) {
        listarNaoProcessadasUsingGETWithRequestBuilder(id: id, page: page, limit: limit, dataInicio: dataInicio, dataFim: dataFim).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista as transa\u00C3\u00A7\u00C3\u00B5es n\u00C3\u00A3o processadas da conta
     
     - GET /api/contas/{id}/transacoes/listar-nao-processadas
     - Este m\u00C3\u00A9todo permite que sejam listadas todas as transa\u00C3\u00A7\u00C3\u00B5es n\u00C3\u00A3o processadas da Conta.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "statusTransacao" : "aeiou",
    "grupoMCC" : 123456789,
    "valorUSD" : 1.3579000000000001069366817318950779736042022705078125,
    "planoParcelamento" : 123456789,
    "cartaoMascarado" : "aeiou",
    "codigoTerminal" : "aeiou",
    "flagFaturado" : 123,
    "codigoMoedaOrigem" : "aeiou",
    "codigoReferencia" : "aeiou",
    "dataCotacaoUSD" : "aeiou",
    "nomePortador" : "aeiou",
    "dataFaturamento" : "aeiou",
    "localidadeEstabelecimento" : "aeiou",
    "flagEstorno" : 123,
    "id" : 123456789,
    "valorBRL" : 1.3579000000000001069366817318950779736042022705078125,
    "cotacaoUSD" : 1.3579000000000001069366817318950779736042022705078125,
    "numeroParcela" : 123456789,
    "codigoMCC" : 123456789,
    "flagCredito" : 123,
    "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTaxaEmbarque" : 1.3579000000000001069366817318950779736042022705078125,
    "idEstabelecimento" : 123456789,
    "idConta" : 123456789,
    "codigoMoedaDestino" : "aeiou",
    "idEvento" : 123456789,
    "dataTransacaoUTC" : "aeiou",
    "modoEntradaTransacao" : "aeiou",
    "idTransacaoEstorno" : 123456789,
    "nomeEstabelecimento" : "aeiou",
    "codigoAutorizacao" : "aeiou",
    "tipoTransacao" : "aeiou",
    "tipoEvento" : "aeiou",
    "detalhesTransacao" : "aeiou",
    "dataVencimento" : "aeiou",
    "grupoDescricaoMCC" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter dataInicio: (query) Data de in\u00C3\u00ADcio da consulta do extrato no formato yyyy-MM-dd (Par\u00C3\u00A2mentro Ignorado se dataFim n\u00C3\u00A3o for definida). (optional)
     - parameter dataFim: (query) Data fim da consulta do extrato no formato yyyy-MM-dd  (Par\u00C3\u00A2mentro Ignorado se dataInicio n\u00C3\u00A3o for definida). (optional)

     - returns: RequestBuilder<PageTransacoesCorrentes> 
     */
    public class func listarNaoProcessadasUsingGETWithRequestBuilder(id id: Int, page: Int?, limit: Int?, dataInicio: String?, dataFim: String?) -> RequestBuilder<PageTransacoesCorrentes> {
        var path = "/api/contas/{id}/transacoes/listar-nao-processadas"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "dataInicio": dataInicio,
            "dataFim": dataFim
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTransacoesCorrentes>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista as transa\u00C3\u00A7\u00C3\u00B5es processadas da conta
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter dataVencimento: (query) Data de vencimento do extrato no formato yyyy-MM-dd. (optional)
     - parameter dataInicio: (query) Data de in\u00C3\u00ADcio da consulta do extrato no formato yyyy-MM-dd (Ignorado quando o par\u00C3\u00A2mentro dataVencimento \u00C3\u00A9 usado). (optional)
     - parameter dataFim: (query) Data fim da consulta do extrato no formato yyyy-MM-dd  (Ignorado quando o par\u00C3\u00A2mentro dataVencimento \u00C3\u00A9 usado). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarProcessadasUsingGET(id id: Int, page: Int?, limit: Int?, dataVencimento: String?, dataInicio: String?, dataFim: String?, completion: ((data: PageTransacoesCorrentes?, error: ErrorType?) -> Void)) {
        listarProcessadasUsingGETWithRequestBuilder(id: id, page: page, limit: limit, dataVencimento: dataVencimento, dataInicio: dataInicio, dataFim: dataFim).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista as transa\u00C3\u00A7\u00C3\u00B5es processadas da conta
     
     - GET /api/contas/{id}/transacoes/listar-processadas
     - Este m\u00C3\u00A9todo permite que sejam listadas todas as transa\u00C3\u00A7\u00C3\u00B5es processadas da Conta.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "statusTransacao" : "aeiou",
    "grupoMCC" : 123456789,
    "valorUSD" : 1.3579000000000001069366817318950779736042022705078125,
    "planoParcelamento" : 123456789,
    "cartaoMascarado" : "aeiou",
    "codigoTerminal" : "aeiou",
    "flagFaturado" : 123,
    "codigoMoedaOrigem" : "aeiou",
    "codigoReferencia" : "aeiou",
    "dataCotacaoUSD" : "aeiou",
    "nomePortador" : "aeiou",
    "dataFaturamento" : "aeiou",
    "localidadeEstabelecimento" : "aeiou",
    "flagEstorno" : 123,
    "id" : 123456789,
    "valorBRL" : 1.3579000000000001069366817318950779736042022705078125,
    "cotacaoUSD" : 1.3579000000000001069366817318950779736042022705078125,
    "numeroParcela" : 123456789,
    "codigoMCC" : 123456789,
    "flagCredito" : 123,
    "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTaxaEmbarque" : 1.3579000000000001069366817318950779736042022705078125,
    "idEstabelecimento" : 123456789,
    "idConta" : 123456789,
    "codigoMoedaDestino" : "aeiou",
    "idEvento" : 123456789,
    "dataTransacaoUTC" : "aeiou",
    "modoEntradaTransacao" : "aeiou",
    "idTransacaoEstorno" : 123456789,
    "nomeEstabelecimento" : "aeiou",
    "codigoAutorizacao" : "aeiou",
    "tipoTransacao" : "aeiou",
    "tipoEvento" : "aeiou",
    "detalhesTransacao" : "aeiou",
    "dataVencimento" : "aeiou",
    "grupoDescricaoMCC" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter dataVencimento: (query) Data de vencimento do extrato no formato yyyy-MM-dd. (optional)
     - parameter dataInicio: (query) Data de in\u00C3\u00ADcio da consulta do extrato no formato yyyy-MM-dd (Ignorado quando o par\u00C3\u00A2mentro dataVencimento \u00C3\u00A9 usado). (optional)
     - parameter dataFim: (query) Data fim da consulta do extrato no formato yyyy-MM-dd  (Ignorado quando o par\u00C3\u00A2mentro dataVencimento \u00C3\u00A9 usado). (optional)

     - returns: RequestBuilder<PageTransacoesCorrentes> 
     */
    public class func listarProcessadasUsingGETWithRequestBuilder(id id: Int, page: Int?, limit: Int?, dataVencimento: String?, dataInicio: String?, dataFim: String?) -> RequestBuilder<PageTransacoesCorrentes> {
        var path = "/api/contas/{id}/transacoes/listar-processadas"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "dataVencimento": dataVencimento,
            "dataInicio": dataInicio,
            "dataFim": dataFim
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTransacoesCorrentes>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Listar as transfer\u00C3\u00AAncias banc\u00C3\u00A1rias realizadas
     
     - parameter id: (path) Id Conta 
     - parameter idContaBancariaDestino: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria de destino (id) (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET27(id id: Int, idContaBancariaDestino: Int?, page: Int?, limit: Int?, completion: ((data: LinkPageTransferenciaBancariaResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET27WithRequestBuilder(id: id, idContaBancariaDestino: idContaBancariaDestino, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Listar as transfer\u00C3\u00AAncias banc\u00C3\u00A1rias realizadas
     
     - GET /api/contas/{id}/transferencias-creditos-contas-bancarias
     - Este recurso tem como objetivo permitir que o portador de um Cart\u00C3\u00A3o possa consultar uma lista das Transfer\u00C3\u00AAncias Banc\u00C3\u00A1rias para os Favorecidos cadastrados.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "numeroParcelas" : 123,
    "idOperacao" : 123456789,
    "idAutorizacao" : 123456789,
    "origem" : "aeiou",
    "valorCompra" : 1.3579000000000001069366817318950779736042022705078125,
    "idTransferencia" : 123456789,
    "idContaPortador" : 123456789,
    "dataCompra" : "aeiou",
    "dataVencimentoPadrao" : "aeiou",
    "nsuorigem" : 123456789,
    "valorContrato" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTAC" : 1.3579000000000001069366817318950779736042022705078125,
    "dataAutorizacao" : "aeiou",
    "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
    "idCartao" : 123456789,
    "idEstabelecimento" : 123456789,
    "idConta" : 123456789,
    "valor" : 1.3579000000000001069366817318950779736042022705078125,
    "terminal" : "aeiou",
    "codigoAutorizacao" : "aeiou",
    "valorParcela" : 1.3579000000000001069366817318950779736042022705078125,
    "dataMovimento" : "aeiou",
    "taxaJuros" : 1.3579000000000001069366817318950779736042022705078125,
    "numeroEstabelecimento" : 123456789,
    "dataVencimentoReal" : "aeiou",
    "valorIOF" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) Id Conta 
     - parameter idContaBancariaDestino: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria de destino (id) (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)

     - returns: RequestBuilder<LinkPageTransferenciaBancariaResponse> 
     */
    public class func listarUsingGET27WithRequestBuilder(id id: Int, idContaBancariaDestino: Int?, page: Int?, limit: Int?) -> RequestBuilder<LinkPageTransferenciaBancariaResponse> {
        var path = "/api/contas/{id}/transferencias-creditos-contas-bancarias"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_conta_bancaria_destino": idContaBancariaDestino,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<LinkPageTransferenciaBancariaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista as transfer\u00C3\u00AAncias realizadas pela conta
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idTransferencia: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da transfer\u00C3\u00AAncia (id). (optional)
     - parameter idContaOrigem: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta em que o valor ser\u00C3\u00A1 debitado para a transfer\u00C3\u00AAncia. (id). (optional)
     - parameter idContaDestino: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta em que o valor ser\u00C3\u00A1 creditado para a transfer\u00C3\u00AAncia. (id). (optional)
     - parameter valorTransferencia: (query) Valor estabelecido para ser transferido. (optional)
     - parameter dataTransferencia: (query) Data estabelecida para ocorrer a transfer\u00C3\u00AAncia. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET28(id id: Int, page: Int?, limit: Int?, idTransferencia: Int?, idContaOrigem: Int?, idContaDestino: Int?, valorTransferencia: Double?, dataTransferencia: String?, completion: ((data: PageTransferencias?, error: ErrorType?) -> Void)) {
        listarUsingGET28WithRequestBuilder(id: id, page: page, limit: limit, idTransferencia: idTransferencia, idContaOrigem: idContaOrigem, idContaDestino: idContaDestino, valorTransferencia: valorTransferencia, dataTransferencia: dataTransferencia).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista as transfer\u00C3\u00AAncias realizadas pela conta
     
     - GET /api/contas/{id}/transferencias-creditos-cartoes
     - Este m\u00C3\u00A9todo permite que sejam listadas as transfer\u00C3\u00AAncias realizadas pela conta existentes na base do emissor.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "valorTransferencia" : 1.3579000000000001069366817318950779736042022705078125,
    "idContaOrigem" : 123456789,
    "dataTransferencia" : "aeiou",
    "nomePessoaOrigem" : "aeiou",
    "idContaDestino" : 123456789,
    "valorTarifa" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123456789,
    "nomePessoaDestino" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da conta (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idTransferencia: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da transfer\u00C3\u00AAncia (id). (optional)
     - parameter idContaOrigem: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta em que o valor ser\u00C3\u00A1 debitado para a transfer\u00C3\u00AAncia. (id). (optional)
     - parameter idContaDestino: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta em que o valor ser\u00C3\u00A1 creditado para a transfer\u00C3\u00AAncia. (id). (optional)
     - parameter valorTransferencia: (query) Valor estabelecido para ser transferido. (optional)
     - parameter dataTransferencia: (query) Data estabelecida para ocorrer a transfer\u00C3\u00AAncia. (optional)

     - returns: RequestBuilder<PageTransferencias> 
     */
    public class func listarUsingGET28WithRequestBuilder(id id: Int, page: Int?, limit: Int?, idTransferencia: Int?, idContaOrigem: Int?, idContaDestino: Int?, valorTransferencia: Double?, dataTransferencia: String?) -> RequestBuilder<PageTransferencias> {
        var path = "/api/contas/{id}/transferencias-creditos-cartoes"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "idTransferencia": idTransferencia,
            "idContaOrigem": idContaOrigem,
            "idContaDestino": idContaDestino,
            "valorTransferencia": valorTransferencia,
            "dataTransferencia": dataTransferencia
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTransferencias>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista contas existentes na base de dados do Emissor
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idProduto: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do produto ao qual a conta faz parte. (id). (optional)
     - parameter idOrigemComercial: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Origem Comercial (id) que deu origem a Conta. (optional)
     - parameter idPessoa: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa Titular da Conta (id). (optional)
     - parameter idStatusConta: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Produto a qual o cart\u00C3\u00A3o pertence (id). (optional)
     - parameter diaVencimento: (query) Apresenta o dia de vencimento. (optional)
     - parameter melhorDiaCompra: (query) Apresenta o melhor dia de compra. (optional)
     - parameter dataStatusConta: (query) Apresenta a data em que o idStatusConta atual fora atribu\u00C3\u00ADdo para ela. (optional)
     - parameter dataCadastro: (query) Apresenta a data em que o cart\u00C3\u00A3o foi gerado. (optional)
     - parameter dataUltimaAlteracaoVencimento: (query) Apresenta a data da ultima altera\u00C3\u00A7\u00C3\u00A3o de vencimento. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET6(page page: Int?, limit: Int?, idProduto: Int?, idOrigemComercial: Int?, idPessoa: Int?, idStatusConta: Int?, diaVencimento: Int?, melhorDiaCompra: Int?, dataStatusConta: String?, dataCadastro: String?, dataUltimaAlteracaoVencimento: String?, completion: ((data: PageContas?, error: ErrorType?) -> Void)) {
        listarUsingGET6WithRequestBuilder(page: page, limit: limit, idProduto: idProduto, idOrigemComercial: idOrigemComercial, idPessoa: idPessoa, idStatusConta: idStatusConta, diaVencimento: diaVencimento, melhorDiaCompra: melhorDiaCompra, dataStatusConta: dataStatusConta, dataCadastro: dataCadastro, dataUltimaAlteracaoVencimento: dataUltimaAlteracaoVencimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista contas existentes na base de dados do Emissor
     
     - GET /api/contas
     - Este recurso permite listar contas existentes na base de dados do Emissor.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idPessoa" : 123456789,
    "idStatusConta" : 123456789,
    "valorRenda" : 1.3579000000000001069366817318950779736042022705078125,
    "idProduto" : 123456789,
    "idOrigemComercial" : 123456789,
    "melhorDiaCompra" : 123,
    "dataUltimaAlteracaoVencimento" : "aeiou",
    "dataStatusConta" : "aeiou",
    "id" : 123456789,
    "diaVencimento" : 123,
    "dataCadastro" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idProduto: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do produto ao qual a conta faz parte. (id). (optional)
     - parameter idOrigemComercial: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Origem Comercial (id) que deu origem a Conta. (optional)
     - parameter idPessoa: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa Titular da Conta (id). (optional)
     - parameter idStatusConta: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Produto a qual o cart\u00C3\u00A3o pertence (id). (optional)
     - parameter diaVencimento: (query) Apresenta o dia de vencimento. (optional)
     - parameter melhorDiaCompra: (query) Apresenta o melhor dia de compra. (optional)
     - parameter dataStatusConta: (query) Apresenta a data em que o idStatusConta atual fora atribu\u00C3\u00ADdo para ela. (optional)
     - parameter dataCadastro: (query) Apresenta a data em que o cart\u00C3\u00A3o foi gerado. (optional)
     - parameter dataUltimaAlteracaoVencimento: (query) Apresenta a data da ultima altera\u00C3\u00A7\u00C3\u00A3o de vencimento. (optional)

     - returns: RequestBuilder<PageContas> 
     */
    public class func listarUsingGET6WithRequestBuilder(page page: Int?, limit: Int?, idProduto: Int?, idOrigemComercial: Int?, idPessoa: Int?, idStatusConta: Int?, diaVencimento: Int?, melhorDiaCompra: Int?, dataStatusConta: String?, dataCadastro: String?, dataUltimaAlteracaoVencimento: String?) -> RequestBuilder<PageContas> {
        let path = "/api/contas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "idProduto": idProduto,
            "idOrigemComercial": idOrigemComercial,
            "idPessoa": idPessoa,
            "idStatusConta": idStatusConta,
            "diaVencimento": diaVencimento,
            "melhorDiaCompra": melhorDiaCompra,
            "dataStatusConta": dataStatusConta,
            "dataCadastro": dataCadastro,
            "dataUltimaAlteracaoVencimento": dataUltimaAlteracaoVencimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageContas>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Realiza a reativa\u00C3\u00A7\u00C3\u00A3o de contas que foram desativadas por inadimpl\u00C3\u00AAncia
     
     - parameter id: (path) Id Conta 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func reativarUsingPOST(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        reativarUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realiza a reativa\u00C3\u00A7\u00C3\u00A3o de contas que foram desativadas por inadimpl\u00C3\u00AAncia
     
     - POST /api/contas/{id}/reativar
     - Este recurso permite reativar contas que foram desativadas por inadimpl\u00C3\u00AAncia. Para isso, ser\u00C3\u00A1 preciso informar o c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da Conta (id).
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) Id Conta 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func reativarUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/contas/{id}/reativar"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Permite listar uma linha do tempo com os eventos da conta
     
     - parameter id: (path) Id Conta 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func transacoesUsingGET(id id: Int, page: Int?, limit: Int?, completion: ((data: PageTransacaoResponse?, error: ErrorType?) -> Void)) {
        transacoesUsingGETWithRequestBuilder(id: id, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Permite listar uma linha do tempo com os eventos da conta
     
     - GET /api/contas/{id}/timeline
     - Esta opera\u00C3\u00A7\u00C3\u00A3o tem como objetivo permitir a listagem, em formato de timeline, dos eventos vinculados a uma detemrinada conta. Transa\u00C3\u00A7\u00C3\u00B5es, fechamento da fatura, pagamentos, gera\u00C3\u00A7\u00C3\u00A3o de cart\u00C3\u00B5es e altera\u00C3\u00A7\u00C3\u00A3o de limite s\u00C3\u00A3o exemplos de eventos contemplados por esta funcionalidade. Neste m\u00C3\u00A9todo, as opera\u00C3\u00A7\u00C3\u00B5es s\u00C3\u00A3o ordenadas de forma decrescente.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idTipoRegistro" : 123456789,
    "flagCredito" : 123,
    "idConta" : 123456789,
    "idGrupoMCC" : 123,
    "valor" : 1.3579000000000001069366817318950779736042022705078125,
    "flagSolicitouContestacao" : 123,
    "quantidadeParcelas" : 123,
    "descricao" : "aeiou",
    "tipoEstabelecimento" : "aeiou",
    "descricaoStatus" : "aeiou",
    "dataEvento" : "aeiou",
    "valorParcela" : 1.3579000000000001069366817318950779736042022705078125,
    "idTransacao" : 123456789,
    "estabelecimento" : "aeiou",
    "ordem" : 123,
    "ultimaParcelaLancada" : 123,
    "id" : 123456789,
    "valorDolar" : 1.3579000000000001069366817318950779736042022705078125,
    "status" : 123
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) Id Conta 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)

     - returns: RequestBuilder<PageTransacaoResponse> 
     */
    public class func transacoesUsingGETWithRequestBuilder(id id: Int, page: Int?, limit: Int?) -> RequestBuilder<PageTransacaoResponse> {
        var path = "/api/contas/{id}/timeline"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTransacaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Realizar transfer\u00C3\u00AAncia banc\u00C3\u00A1ria do cart\u00C3\u00A3o para contas banc\u00C3\u00A1rias
     
     - parameter id: (path) Id Conta 
     - parameter transferenciaBancariaPersist: (body) transferenciaBancariaPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func transferirUsingPOST(id id: Int, transferenciaBancariaPersist: TransferenciaBancariaPersist, completion: ((data: LinkTransferenciaBancariaResponse?, error: ErrorType?) -> Void)) {
        transferirUsingPOSTWithRequestBuilder(id: id, transferenciaBancariaPersist: transferenciaBancariaPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realizar transfer\u00C3\u00AAncia banc\u00C3\u00A1ria do cart\u00C3\u00A3o para contas banc\u00C3\u00A1rias
     
     - POST /api/contas/{id}/transferencias-creditos-contas-bancarias
     - Este recurso tem como objetivo permitir que o portador de um cart\u00C3\u00A3o possa realizar a transfer\u00C3\u00AAncia de cr\u00C3\u00A9dito para uma conta banc\u00C3\u00A1ria. Assim, o valor do cr\u00C3\u00A9dito somado a tarifa para transfer\u00C3\u00AAncia, quando praticada pelo emissor, ser\u00C3\u00A1 debitado da conta de origem, se houver saldo suficiente, e ser\u00C3\u00A1 creditado na conta banc\u00C3\u00A1ria de destino.
     - examples: [{contentType=application/json, example={
  "numeroParcelas" : 123,
  "idOperacao" : 123456789,
  "idAutorizacao" : 123456789,
  "origem" : "aeiou",
  "valorCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "idTransferencia" : 123456789,
  "idContaPortador" : 123456789,
  "dataCompra" : "aeiou",
  "dataVencimentoPadrao" : "aeiou",
  "nsuorigem" : 123456789,
  "valorContrato" : 1.3579000000000001069366817318950779736042022705078125,
  "valorTAC" : 1.3579000000000001069366817318950779736042022705078125,
  "dataAutorizacao" : "aeiou",
  "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
  "idCartao" : 123456789,
  "idEstabelecimento" : 123456789,
  "idConta" : 123456789,
  "valor" : 1.3579000000000001069366817318950779736042022705078125,
  "terminal" : "aeiou",
  "codigoAutorizacao" : "aeiou",
  "valorParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "dataMovimento" : "aeiou",
  "taxaJuros" : 1.3579000000000001069366817318950779736042022705078125,
  "numeroEstabelecimento" : 123456789,
  "dataVencimentoReal" : "aeiou",
  "valorIOF" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Id Conta 
     - parameter transferenciaBancariaPersist: (body) transferenciaBancariaPersist 

     - returns: RequestBuilder<LinkTransferenciaBancariaResponse> 
     */
    public class func transferirUsingPOSTWithRequestBuilder(id id: Int, transferenciaBancariaPersist: TransferenciaBancariaPersist) -> RequestBuilder<LinkTransferenciaBancariaResponse> {
        var path = "/api/contas/{id}/transferencias-creditos-contas-bancarias"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = transferenciaBancariaPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<LinkTransferenciaBancariaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Realiza uma transfer\u00C3\u00AAncia de Cr\u00C3\u00A9dito para outro cliente do mesmo Emissor
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da conta do cliente portador do cart\u00C3\u00A3o que ser\u00C3\u00A1 debitado (id). 
     - parameter idContaDestino: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do cliente portador do cart\u00C3\u00A3o que ser\u00C3\u00A1 creditado (id). 
     - parameter valorTransferencia: (query) Valor da Transfer\u00C3\u00AAncia. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func transferirUsingPOST1(id id: Int, idContaDestino: Int, valorTransferencia: Double, completion: ((data: PageTransferencias?, error: ErrorType?) -> Void)) {
        transferirUsingPOST1WithRequestBuilder(id: id, idContaDestino: idContaDestino, valorTransferencia: valorTransferencia).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realiza uma transfer\u00C3\u00AAncia de Cr\u00C3\u00A9dito para outro cliente do mesmo Emissor
     
     - POST /api/contas/{id}/transferencias-creditos-cartoes
     - Este m\u00C3\u00A9todo permite que um portador de um cart\u00C3\u00A3o possa realizar auma transfer\u00C3\u00AAncia de cr\u00C3\u00A9dito para outro cliente do mesmo emissor.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "valorTransferencia" : 1.3579000000000001069366817318950779736042022705078125,
    "idContaOrigem" : 123456789,
    "dataTransferencia" : "aeiou",
    "nomePessoaOrigem" : "aeiou",
    "idContaDestino" : 123456789,
    "valorTarifa" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123456789,
    "nomePessoaDestino" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da conta do cliente portador do cart\u00C3\u00A3o que ser\u00C3\u00A1 debitado (id). 
     - parameter idContaDestino: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do cliente portador do cart\u00C3\u00A3o que ser\u00C3\u00A1 creditado (id). 
     - parameter valorTransferencia: (query) Valor da Transfer\u00C3\u00AAncia. 

     - returns: RequestBuilder<PageTransferencias> 
     */
    public class func transferirUsingPOST1WithRequestBuilder(id id: Int, idContaDestino: Int, valorTransferencia: Double) -> RequestBuilder<PageTransferencias> {
        var path = "/api/contas/{id}/transferencias-creditos-cartoes"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_conta_destino": idContaDestino,
            "valor_transferencia": valorTransferencia
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTransferencias>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

}
