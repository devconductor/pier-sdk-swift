//
// ContaAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ContaAPI: APIBase {
    /**
     
     /contas/buscar
     
     - parameter nome: (query) Nome (optional)
     - parameter cpf: (query) CPF (opcional caso nao informe o n\u00C3\u00BAmero do cart\u00C3\u00A3o ou id da conta) (optional)
     - parameter numeroCartao: (query) N\u00C3\u00BAmero do cart\u00C3\u00A3o (opcional caso n\u00C3\u00A3o informa o cpf ou id da conta) (optional)
     - parameter idConta: (query) ID da Conta (opcional caso n\u00C3\u00A3o informe o n\u00C3\u00BAmero do cart\u00C3\u00A3o ou cpf) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func buscarContaUsingGET(nome nome: String?, cpf: String?, numeroCartao: String?, idConta: Int?, completion: ((data: ConsultarContaResponse?, error: ErrorType?) -> Void)) {
        buscarContaUsingGETWithRequestBuilder(nome: nome, cpf: cpf, numeroCartao: numeroCartao, idConta: idConta).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     /contas/buscar
     
     - GET /v1/contas/buscar
     - Consulte contas filtrando pelos campos id do emissor, n\u00C3\u00BAmero do cart\u00C3\u00A3o, nome ou CPF/CNPJ 
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "descricaoRetorno" : "aeiou",
  "codRetorno" : 123,
  "contas" : [ {
    "numeroCelular" : "aeiou",
    "numeroIdentidade" : "aeiou",
    "ufIdentidade" : "aeiou",
    "idConta" : 123,
    "cnpjLoja" : "aeiou",
    "possuiCompraAprovada" : "aeiou",
    "statusConta" : 123,
    "dddCelular" : "aeiou",
    "nome" : "aeiou",
    "cpf" : "aeiou",
    "dataCadastroConta" : "aeiou",
    "orgaoIdentidade" : "aeiou",
    "dataEmissaoIdentidade" : "aeiou",
    "dataNascimento" : "aeiou"
  } ],
  "codigoRetorno" : 123
}}]
     
     - parameter nome: (query) Nome (optional)
     - parameter cpf: (query) CPF (opcional caso nao informe o n\u00C3\u00BAmero do cart\u00C3\u00A3o ou id da conta) (optional)
     - parameter numeroCartao: (query) N\u00C3\u00BAmero do cart\u00C3\u00A3o (opcional caso n\u00C3\u00A3o informa o cpf ou id da conta) (optional)
     - parameter idConta: (query) ID da Conta (opcional caso n\u00C3\u00A3o informe o n\u00C3\u00BAmero do cart\u00C3\u00A3o ou cpf) (optional)

     - returns: RequestBuilder<ConsultarContaResponse> 
     */
    public class func buscarContaUsingGETWithRequestBuilder(nome nome: String?, cpf: String?, numeroCartao: String?, idConta: Int?) -> RequestBuilder<ConsultarContaResponse> {
        let path = "/v1/contas/buscar"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "nome": nome,
            "cpf": cpf,
            "numeroCartao": numeroCartao,
            "idConta": idConta
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ConsultarContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     /contas/{idConta}
     
     - parameter idConta: (path) ID da Conta 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarContaUsingGET(idConta idConta: Int, completion: ((data: ContaResponse?, error: ErrorType?) -> Void)) {
        consultarContaUsingGETWithRequestBuilder(idConta: idConta).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     /contas/{idConta}
     
     - GET /v1/contas/{idConta}
     - Consulte informa\u00C3\u00A7\u00C3\u00B5es de uma determinada conta
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "pessoaFisica" : {
    "numeroCelular" : "aeiou",
    "cidade" : "aeiou",
    "dddcelular" : "aeiou",
    "complementoLogradouro" : "aeiou",
    "endereco" : "aeiou",
    "bairro" : "aeiou",
    "dddtelefone" : "aeiou",
    "numeroTelefone" : "aeiou",
    "nome" : "aeiou",
    "cep" : "aeiou",
    "identidade" : "aeiou",
    "uf" : "aeiou",
    "orgaoEmissor" : "aeiou",
    "idPessoaFisica" : 123,
    "cpf" : "aeiou",
    "dataEmissaoIdentidade" : "aeiou",
    "dataNascimento" : "aeiou",
    "sexo" : "aeiou",
    "numeroLogradouro" : 123
  },
  "idOrigemComercial" : 123,
  "bin" : 123,
  "vinculoOrigemUsuario" : true,
  "idBandeira" : 123,
  "formaEnvioFatura" : "aeiou",
  "descricaoStatus" : "aeiou",
  "nomeCredor" : "aeiou",
  "idProduto" : 123,
  "vencimento1" : 123,
  "dddcelularSMS" : "aeiou",
  "emissor" : "aeiou",
  "taxaRefinanciamento" : "aeiou",
  "flagCancelamento" : true,
  "vcto" : "aeiou",
  "melhorDia" : 123,
  "diasEmAtraso" : 123,
  "idConta" : 123,
  "pagamentos" : 1.3579000000000001069366817318950779736042022705078125,
  "idEndereco" : 123,
  "dataCadastramento" : "aeiou",
  "idProposta" : 123,
  "numCelularSMS" : "aeiou",
  "saldoLimite" : {
    "totalDisponivelUtilizacao" : 1.3579000000000001069366817318950779736042022705078125,
    "disponibCompraNac" : 1.3579000000000001069366817318950779736042022705078125,
    "disponibGlobalCredito" : 1.3579000000000001069366817318950779736042022705078125,
    "limiteGlobalCredito" : 1.3579000000000001069366817318950779736042022705078125,
    "valorMinimoExtrato" : 1.3579000000000001069366817318950779736042022705078125,
    "saldoDevedorOneroso" : 1.3579000000000001069366817318950779736042022705078125,
    "vencimentoPadraoAnterior" : "aeiou",
    "limiteCreditoDisponivel" : 1.3579000000000001069366817318950779736042022705078125,
    "saldoDevedor" : 1.3579000000000001069366817318950779736042022705078125,
    "flagAntecipacao" : true,
    "saltaExtratoAnterior" : 1.3579000000000001069366817318950779736042022705078125,
    "pontosConcedidos" : 1.3579000000000001069366817318950779736042022705078125,
    "proximoVencimentoReal" : "aeiou",
    "disponibSaqueNacGlobal" : 1.3579000000000001069366817318950779736042022705078125,
    "vencimentoPosProx" : "aeiou",
    "vencimentoRealAnterior" : "aeiou",
    "limiteSaqueNacGlobal" : 1.3579000000000001069366817318950779736042022705078125,
    "disponibParcelasNac" : 1.3579000000000001069366817318950779736042022705078125,
    "disponibParceladoNac" : 1.3579000000000001069366817318950779736042022705078125,
    "pontosRemanescentes" : 1.3579000000000001069366817318950779736042022705078125,
    "numeroCiclo" : 123,
    "saldoAtualFinal" : 1.3579000000000001069366817318950779736042022705078125,
    "limiteCompraNac" : 1.3579000000000001069366817318950779736042022705078125,
    "valorMinimoExtratoOriginal" : 1.3579000000000001069366817318950779736042022705078125,
    "limiteParcelasNac" : 1.3579000000000001069366817318950779736042022705078125,
    "limiteCreditoConcedido" : 1.3579000000000001069366817318950779736042022705078125,
    "saldoDevedorTotal" : 1.3579000000000001069366817318950779736042022705078125,
    "saldoCredor" : 1.3579000000000001069366817318950779736042022705078125,
    "totalFuturo" : 1.3579000000000001069366817318950779736042022705078125,
    "limitePontuacao" : 1.3579000000000001069366817318950779736042022705078125,
    "proximoVencimentoPadrao" : "aeiou",
    "limiteParceladoNac" : 1.3579000000000001069366817318950779736042022705078125
  },
  "cartao" : {
    "descricaoStatus" : "aeiou",
    "estagio" : 123,
    "numeroCartao" : "aeiou",
    "idCartao" : 123,
    "portadorId" : 123,
    "dataValidade" : "aeiou",
    "portador" : "aeiou",
    "statusData" : "2000-01-23T04:56:07.000+0000",
    "descricaoEstagio" : "aeiou",
    "flagCancelamento" : true,
    "status" : 123
  },
  "dataUltimoPagamento" : "aeiou",
  "dataVencCobranca" : "aeiou",
  "permiteRefinanciamento" : true,
  "idFantasiaBasica" : 123,
  "quantidadePagamentos" : 123,
  "idEmissor" : 123,
  "statusData" : "2000-01-23T04:56:07.000+0000",
  "nomeProduto" : "aeiou",
  "status" : 123
}}]
     
     - parameter idConta: (path) ID da Conta 

     - returns: RequestBuilder<ContaResponse> 
     */
    public class func consultarContaUsingGETWithRequestBuilder(idConta idConta: Int) -> RequestBuilder<ContaResponse> {
        var path = "/v1/contas/{idConta}"
        path = path.stringByReplacingOccurrencesOfString("{idConta}", withString: "\(idConta)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

}
