//
// OportunidadesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class OportunidadesAPI: APIBase {
    /**
     
     Altera o status do tipo oportunidade
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 
     - parameter idStatus: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do status do tipo oportunidade (id). 
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarStatusUsingPUT(id id: Int, idStatus: Int, persist: StatusOportunidade, completion: ((data: StatusOportunidadeResponse?, error: ErrorType?) -> Void)) {
        alterarStatusUsingPUTWithRequestBuilder(id: id, idStatus: idStatus, persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Altera o status do tipo oportunidade
     
     - PUT /api/tipos-oportunidades/{id}/status/{idStatus}
     - Este m\u00C3\u00A9todo realiza a altera\u00C3\u00A7\u00C3\u00A3o do status do tipo oportunidade.
     - examples: [{contentType=application/json, example={
  "nome" : "aeiou",
  "id" : 123456789,
  "flagAtivo" : false,
  "idTipoOportunidade" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 
     - parameter idStatus: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do status do tipo oportunidade (id). 
     - parameter persist: (body) persist 

     - returns: RequestBuilder<StatusOportunidadeResponse> 
     */
    public class func alterarStatusUsingPUTWithRequestBuilder(id id: Int, idStatus: Int, persist: StatusOportunidade) -> RequestBuilder<StatusOportunidadeResponse> {
        var path = "/api/tipos-oportunidades/{id}/status/{idStatus}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idStatus}", withString: "\(idStatus)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<StatusOportunidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Altera as oportunidades
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da oportunidade (id). 
     - parameter update: (body) update 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT3(id id: Int, update: OportunidadeUpdate, completion: ((data: OportunidadeResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT3WithRequestBuilder(id: id, update: update).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Altera as oportunidades
     
     - PUT /api/oportunidades/{id}
     - Este m\u00C3\u00A9todo realiza a altera\u00C3\u00A7\u00C3\u00A3o das oportunidades.
     - examples: [{contentType=application/json, example={
  "dataAtualizacao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatusOportunidade" : 123456789,
  "numeroReceitaFederal" : "aeiou",
  "id" : 123456789,
  "dataFimVigencia" : "aeiou",
  "dataCadastro" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataInicioVigencia" : "aeiou",
  "flagAtivo" : false,
  "detalhes" : [ {
    "conteudo" : "aeiou",
    "id" : 123456789,
    "nomeCampo" : "aeiou"
  } ],
  "idTipoOportunidade" : 123456789
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da oportunidade (id). 
     - parameter update: (body) update 

     - returns: RequestBuilder<OportunidadeResponse> 
     */
    public class func alterarUsingPUT3WithRequestBuilder(id id: Int, update: OportunidadeUpdate) -> RequestBuilder<OportunidadeResponse> {
        var path = "/api/oportunidades/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = update.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<OportunidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Altera os tipos oportunidades
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT7(id id: Int, persist: TipoOportunidade, completion: ((data: TipoOportunidadeResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT7WithRequestBuilder(id: id, persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Altera os tipos oportunidades
     
     - PUT /api/tipos-oportunidades/{id}
     - Este m\u00C3\u00A9todo realiza a altera\u00C3\u00A7\u00C3\u00A3o dos tipos oportunidades.
     - examples: [{contentType=application/json, example={
  "id" : 123456789,
  "flagAtivo" : false,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 
     - parameter persist: (body) persist 

     - returns: RequestBuilder<TipoOportunidadeResponse> 
     */
    public class func alterarUsingPUT7WithRequestBuilder(id id: Int, persist: TipoOportunidade) -> RequestBuilder<TipoOportunidadeResponse> {
        var path = "/api/tipos-oportunidades/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TipoOportunidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Apresenta dados de um determinado status do tipo oportunidade
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 
     - parameter idStatus: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do status (idStatus). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarStatusUsingGET(id id: Int, idStatus: Int, completion: ((data: StatusOportunidadeResponse?, error: ErrorType?) -> Void)) {
        consultarStatusUsingGETWithRequestBuilder(id: id, idStatus: idStatus).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Apresenta dados de um determinado status do tipo oportunidade
     
     - GET /api/tipos-oportunidades/{id}/status/{idStatus}
     - Este recurso permite consultar dados de um determinado status do tipo oportunidade a partir de seu codigo de identifica\u00C3\u00A7\u00C3\u00A3o (idStatus).
     - examples: [{contentType=application/json, example={
  "nome" : "aeiou",
  "id" : 123456789,
  "flagAtivo" : false,
  "idTipoOportunidade" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 
     - parameter idStatus: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do status (idStatus). 

     - returns: RequestBuilder<StatusOportunidadeResponse> 
     */
    public class func consultarStatusUsingGETWithRequestBuilder(id id: Int, idStatus: Int) -> RequestBuilder<StatusOportunidadeResponse> {
        var path = "/api/tipos-oportunidades/{id}/status/{idStatus}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idStatus}", withString: "\(idStatus)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<StatusOportunidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Apresenta dados de um determinado tipo oportunidade
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET20(id id: Int, completion: ((data: TipoOportunidadeResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET20WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Apresenta dados de um determinado tipo oportunidade
     
     - GET /api/tipos-oportunidades/{id}
     - Este recurso permite consultar dados de um determinado tipo oportunidade a partir de seu codigo de identifica\u00C3\u00A7\u00C3\u00A3o (id).
     - examples: [{contentType=application/json, example={
  "id" : 123456789,
  "flagAtivo" : false,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 

     - returns: RequestBuilder<TipoOportunidadeResponse> 
     */
    public class func consultarUsingGET20WithRequestBuilder(id id: Int) -> RequestBuilder<TipoOportunidadeResponse> {
        var path = "/api/tipos-oportunidades/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TipoOportunidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Apresenta dados de uma determinada oportunidade
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da oportunidade (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET8(id id: Int, completion: ((data: OportunidadeResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET8WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Apresenta dados de uma determinada oportunidade
     
     - GET /api/oportunidades/{id}
     - Este recurso permite consultar dados de uma determinada oportunidade a partir de seu codigo de identifica\u00C3\u00A7\u00C3\u00A3o (id).
     - examples: [{contentType=application/json, example={
  "dataAtualizacao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatusOportunidade" : 123456789,
  "numeroReceitaFederal" : "aeiou",
  "id" : 123456789,
  "dataFimVigencia" : "aeiou",
  "dataCadastro" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataInicioVigencia" : "aeiou",
  "flagAtivo" : false,
  "detalhes" : [ {
    "conteudo" : "aeiou",
    "id" : 123456789,
    "nomeCampo" : "aeiou"
  } ],
  "idTipoOportunidade" : 123456789
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da oportunidade (id). 

     - returns: RequestBuilder<OportunidadeResponse> 
     */
    public class func consultarUsingGET8WithRequestBuilder(id id: Int) -> RequestBuilder<OportunidadeResponse> {
        var path = "/api/oportunidades/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<OportunidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Lista as auditorias dos status oportunidades
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter revType: (query) C\u00C3\u00B3digo que representa o tipo de a\u00C3\u00A7\u00C3\u00A3o realizada no recurso de tipos oportunidades (optional)
     - parameter revDate: (query) Data da a\u00C3\u00A7\u00C3\u00A3o realizada no recurso de tipos oportunidades (optional)
     - parameter id: (query) C\u00C3\u00B3digo identificador do status oportunidade (optional)
     - parameter idTipoOportunidade: (query) C\u00C3\u00B3digo identificador do tipo oportunidade (optional)
     - parameter nome: (query) Nome do status oportunidade (optional)
     - parameter descricao: (query) Descri\u00C3\u00A7\u00C3\u00A3o do status oportunidade (optional)
     - parameter flagAtivo: (query) Flag de verifica\u00C3\u00A7\u00C3\u00A3o se o status oportunidade est\u00C3\u00A1 ativo (optional)
     - parameter revUser: (query) Usu\u00C3\u00A1rio da auditoria (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarAuditoriasStatusUsingGET(page page: Int?, limit: Int?, revType: Int?, revDate: String?, id: Int?, idTipoOportunidade: Int?, nome: String?, descricao: String?, flagAtivo: Bool?, revUser: String?, completion: ((data: PageStatusOprtunidadesAUD?, error: ErrorType?) -> Void)) {
        listarAuditoriasStatusUsingGETWithRequestBuilder(page: page, limit: limit, revType: revType, revDate: revDate, id: id, idTipoOportunidade: idTipoOportunidade, nome: nome, descricao: descricao, flagAtivo: flagAtivo, revUser: revUser).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista as auditorias dos status oportunidades
     
     - GET /api/auditorias-status-oportunidades
     - Este recurso permite listar os status oportunidades.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "rev" : 123456789,
    "nome" : "aeiou",
    "revType" : 123456789,
    "id" : 123456789,
    "revDate" : "aeiou",
    "flagAtivo" : false,
    "idTipoOportunidade" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter revType: (query) C\u00C3\u00B3digo que representa o tipo de a\u00C3\u00A7\u00C3\u00A3o realizada no recurso de tipos oportunidades (optional)
     - parameter revDate: (query) Data da a\u00C3\u00A7\u00C3\u00A3o realizada no recurso de tipos oportunidades (optional)
     - parameter id: (query) C\u00C3\u00B3digo identificador do status oportunidade (optional)
     - parameter idTipoOportunidade: (query) C\u00C3\u00B3digo identificador do tipo oportunidade (optional)
     - parameter nome: (query) Nome do status oportunidade (optional)
     - parameter descricao: (query) Descri\u00C3\u00A7\u00C3\u00A3o do status oportunidade (optional)
     - parameter flagAtivo: (query) Flag de verifica\u00C3\u00A7\u00C3\u00A3o se o status oportunidade est\u00C3\u00A1 ativo (optional)
     - parameter revUser: (query) Usu\u00C3\u00A1rio da auditoria (optional)

     - returns: RequestBuilder<PageStatusOprtunidadesAUD> 
     */
    public class func listarAuditoriasStatusUsingGETWithRequestBuilder(page page: Int?, limit: Int?, revType: Int?, revDate: String?, id: Int?, idTipoOportunidade: Int?, nome: String?, descricao: String?, flagAtivo: Bool?, revUser: String?) -> RequestBuilder<PageStatusOprtunidadesAUD> {
        let path = "/api/auditorias-status-oportunidades"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "revType": revType,
            "revDate": revDate,
            "id": id,
            "idTipoOportunidade": idTipoOportunidade,
            "nome": nome,
            "descricao": descricao,
            "flagAtivo": flagAtivo,
            "revUser": revUser
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageStatusOprtunidadesAUD>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista as auditorias das oportunidades
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idStatusOportunidade: (query) C\u00C3\u00B3digo identificador do status oportunidade (optional)
     - parameter dataCadastro: (query) Data do cadastro da oportunidade (optional)
     - parameter dataAtualizacao: (query) Data da atualiza\u00C3\u00A7\u00C3\u00A3o da oportunidade (optional)
     - parameter numeroReceitaFederal: (query) N\u00C3\u00BAmero receita federal do cliente ao qual ser\u00C3\u00A1 ofertada a oportunidade (optional)
     - parameter dataInicioVigencia: (query) In\u00C3\u00ADcio da vig\u00C3\u00AAncia da oportunidade (optional)
     - parameter datatFimVigencia: (query) Fim da vig\u00C3\u00AAncia da oportunidade (optional)
     - parameter flagAtivo: (query) Flag de verifica\u00C3\u00A7\u00C3\u00A3o se a oportunidade est\u00C3\u00A1 ativa (optional)
     - parameter revDate: (query) Data da auditoria (optional)
     - parameter revType: (query) Tipo da auditoria (optional)
     - parameter revUser: (query) Usu\u00C3\u00A1rio da auditoria (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarAuditoriasUsingGET(page page: Int?, limit: Int?, idStatusOportunidade: Int?, dataCadastro: String?, dataAtualizacao: String?, numeroReceitaFederal: String?, dataInicioVigencia: String?, datatFimVigencia: String?, flagAtivo: Bool?, revDate: String?, revType: String?, revUser: String?, completion: ((data: PageOprtunidadeAUD?, error: ErrorType?) -> Void)) {
        listarAuditoriasUsingGETWithRequestBuilder(page: page, limit: limit, idStatusOportunidade: idStatusOportunidade, dataCadastro: dataCadastro, dataAtualizacao: dataAtualizacao, numeroReceitaFederal: numeroReceitaFederal, dataInicioVigencia: dataInicioVigencia, datatFimVigencia: datatFimVigencia, flagAtivo: flagAtivo, revDate: revDate, revType: revType, revUser: revUser).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista as auditorias das oportunidades
     
     - GET /api/auditorias-oportunidades
     - Este recurso permite listar as auditorias das oportunidades.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "dataAtualizacao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "idStatusOportunidade" : 123456789,
    "numeroReceitaFederal" : "aeiou",
    "id" : 123456789,
    "revType" : 123456789,
    "dataFimVigencia" : "aeiou",
    "dataCadastro" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "dataInicioVigencia" : "aeiou",
    "flagAtivo" : false,
    "detalhes" : [ {
      "conteudo" : "aeiou",
      "rev" : 123456789,
      "revOportunidade" : 123456789,
      "revUser" : "aeiou",
      "id" : 123456789,
      "revType" : 123456789,
      "idOportunidade" : 123456789,
      "nomeCampo" : "aeiou",
      "revDate" : "aeiou"
    } ],
    "revDate" : "aeiou",
    "idTipoOportunidade" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idStatusOportunidade: (query) C\u00C3\u00B3digo identificador do status oportunidade (optional)
     - parameter dataCadastro: (query) Data do cadastro da oportunidade (optional)
     - parameter dataAtualizacao: (query) Data da atualiza\u00C3\u00A7\u00C3\u00A3o da oportunidade (optional)
     - parameter numeroReceitaFederal: (query) N\u00C3\u00BAmero receita federal do cliente ao qual ser\u00C3\u00A1 ofertada a oportunidade (optional)
     - parameter dataInicioVigencia: (query) In\u00C3\u00ADcio da vig\u00C3\u00AAncia da oportunidade (optional)
     - parameter datatFimVigencia: (query) Fim da vig\u00C3\u00AAncia da oportunidade (optional)
     - parameter flagAtivo: (query) Flag de verifica\u00C3\u00A7\u00C3\u00A3o se a oportunidade est\u00C3\u00A1 ativa (optional)
     - parameter revDate: (query) Data da auditoria (optional)
     - parameter revType: (query) Tipo da auditoria (optional)
     - parameter revUser: (query) Usu\u00C3\u00A1rio da auditoria (optional)

     - returns: RequestBuilder<PageOprtunidadeAUD> 
     */
    public class func listarAuditoriasUsingGETWithRequestBuilder(page page: Int?, limit: Int?, idStatusOportunidade: Int?, dataCadastro: String?, dataAtualizacao: String?, numeroReceitaFederal: String?, dataInicioVigencia: String?, datatFimVigencia: String?, flagAtivo: Bool?, revDate: String?, revType: String?, revUser: String?) -> RequestBuilder<PageOprtunidadeAUD> {
        let path = "/api/auditorias-oportunidades"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "idStatusOportunidade": idStatusOportunidade,
            "dataCadastro": dataCadastro,
            "dataAtualizacao": dataAtualizacao,
            "numeroReceitaFederal": numeroReceitaFederal,
            "dataInicioVigencia": dataInicioVigencia,
            "datatFimVigencia": datatFimVigencia,
            "flagAtivo": flagAtivo,
            "revDate": revDate,
            "revType": revType,
            "revUser": revUser
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageOprtunidadeAUD>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista as auditorias dos tipos oportunidades
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter revType: (query) C\u00C3\u00B3digo que representa o tipo de a\u00C3\u00A7\u00C3\u00A3o realizada no recurso de tipos oportunidades (optional)
     - parameter revDate: (query) Data da a\u00C3\u00A7\u00C3\u00A3o realizada no recurso de tipos oportunidades (optional)
     - parameter id: (query) C\u00C3\u00B3digo identificador do tipo oportunidade no qual foi realizado a a\u00C3\u00A7\u00C3\u00A3o (optional)
     - parameter descricao: (query) Descri\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade no qual foi realizado a a\u00C3\u00A7\u00C3\u00A3o (optional)
     - parameter flagAtivo: (query) Atributo que representa se o tipo oportunidade est\u00C3\u00A1 ativo (optional)
     - parameter revUser: (query) Usu\u00C3\u00A1rio da auditoria (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarAuditoriasUsingGET1(page page: Int?, limit: Int?, revType: Int?, revDate: String?, id: Int?, descricao: String?, flagAtivo: Bool?, revUser: String?, completion: ((data: PageTipoOprtunidadesAUD?, error: ErrorType?) -> Void)) {
        listarAuditoriasUsingGET1WithRequestBuilder(page: page, limit: limit, revType: revType, revDate: revDate, id: id, descricao: descricao, flagAtivo: flagAtivo, revUser: revUser).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista as auditorias dos tipos oportunidades
     
     - GET /api/auditorias-tipos-oportunidades
     - Este recurso permite listar os tipos oportunidades.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "rev" : 123456789,
    "revType" : 123456789,
    "id" : 123456789,
    "revDate" : "aeiou",
    "flagAtivo" : false,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter revType: (query) C\u00C3\u00B3digo que representa o tipo de a\u00C3\u00A7\u00C3\u00A3o realizada no recurso de tipos oportunidades (optional)
     - parameter revDate: (query) Data da a\u00C3\u00A7\u00C3\u00A3o realizada no recurso de tipos oportunidades (optional)
     - parameter id: (query) C\u00C3\u00B3digo identificador do tipo oportunidade no qual foi realizado a a\u00C3\u00A7\u00C3\u00A3o (optional)
     - parameter descricao: (query) Descri\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade no qual foi realizado a a\u00C3\u00A7\u00C3\u00A3o (optional)
     - parameter flagAtivo: (query) Atributo que representa se o tipo oportunidade est\u00C3\u00A1 ativo (optional)
     - parameter revUser: (query) Usu\u00C3\u00A1rio da auditoria (optional)

     - returns: RequestBuilder<PageTipoOprtunidadesAUD> 
     */
    public class func listarAuditoriasUsingGET1WithRequestBuilder(page page: Int?, limit: Int?, revType: Int?, revDate: String?, id: Int?, descricao: String?, flagAtivo: Bool?, revUser: String?) -> RequestBuilder<PageTipoOprtunidadesAUD> {
        let path = "/api/auditorias-tipos-oportunidades"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "revType": revType,
            "revDate": revDate,
            "id": id,
            "descricao": descricao,
            "flagAtivo": flagAtivo,
            "revUser": revUser
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoOprtunidadesAUD>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista os status do tipo oportunidades
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter nome: (query) Nome do status oportunidade (optional)
     - parameter descricao: (query) Descri\u00C3\u00A7\u00C3\u00A3o do status oportunidade (optional)
     - parameter flagAtivo: (query) Flag de verifica\u00C3\u00A7\u00C3\u00A3o se o status oportunidade est\u00C3\u00A1 ativo (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarStatusUsingGET(id id: Int, page: Int?, limit: Int?, nome: String?, descricao: String?, flagAtivo: Bool?, completion: ((data: PageStatusOprtunidades?, error: ErrorType?) -> Void)) {
        listarStatusUsingGETWithRequestBuilder(id: id, page: page, limit: limit, nome: nome, descricao: descricao, flagAtivo: flagAtivo).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista os status do tipo oportunidades
     
     - GET /api/tipos-oportunidades/{id}/status
     - Este recurso permite listar os status do tipo oportunidades.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nome" : "aeiou",
    "id" : 123456789,
    "flagAtivo" : false,
    "idTipoOportunidade" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter nome: (query) Nome do status oportunidade (optional)
     - parameter descricao: (query) Descri\u00C3\u00A7\u00C3\u00A3o do status oportunidade (optional)
     - parameter flagAtivo: (query) Flag de verifica\u00C3\u00A7\u00C3\u00A3o se o status oportunidade est\u00C3\u00A1 ativo (optional)

     - returns: RequestBuilder<PageStatusOprtunidades> 
     */
    public class func listarStatusUsingGETWithRequestBuilder(id id: Int, page: Int?, limit: Int?, nome: String?, descricao: String?, flagAtivo: Bool?) -> RequestBuilder<PageStatusOprtunidades> {
        var path = "/api/tipos-oportunidades/{id}/status"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "nome": nome,
            "descricao": descricao,
            "flagAtivo": flagAtivo
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageStatusOprtunidades>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista as oportunidades
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idStatusOportunidade: (query) C\u00C3\u00B3digo identificador do status oportunidade (optional)
     - parameter dataCadastro: (query) Data do cadastro da oportunidade (optional)
     - parameter dataAtualizacao: (query) Data da atualiza\u00C3\u00A7\u00C3\u00A3o da oportunidade (optional)
     - parameter numeroReceitaFederal: (query) N\u00C3\u00BAmero receita federal do cliente ao qual ser\u00C3\u00A1 ofertada a oportunidade (optional)
     - parameter dataInicioVigencia: (query) Data de in\u00C3\u00ADcio da vig\u00C3\u00AAncia da oportunidade (optional)
     - parameter dataFimVigencia: (query) Data do fim da vig\u00C3\u00AAncia da oportunidade (optional)
     - parameter flagAtivo: (query) Flag de verifica\u00C3\u00A7\u00C3\u00A3o se a oportunidade est\u00C3\u00A1 ativa (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET12(page page: Int?, limit: Int?, idStatusOportunidade: Int?, dataCadastro: String?, dataAtualizacao: String?, numeroReceitaFederal: String?, dataInicioVigencia: String?, dataFimVigencia: String?, flagAtivo: Bool?, completion: ((data: PageOprtunidadesResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET12WithRequestBuilder(page: page, limit: limit, idStatusOportunidade: idStatusOportunidade, dataCadastro: dataCadastro, dataAtualizacao: dataAtualizacao, numeroReceitaFederal: numeroReceitaFederal, dataInicioVigencia: dataInicioVigencia, dataFimVigencia: dataFimVigencia, flagAtivo: flagAtivo).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista as oportunidades
     
     - GET /api/oportunidades
     - Este recurso permite listar as oportunidades.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "dataAtualizacao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "idStatusOportunidade" : 123456789,
    "numeroReceitaFederal" : "aeiou",
    "id" : 123456789,
    "dataFimVigencia" : "aeiou",
    "dataCadastro" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "dataInicioVigencia" : "aeiou",
    "flagAtivo" : false,
    "detalhes" : [ {
      "conteudo" : "aeiou",
      "id" : 123456789,
      "nomeCampo" : "aeiou"
    } ],
    "idTipoOportunidade" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idStatusOportunidade: (query) C\u00C3\u00B3digo identificador do status oportunidade (optional)
     - parameter dataCadastro: (query) Data do cadastro da oportunidade (optional)
     - parameter dataAtualizacao: (query) Data da atualiza\u00C3\u00A7\u00C3\u00A3o da oportunidade (optional)
     - parameter numeroReceitaFederal: (query) N\u00C3\u00BAmero receita federal do cliente ao qual ser\u00C3\u00A1 ofertada a oportunidade (optional)
     - parameter dataInicioVigencia: (query) Data de in\u00C3\u00ADcio da vig\u00C3\u00AAncia da oportunidade (optional)
     - parameter dataFimVigencia: (query) Data do fim da vig\u00C3\u00AAncia da oportunidade (optional)
     - parameter flagAtivo: (query) Flag de verifica\u00C3\u00A7\u00C3\u00A3o se a oportunidade est\u00C3\u00A1 ativa (optional)

     - returns: RequestBuilder<PageOprtunidadesResponse> 
     */
    public class func listarUsingGET12WithRequestBuilder(page page: Int?, limit: Int?, idStatusOportunidade: Int?, dataCadastro: String?, dataAtualizacao: String?, numeroReceitaFederal: String?, dataInicioVigencia: String?, dataFimVigencia: String?, flagAtivo: Bool?) -> RequestBuilder<PageOprtunidadesResponse> {
        let path = "/api/oportunidades"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "idStatusOportunidade": idStatusOportunidade,
            "dataCadastro": dataCadastro,
            "dataAtualizacao": dataAtualizacao,
            "numeroReceitaFederal": numeroReceitaFederal,
            "dataInicioVigencia": dataInicioVigencia,
            "dataFimVigencia": dataFimVigencia,
            "flagAtivo": flagAtivo
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageOprtunidadesResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista os tipos oportunidades
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter descricao: (query) Descri\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (optional)
     - parameter flagAtivo: (query) Flag de verifica\u00C3\u00A7\u00C3\u00A3o se o tipo oportunidade est\u00C3\u00A1 ativo (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET24(page page: Int?, limit: Int?, descricao: String?, flagAtivo: Bool?, completion: ((data: PageTipoOprtunidades?, error: ErrorType?) -> Void)) {
        listarUsingGET24WithRequestBuilder(page: page, limit: limit, descricao: descricao, flagAtivo: flagAtivo).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista os tipos oportunidades
     
     - GET /api/tipos-oportunidades
     - Este recurso permite listar os tipos oportunidades.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "id" : 123456789,
    "flagAtivo" : false,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter descricao: (query) Descri\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (optional)
     - parameter flagAtivo: (query) Flag de verifica\u00C3\u00A7\u00C3\u00A3o se o tipo oportunidade est\u00C3\u00A1 ativo (optional)

     - returns: RequestBuilder<PageTipoOprtunidades> 
     */
    public class func listarUsingGET24WithRequestBuilder(page page: Int?, limit: Int?, descricao: String?, flagAtivo: Bool?) -> RequestBuilder<PageTipoOprtunidades> {
        let path = "/api/tipos-oportunidades"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "descricao": descricao,
            "flagAtivo": flagAtivo
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoOprtunidades>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Cadastra status para o tipo oportunidade
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarStatusUsingPOST(id id: Int, persist: StatusOportunidade, completion: ((data: StatusOportunidadeResponse?, error: ErrorType?) -> Void)) {
        salvarStatusUsingPOSTWithRequestBuilder(id: id, persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Cadastra status para o tipo oportunidade
     
     - POST /api/tipos-oportunidades/{id}/status
     - Esse recurso permite cadastrar status para o tipo oportunidade.
     - examples: [{contentType=application/json, example={
  "nome" : "aeiou",
  "id" : 123456789,
  "flagAtivo" : false,
  "idTipoOportunidade" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo oportunidade (id). 
     - parameter persist: (body) persist 

     - returns: RequestBuilder<StatusOportunidadeResponse> 
     */
    public class func salvarStatusUsingPOSTWithRequestBuilder(id id: Int, persist: StatusOportunidade) -> RequestBuilder<StatusOportunidadeResponse> {
        var path = "/api/tipos-oportunidades/{id}/status"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<StatusOportunidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Cadastra tipos oportunidades
     
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST11(persist persist: TipoOportunidade, completion: ((data: TipoOportunidadeResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST11WithRequestBuilder(persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Cadastra tipos oportunidades
     
     - POST /api/tipos-oportunidades
     - Esse recurso permite cadastrar tipos oportunidades.
     - examples: [{contentType=application/json, example={
  "id" : 123456789,
  "flagAtivo" : false,
  "descricao" : "aeiou"
}}]
     
     - parameter persist: (body) persist 

     - returns: RequestBuilder<TipoOportunidadeResponse> 
     */
    public class func salvarUsingPOST11WithRequestBuilder(persist persist: TipoOportunidade) -> RequestBuilder<TipoOportunidadeResponse> {
        let path = "/api/tipos-oportunidades"
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TipoOportunidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Cadastra as oportunidade
     
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST6(persist persist: OportunidadePersist, completion: ((data: OportunidadeResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST6WithRequestBuilder(persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Cadastra as oportunidade
     
     - POST /api/oportunidades
     - Esse recurso permite cadastrar oportunidades.
     - examples: [{contentType=application/json, example={
  "dataAtualizacao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatusOportunidade" : 123456789,
  "numeroReceitaFederal" : "aeiou",
  "id" : 123456789,
  "dataFimVigencia" : "aeiou",
  "dataCadastro" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataInicioVigencia" : "aeiou",
  "flagAtivo" : false,
  "detalhes" : [ {
    "conteudo" : "aeiou",
    "id" : 123456789,
    "nomeCampo" : "aeiou"
  } ],
  "idTipoOportunidade" : 123456789
}}]
     
     - parameter persist: (body) persist 

     - returns: RequestBuilder<OportunidadeResponse> 
     */
    public class func salvarUsingPOST6WithRequestBuilder(persist persist: OportunidadePersist) -> RequestBuilder<OportunidadeResponse> {
        let path = "/api/oportunidades"
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<OportunidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
