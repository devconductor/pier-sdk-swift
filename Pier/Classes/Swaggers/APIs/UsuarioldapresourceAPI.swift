//
// UsuarioldapresourceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class UsuarioldapresourceAPI: APIBase {
    /**
     
     alterar
     
     - parameter id: (path) id 
     - parameter update: (body) update 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT22(id id: Int, update: UsuarioLdapUpdate, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        alterarUsingPUT22WithRequestBuilder(id: id, update: update).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     alterar
     
     - PUT /api/usuarios-ldap/{id}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) id 
     - parameter update: (body) update 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func alterarUsingPUT22WithRequestBuilder(id id: Int, update: UsuarioLdapUpdate) -> RequestBuilder<AnyObject> {
        var path = "/api/usuarios-ldap/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = update.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     ativarUsuario
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func ativarUsuarioUsingPOST(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        ativarUsuarioUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     ativarUsuario
     
     - POST /api/usuarios-ldap/{id}/ativar-usuario
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func ativarUsuarioUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/usuarios-ldap/{id}/ativar-usuario"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     consultar
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET52(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        consultarUsingGET52WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     consultar
     
     - GET /api/usuarios-ldap/{id}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func consultarUsingGET52WithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/usuarios-ldap/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     desativarUsuario
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desativarUsuarioUsingPOST(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        desativarUsuarioUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     desativarUsuario
     
     - POST /api/usuarios-ldap/{id}/desativar-usuario
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func desativarUsuarioUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/usuarios-ldap/{id}/desativar-usuario"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     listar
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter nome: (query)  (optional)
     - parameter cpf: (query)  (optional)
     - parameter email: (query)  (optional)
     - parameter status: (query)  (optional)
     - parameter idEmissor: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET64(sort sort: [String]?, page: Int?, limit: Int?, nome: String?, cpf: String?, email: String?, status: String?, idEmissor: Int?, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        listarUsingGET64WithRequestBuilder(sort: sort, page: page, limit: limit, nome: nome, cpf: cpf, email: email, status: status, idEmissor: idEmissor).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     listar
     
     - GET /api/usuarios-ldap
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter nome: (query)  (optional)
     - parameter cpf: (query)  (optional)
     - parameter email: (query)  (optional)
     - parameter status: (query)  (optional)
     - parameter idEmissor: (query)  (optional)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func listarUsingGET64WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, nome: String?, cpf: String?, email: String?, status: String?, idEmissor: Int?) -> RequestBuilder<AnyObject> {
        let path = "/api/usuarios-ldap"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "nome": nome,
            "cpf": cpf,
            "email": email,
            "status": status,
            "idEmissor": idEmissor
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     perfis
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func perfisUsingGET(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        perfisUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     perfis
     
     - GET /api/usuarios-ldap/{id}/perfis
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func perfisUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/usuarios-ldap/{id}/perfis"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     salvar
     
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST33(persist persist: UsuarioLdapPersist, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        salvarUsingPOST33WithRequestBuilder(persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     salvar
     
     - POST /api/usuarios-ldap
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter persist: (body) persist 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func salvarUsingPOST33WithRequestBuilder(persist persist: UsuarioLdapPersist) -> RequestBuilder<AnyObject> {
        let path = "/api/usuarios-ldap"
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
