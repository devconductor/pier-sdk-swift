//
// FraudesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class FraudesAPI: APIBase {
    /**
     
     Apresenta os dados de um determinado Atendimento
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do atendimento cliente (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET(id id: Int, completion: ((data: AtendimentoCliente?, error: ErrorType?) -> Void)) {
        consultarUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Apresenta os dados de um determinado Atendimento
     
     - GET /api/atendimento-clientes/{id}
     - Este m\u00C3\u00A9todo permite consultar os par\u00C3\u00A2metros de um determinado Atendimento a partir do seu c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o (idAtendimento).
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "conteudoAtendimento" : "aeiou",
  "idConta" : 123456789,
  "descricaoTipoAtendimento" : "aeiou",
  "dataProcessamento" : "2000-01-23T04:56:07.000+0000",
  "dataAgendamento" : "2000-01-23T04:56:07.000+0000",
  "flagProcessamento" : 123,
  "dataHoraFimAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "detalhesAtendimento" : "aeiou",
  "idAtendimento" : 123456789,
  "dataAtendimento" : "2000-01-23T04:56:07.000+0000",
  "dataHoraInicioAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "nomeAtendente" : "aeiou",
  "nomeSistema" : "aeiou",
  "idTipoAtendimento" : 123456789
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do atendimento cliente (id). 

     - returns: RequestBuilder<AtendimentoCliente> 
     */
    public class func consultarUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<AtendimentoCliente> {
        var path = "/api/atendimento-clientes/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AtendimentoCliente>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Lista todos os atendimentos
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 100, Max = 100) (optional)
     - parameter idAtendimento: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Atendimento (id) (optional)
     - parameter idTipoAtendimento: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Tipo de Atendimento (id) (optional)
     - parameter idConta: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o de conta (id). (optional)
     - parameter nomeAtendente: (query) Apresenta o nome do Atendente que registrou o Atendimento. (optional)
     - parameter dataAtendimento: (query) Apresenta a data em que o Atendimento foi realizado. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET(page page: Int?, limit: Int?, idAtendimento: Int?, idTipoAtendimento: Int?, idConta: Int?, nomeAtendente: String?, dataAtendimento: NSDate?, completion: ((data: AtendimentoCliente?, error: ErrorType?) -> Void)) {
        listarUsingGETWithRequestBuilder(page: page, limit: limit, idAtendimento: idAtendimento, idTipoAtendimento: idTipoAtendimento, idConta: idConta, nomeAtendente: nomeAtendente, dataAtendimento: dataAtendimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista todos os atendimentos
     
     - GET /api/atendimento-clientes
     - Este m\u00C3\u00A9todo permite que sejam listados todos os Registro de Atendimento, independente do Tipo.
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "conteudoAtendimento" : "aeiou",
  "idConta" : 123456789,
  "descricaoTipoAtendimento" : "aeiou",
  "dataProcessamento" : "2000-01-23T04:56:07.000+0000",
  "dataAgendamento" : "2000-01-23T04:56:07.000+0000",
  "flagProcessamento" : 123,
  "dataHoraFimAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "detalhesAtendimento" : "aeiou",
  "idAtendimento" : 123456789,
  "dataAtendimento" : "2000-01-23T04:56:07.000+0000",
  "dataHoraInicioAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "nomeAtendente" : "aeiou",
  "nomeSistema" : "aeiou",
  "idTipoAtendimento" : 123456789
}}]
     
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 100, Max = 100) (optional)
     - parameter idAtendimento: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Atendimento (id) (optional)
     - parameter idTipoAtendimento: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Tipo de Atendimento (id) (optional)
     - parameter idConta: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o de conta (id). (optional)
     - parameter nomeAtendente: (query) Apresenta o nome do Atendente que registrou o Atendimento. (optional)
     - parameter dataAtendimento: (query) Apresenta a data em que o Atendimento foi realizado. (optional)

     - returns: RequestBuilder<AtendimentoCliente> 
     */
    public class func listarUsingGETWithRequestBuilder(page page: Int?, limit: Int?, idAtendimento: Int?, idTipoAtendimento: Int?, idConta: Int?, nomeAtendente: String?, dataAtendimento: NSDate?) -> RequestBuilder<AtendimentoCliente> {
        let path = "/api/atendimento-clientes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "limit": limit,
            "idAtendimento": idAtendimento,
            "idTipoAtendimento": idTipoAtendimento,
            "idConta": idConta,
            "nomeAtendente": nomeAtendente,
            "dataAtendimento": dataAtendimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AtendimentoCliente>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Cadastro um novo Atendimento do tipo Gen\u00C3\u00A9rico para uma Conta
     
     - parameter idConta: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta a qual o Atendimento est\u00C3\u00A1 associado (optional)
     - parameter conteudoAtendimento: (query) Apresenta as informa\u00C3\u00A7\u00C3\u00B5es que foram utilizadas para consultar, cadastrar ou alterar informa\u00C3\u00A7\u00C3\u00B5es relacionadas ao Atendimento. (optional)
     - parameter detalhesAtendimento: (query) Apresenta os detalhes lan\u00C3\u00A7ados pelo sistema ou pelo Atendente durante relacionados ao Atendimento. (optional)
     - parameter nomeAtendente: (query) Apresenta o nome do Atendente que registrou o Atendimento. (optional)
     - parameter dataAtendimento: (query) Apresenta a data em que o Atendimento foi realizado. (optional)
     - parameter dataAgendamento: (query) Quando utilizado, de acordo com o Tipo de Atendimento, apresenta a data para processamento ou a data para retorno do Atendimento. (optional)
     - parameter dataHoraInicioAtendimento: (query) Apresenta a data e hora em que o Atendimento foi iniciado. Quando utilizado, serve para medir a performance dos Atendimentos. (optional)
     - parameter dataHoraFimAtendimento: (query) Apresenta a data e hora em que o Atendimento foi iniciado. Quando utilizado, serve para medir a performance dos Atendimentos. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST(idConta idConta: Int?, conteudoAtendimento: String?, detalhesAtendimento: String?, nomeAtendente: String?, dataAtendimento: NSDate?, dataAgendamento: NSDate?, dataHoraInicioAtendimento: NSDate?, dataHoraFimAtendimento: NSDate?, completion: ((data: AtendimentoCliente?, error: ErrorType?) -> Void)) {
        salvarUsingPOSTWithRequestBuilder(idConta: idConta, conteudoAtendimento: conteudoAtendimento, detalhesAtendimento: detalhesAtendimento, nomeAtendente: nomeAtendente, dataAtendimento: dataAtendimento, dataAgendamento: dataAgendamento, dataHoraInicioAtendimento: dataHoraInicioAtendimento, dataHoraFimAtendimento: dataHoraFimAtendimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Cadastro um novo Atendimento do tipo Gen\u00C3\u00A9rico para uma Conta
     
     - POST /api/atendimento-clientes
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "conteudoAtendimento" : "aeiou",
  "idConta" : 123456789,
  "descricaoTipoAtendimento" : "aeiou",
  "dataProcessamento" : "2000-01-23T04:56:07.000+0000",
  "dataAgendamento" : "2000-01-23T04:56:07.000+0000",
  "flagProcessamento" : 123,
  "dataHoraFimAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "detalhesAtendimento" : "aeiou",
  "idAtendimento" : 123456789,
  "dataAtendimento" : "2000-01-23T04:56:07.000+0000",
  "dataHoraInicioAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "nomeAtendente" : "aeiou",
  "nomeSistema" : "aeiou",
  "idTipoAtendimento" : 123456789
}}]
     
     - parameter idConta: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta a qual o Atendimento est\u00C3\u00A1 associado (optional)
     - parameter conteudoAtendimento: (query) Apresenta as informa\u00C3\u00A7\u00C3\u00B5es que foram utilizadas para consultar, cadastrar ou alterar informa\u00C3\u00A7\u00C3\u00B5es relacionadas ao Atendimento. (optional)
     - parameter detalhesAtendimento: (query) Apresenta os detalhes lan\u00C3\u00A7ados pelo sistema ou pelo Atendente durante relacionados ao Atendimento. (optional)
     - parameter nomeAtendente: (query) Apresenta o nome do Atendente que registrou o Atendimento. (optional)
     - parameter dataAtendimento: (query) Apresenta a data em que o Atendimento foi realizado. (optional)
     - parameter dataAgendamento: (query) Quando utilizado, de acordo com o Tipo de Atendimento, apresenta a data para processamento ou a data para retorno do Atendimento. (optional)
     - parameter dataHoraInicioAtendimento: (query) Apresenta a data e hora em que o Atendimento foi iniciado. Quando utilizado, serve para medir a performance dos Atendimentos. (optional)
     - parameter dataHoraFimAtendimento: (query) Apresenta a data e hora em que o Atendimento foi iniciado. Quando utilizado, serve para medir a performance dos Atendimentos. (optional)

     - returns: RequestBuilder<AtendimentoCliente> 
     */
    public class func salvarUsingPOSTWithRequestBuilder(idConta idConta: Int?, conteudoAtendimento: String?, detalhesAtendimento: String?, nomeAtendente: String?, dataAtendimento: NSDate?, dataAgendamento: NSDate?, dataHoraInicioAtendimento: NSDate?, dataHoraFimAtendimento: NSDate?) -> RequestBuilder<AtendimentoCliente> {
        let path = "/api/atendimento-clientes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idConta": idConta,
            "conteudoAtendimento": conteudoAtendimento,
            "detalhesAtendimento": detalhesAtendimento,
            "nomeAtendente": nomeAtendente,
            "dataAtendimento": dataAtendimento,
            "dataAgendamento": dataAgendamento,
            "dataHoraInicioAtendimento": dataHoraInicioAtendimento,
            "dataHoraFimAtendimento": dataHoraFimAtendimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AtendimentoCliente>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

}
