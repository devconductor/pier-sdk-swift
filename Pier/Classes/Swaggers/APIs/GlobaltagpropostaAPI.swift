//
// GlobaltagpropostaAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltagpropostaAPI: APIBase {
    /**
     
     {{{proposta_resource_alterar_status}}}
     
     - parameter id: (path) {{{proposta_resource_alterar_status_param_id}}} 
     - parameter update: (body) update 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPOST(id id: Int, update: StatusPropostaUpdate, completion: ((data: PropostaResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPOSTWithRequestBuilder(id: id, update: update).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{proposta_resource_alterar_status}}}
     
     - POST /api/propostas/{id}/alterar-status
     - {{{proposta_resource_alterar_status_notes}}}
     - examples: [{contentType=application/json, example={
  "dataCadastramento" : "aeiou",
  "id" : 123456789,
  "status" : 123
}}]
     
     - parameter id: (path) {{{proposta_resource_alterar_status_param_id}}} 
     - parameter update: (body) update 

     - returns: RequestBuilder<PropostaResponse> 
     */
    public class func alterarUsingPOSTWithRequestBuilder(id id: Int, update: StatusPropostaUpdate) -> RequestBuilder<PropostaResponse> {
        var path = "/api/propostas/{id}/alterar-status"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = update.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<PropostaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{proposta_resource_consultar}}}
     
     - parameter id: (path) {{{proposta_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET32(id id: Int, completion: ((data: PropostaResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET32WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{proposta_resource_consultar}}}
     
     - GET /api/propostas/{id}
     - {{{proposta_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "dataCadastramento" : "aeiou",
  "id" : 123456789,
  "status" : 123
}}]
     
     - parameter id: (path) {{{proposta_resource_consultar_param_id}}} 

     - returns: RequestBuilder<PropostaResponse> 
     */
    public class func consultarUsingGET32WithRequestBuilder(id id: Int) -> RequestBuilder<PropostaResponse> {
        var path = "/api/propostas/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PropostaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{proposta_resource_listar_status}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter status: (query) {{{status_proposta_request_status_value}}} (optional)
     - parameter flagPermiteAlteracao: (query) {{{status_proposta_request_flag_permite_alteracao_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarStatusPropostaUsingGET(sort sort: [String]?, page: Int?, limit: Int?, status: Int?, flagPermiteAlteracao: Bool?, completion: ((data: PageStatusPropostaResponse?, error: ErrorType?) -> Void)) {
        listarStatusPropostaUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, status: status, flagPermiteAlteracao: flagPermiteAlteracao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{proposta_resource_listar_status}}}
     
     - GET /api/status-propostas
     - {{{proposta_resource_listar_status_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "id" : 123456789,
    "flagPermiteAlteracao" : false,
    "status" : 123,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter status: (query) {{{status_proposta_request_status_value}}} (optional)
     - parameter flagPermiteAlteracao: (query) {{{status_proposta_request_flag_permite_alteracao_value}}} (optional)

     - returns: RequestBuilder<PageStatusPropostaResponse> 
     */
    public class func listarStatusPropostaUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, status: Int?, flagPermiteAlteracao: Bool?) -> RequestBuilder<PageStatusPropostaResponse> {
        let path = "/api/status-propostas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "status": status,
            "flagPermiteAlteracao": flagPermiteAlteracao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageStatusPropostaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{proposta_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter status: (query) {{{proposta_request_status_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET44(sort sort: [String]?, page: Int?, limit: Int?, status: Int?, completion: ((data: PagePropostaResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET44WithRequestBuilder(sort: sort, page: page, limit: limit, status: status).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{proposta_resource_listar}}}
     
     - GET /api/propostas
     - {{{proposta_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "dataCadastramento" : "aeiou",
    "id" : 123456789,
    "status" : 123
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter status: (query) {{{proposta_request_status_value}}} (optional)

     - returns: RequestBuilder<PagePropostaResponse> 
     */
    public class func listarUsingGET44WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, status: Int?) -> RequestBuilder<PagePropostaResponse> {
        let path = "/api/propostas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "status": status
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PagePropostaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
