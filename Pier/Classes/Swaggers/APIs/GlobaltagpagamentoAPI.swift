//
// GlobaltagpagamentoAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltagpagamentoAPI: APIBase {
    /**
     
     {{{acordo_resource_consultar}}}
     
     - parameter id: (path) {{{acordo_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET(id id: Int, completion: ((data: AcordoDetalheResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{acordo_resource_consultar}}}
     
     - GET /api/acordos/{id}
     - {{{acordo_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "idConta" : 123456789,
  "diasEmAtraso" : 123,
  "saldoAtualFinal" : 1.3579000000000001069366817318950779736042022705078125,
  "statusConta" : 123456789,
  "totalPagamentos" : 1.3579000000000001069366817318950779736042022705078125,
  "valorAcordo" : 1.3579000000000001069366817318950779736042022705078125,
  "assessoriaAtual" : "aeiou",
  "quantidadeParcelas" : 123,
  "statusAcordo" : 123456789,
  "dataAcordo" : "aeiou",
  "vencimentoParcelaPedida" : "aeiou",
  "parcelaPedida" : 123,
  "dataQuebraAcordo" : "aeiou",
  "dataVencimentoCobranca" : "aeiou",
  "valorParcela1" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 123456789,
  "valorParcelaN" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) {{{acordo_resource_consultar_param_id}}} 

     - returns: RequestBuilder<AcordoDetalheResponse> 
     */
    public class func consultarUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<AcordoDetalheResponse> {
        var path = "/api/acordos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AcordoDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{pagamento_resource_listar_pagamentos}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idConta: (query) {{{historico_pagamento_request_id_conta_value}}} (optional)
     - parameter idPagamento: (query) {{{historico_pagamento_request_id_pagamento_value}}} (optional)
     - parameter idEstabelecimento: (query) {{{historico_pagamento_request_id_estabelecimento_value}}} (optional)
     - parameter idBanco: (query) {{{historico_pagamento_request_id_banco_value}}} (optional)
     - parameter idCartao: (query) {{{historico_pagamento_request_id_cartao_value}}} (optional)
     - parameter dataHoraPagamento: (query) {{{historico_pagamento_request_data_hora_pagamento_value}}} (optional)
     - parameter status: (query) {{{historico_pagamento_request_status_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarPagamentosUsingGET1(sort sort: [String]?, page: Int?, limit: Int?, idConta: Int?, idPagamento: Int?, idEstabelecimento: Int?, idBanco: Int?, idCartao: Int?, dataHoraPagamento: String?, status: Int?, completion: ((data: PageHistoricoPagamentoResponse?, error: ErrorType?) -> Void)) {
        listarPagamentosUsingGET1WithRequestBuilder(sort: sort, page: page, limit: limit, idConta: idConta, idPagamento: idPagamento, idEstabelecimento: idEstabelecimento, idBanco: idBanco, idCartao: idCartao, dataHoraPagamento: dataHoraPagamento, status: status).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{pagamento_resource_listar_pagamentos}}}
     
     - GET /api/pagamentos
     - {{{pagamento_resource_listar_pagamentos_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idPagamento" : 123456789,
    "idEstabelecimento" : 123456789,
    "idBanco" : 123456789,
    "idCartao" : 123456789,
    "idConta" : 123456789,
    "dataHoraPagamento" : "aeiou",
    "dataHoraEntradaPagamento" : "aeiou",
    "valorPagamento" : 1.3579000000000001069366817318950779736042022705078125,
    "status" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idConta: (query) {{{historico_pagamento_request_id_conta_value}}} (optional)
     - parameter idPagamento: (query) {{{historico_pagamento_request_id_pagamento_value}}} (optional)
     - parameter idEstabelecimento: (query) {{{historico_pagamento_request_id_estabelecimento_value}}} (optional)
     - parameter idBanco: (query) {{{historico_pagamento_request_id_banco_value}}} (optional)
     - parameter idCartao: (query) {{{historico_pagamento_request_id_cartao_value}}} (optional)
     - parameter dataHoraPagamento: (query) {{{historico_pagamento_request_data_hora_pagamento_value}}} (optional)
     - parameter status: (query) {{{historico_pagamento_request_status_value}}} (optional)

     - returns: RequestBuilder<PageHistoricoPagamentoResponse> 
     */
    public class func listarPagamentosUsingGET1WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idConta: Int?, idPagamento: Int?, idEstabelecimento: Int?, idBanco: Int?, idCartao: Int?, dataHoraPagamento: String?, status: Int?) -> RequestBuilder<PageHistoricoPagamentoResponse> {
        let path = "/api/pagamentos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idConta": idConta,
            "idPagamento": idPagamento,
            "idEstabelecimento": idEstabelecimento,
            "idBanco": idBanco,
            "idCartao": idCartao,
            "dataHoraPagamento": dataHoraPagamento,
            "status": status
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageHistoricoPagamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{acordo_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idConta: (query) {{{acordo_request_id_conta_value}}} (optional)
     - parameter statusAcordo: (query) {{{acordo_request_status_acordo_value}}} (optional)
     - parameter dataAcordo: (query) {{{acordo_request_data_acordo_value}}} (optional)
     - parameter quantidadeParcelas: (query) {{{acordo_request_quantidade_parcelas_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET(sort sort: [String]?, page: Int?, limit: Int?, idConta: Int?, statusAcordo: Int?, dataAcordo: String?, quantidadeParcelas: Int?, completion: ((data: PageAcordoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, idConta: idConta, statusAcordo: statusAcordo, dataAcordo: dataAcordo, quantidadeParcelas: quantidadeParcelas).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{acordo_resource_listar}}}
     
     - GET /api/acordos
     - {{{acordo_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idConta" : 123456789,
    "diasEmAtraso" : 123,
    "saldoAtualFinal" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123456789,
    "valorAcordo" : 1.3579000000000001069366817318950779736042022705078125,
    "quantidadeParcelas" : 123,
    "statusAcordo" : 123456789,
    "dataAcordo" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idConta: (query) {{{acordo_request_id_conta_value}}} (optional)
     - parameter statusAcordo: (query) {{{acordo_request_status_acordo_value}}} (optional)
     - parameter dataAcordo: (query) {{{acordo_request_data_acordo_value}}} (optional)
     - parameter quantidadeParcelas: (query) {{{acordo_request_quantidade_parcelas_value}}} (optional)

     - returns: RequestBuilder<PageAcordoResponse> 
     */
    public class func listarUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idConta: Int?, statusAcordo: Int?, dataAcordo: String?, quantidadeParcelas: Int?) -> RequestBuilder<PageAcordoResponse> {
        let path = "/api/acordos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idConta": idConta,
            "statusAcordo": statusAcordo,
            "dataAcordo": dataAcordo,
            "quantidadeParcelas": quantidadeParcelas
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageAcordoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
