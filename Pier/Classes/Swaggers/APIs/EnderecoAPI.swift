//
// EnderecoAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class EnderecoAPI: APIBase {
    /**
     
     Atualiza os dados de um determinado Endere\u00C3\u00A7o
     
     - parameter id: (query) id 
     - parameter idPessoa: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa a qual o endere\u00C3\u00A7o pertence (id) (optional)
     - parameter idTipoEndereco: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Tipo Endere\u00C3\u00A7o (id) (optional)
     - parameter cep: (query) Apresenta o C\u00C3\u00B3digo de Endere\u00C3\u00A7amento Postal (CEP) no formaro &#39;58800000&#39; (optional)
     - parameter logradouro: (query) Apresenta o nome do Logradouro (optional)
     - parameter numero: (query) Apresenta o n\u00C3\u00BAmero do endere\u00C3\u00A7o (optional)
     - parameter complemento: (query) Apresenta descri\u00C3\u00A7oes complementares referente ao endere\u00C3\u00A7o (optional)
     - parameter pontoReferencia: (query) Apresenta a descri\u00C3\u00A7\u00C3\u00A3o de ponto de refer\u00C3\u00AAncia do endere\u00C3\u00A7o (optional)
     - parameter bairro: (query) Apresenta nome do bairro (optional)
     - parameter cidade: (query) Apresenta nome da cidade (optional)
     - parameter uf: (query) Apresenta sigla da Unidade Federativa (optional)
     - parameter pais: (query) Apresenta nome do Pais (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT(id id: Int, idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?, completion: ((data: Endereco?, error: ErrorType?) -> Void)) {
        alterarUsingPUTWithRequestBuilder(id: id, idPessoa: idPessoa, idTipoEndereco: idTipoEndereco, cep: cep, logradouro: logradouro, numero: numero, complemento: complemento, pontoReferencia: pontoReferencia, bairro: bairro, cidade: cidade, uf: uf, pais: pais).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Atualiza os dados de um determinado Endere\u00C3\u00A7o
     
     - PUT /api/enderecos
     - Este m\u00C3\u00A9todo permite que seja alterado na base do emissor um ou mais registros ligados a um determinado Endere\u00C3\u00A7o.
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "pontoReferencia" : "aeiou",
  "cidade" : "aeiou",
  "numero" : 123,
  "bairro" : "aeiou",
  "idTipoEndereco" : 123456789,
  "cep" : "aeiou",
  "pais" : "aeiou",
  "idPessoa" : 123456789,
  "uf" : "aeiou",
  "complemento" : "aeiou",
  "logradouro" : "aeiou",
  "dataInclusao" : "2000-01-23T04:56:07.000+0000",
  "dataUltimaAtualizacao" : "2000-01-23T04:56:07.000+0000",
  "id" : 123456789
}}]
     
     - parameter id: (query) id 
     - parameter idPessoa: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa a qual o endere\u00C3\u00A7o pertence (id) (optional)
     - parameter idTipoEndereco: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Tipo Endere\u00C3\u00A7o (id) (optional)
     - parameter cep: (query) Apresenta o C\u00C3\u00B3digo de Endere\u00C3\u00A7amento Postal (CEP) no formaro &#39;58800000&#39; (optional)
     - parameter logradouro: (query) Apresenta o nome do Logradouro (optional)
     - parameter numero: (query) Apresenta o n\u00C3\u00BAmero do endere\u00C3\u00A7o (optional)
     - parameter complemento: (query) Apresenta descri\u00C3\u00A7oes complementares referente ao endere\u00C3\u00A7o (optional)
     - parameter pontoReferencia: (query) Apresenta a descri\u00C3\u00A7\u00C3\u00A3o de ponto de refer\u00C3\u00AAncia do endere\u00C3\u00A7o (optional)
     - parameter bairro: (query) Apresenta nome do bairro (optional)
     - parameter cidade: (query) Apresenta nome da cidade (optional)
     - parameter uf: (query) Apresenta sigla da Unidade Federativa (optional)
     - parameter pais: (query) Apresenta nome do Pais (optional)

     - returns: RequestBuilder<Endereco> 
     */
    public class func alterarUsingPUTWithRequestBuilder(id id: Int, idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?) -> RequestBuilder<Endereco> {
        let path = "/api/enderecos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id": id,
            "idPessoa": idPessoa,
            "idTipoEndereco": idTipoEndereco,
            "cep": cep,
            "logradouro": logradouro,
            "numero": numero,
            "complemento": complemento,
            "pontoReferencia": pontoReferencia,
            "bairro": bairro,
            "cidade": cidade,
            "uf": uf,
            "pais": pais
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<Endereco>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Apresenta os dados de um determinado Endere\u00C3\u00A7o
     
     - parameter idEndereco: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Endere\u00C3\u00A7o (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET2(idEndereco idEndereco: Int, completion: ((data: Endereco?, error: ErrorType?) -> Void)) {
        consultarUsingGET2WithRequestBuilder(idEndereco: idEndereco).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Apresenta os dados de um determinado Endere\u00C3\u00A7o
     
     - GET /api/enderecos/{idEndereco}
     - Este m\u00C3\u00A9todo permite consultar um determinado Endere\u00C3\u00A7o a partir do seu c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o (id).
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "pontoReferencia" : "aeiou",
  "cidade" : "aeiou",
  "numero" : 123,
  "bairro" : "aeiou",
  "idTipoEndereco" : 123456789,
  "cep" : "aeiou",
  "pais" : "aeiou",
  "idPessoa" : 123456789,
  "uf" : "aeiou",
  "complemento" : "aeiou",
  "logradouro" : "aeiou",
  "dataInclusao" : "2000-01-23T04:56:07.000+0000",
  "dataUltimaAtualizacao" : "2000-01-23T04:56:07.000+0000",
  "id" : 123456789
}}]
     
     - parameter idEndereco: (path) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Endere\u00C3\u00A7o (id). 

     - returns: RequestBuilder<Endereco> 
     */
    public class func consultarUsingGET2WithRequestBuilder(idEndereco idEndereco: Int) -> RequestBuilder<Endereco> {
        var path = "/api/enderecos/{idEndereco}"
        path = path.stringByReplacingOccurrencesOfString("{idEndereco}", withString: "\(idEndereco)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<Endereco>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Lista os Endere\u00C3\u00A7os cadastrados para o Emissor
     
     - parameter id: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Endere\u00C3\u00A7o (id). (optional)
     - parameter idPessoa: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa a qual o endere\u00C3\u00A7o pertence (id) (optional)
     - parameter idTipoEndereco: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Tipo Endere\u00C3\u00A7o (id) (optional)
     - parameter cep: (query) Apresenta o C\u00C3\u00B3digo de Endere\u00C3\u00A7amento Postal (CEP) (optional)
     - parameter logradouro: (query) Apresenta o nome do Logradouro (optional)
     - parameter numero: (query) Apresenta o n\u00C3\u00BAmero do endere\u00C3\u00A7o (optional)
     - parameter complemento: (query) Apresenta descri\u00C3\u00A7oes complementares referente ao endere\u00C3\u00A7o (optional)
     - parameter pontoReferencia: (query) Apresenta a descri\u00C3\u00A7\u00C3\u00A3o de ponto de refer\u00C3\u00AAncia do endere\u00C3\u00A7o (optional)
     - parameter bairro: (query) Apresenta nome do bairro (optional)
     - parameter cidade: (query) Apresenta nome da cidade (optional)
     - parameter uf: (query) Apresenta sigla da Unidade Federativa (optional)
     - parameter pais: (query) Apresenta nome do Pais (optional)
     - parameter dataInclusao: (query) Apresenta a data em que fora cadastrado o Endere\u00C3\u00A7o (optional)
     - parameter dataUltimaAtualizacao: (query) Data em que fora realizada a \u00C3\u00BAltima mudan\u00C3\u00A7a neste registro de endere\u00C3\u00A7o. Quando n\u00C3\u00A3o tiver ocorrido mudan\u00C3\u00A7a, conter\u00C3\u00A1 a mesma informa\u00C3\u00A7\u00C3\u00A3o que o campo dataInclusao (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 100, Max = 100) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET2(id id: Int?, idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?, dataInclusao: NSDate?, dataUltimaAtualizacao: NSDate?, page: Int?, limit: Int?, completion: ((data: PageEnderecos?, error: ErrorType?) -> Void)) {
        listarUsingGET2WithRequestBuilder(id: id, idPessoa: idPessoa, idTipoEndereco: idTipoEndereco, cep: cep, logradouro: logradouro, numero: numero, complemento: complemento, pontoReferencia: pontoReferencia, bairro: bairro, cidade: cidade, uf: uf, pais: pais, dataInclusao: dataInclusao, dataUltimaAtualizacao: dataUltimaAtualizacao, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista os Endere\u00C3\u00A7os cadastrados para o Emissor
     
     - GET /api/enderecos
     - Este m\u00C3\u00A9todo permite que sejam listados os Endere\u00C3\u00A7os existentes na base de dados do Emissor.
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "pontoReferencia" : "aeiou",
    "cidade" : "aeiou",
    "numero" : 123,
    "bairro" : "aeiou",
    "idTipoEndereco" : 123456789,
    "cep" : "aeiou",
    "pais" : "aeiou",
    "idPessoa" : 123456789,
    "uf" : "aeiou",
    "complemento" : "aeiou",
    "logradouro" : "aeiou",
    "dataInclusao" : "2000-01-23T04:56:07.000+0000",
    "dataUltimaAtualizacao" : "2000-01-23T04:56:07.000+0000",
    "id" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Endere\u00C3\u00A7o (id). (optional)
     - parameter idPessoa: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa a qual o endere\u00C3\u00A7o pertence (id) (optional)
     - parameter idTipoEndereco: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Tipo Endere\u00C3\u00A7o (id) (optional)
     - parameter cep: (query) Apresenta o C\u00C3\u00B3digo de Endere\u00C3\u00A7amento Postal (CEP) (optional)
     - parameter logradouro: (query) Apresenta o nome do Logradouro (optional)
     - parameter numero: (query) Apresenta o n\u00C3\u00BAmero do endere\u00C3\u00A7o (optional)
     - parameter complemento: (query) Apresenta descri\u00C3\u00A7oes complementares referente ao endere\u00C3\u00A7o (optional)
     - parameter pontoReferencia: (query) Apresenta a descri\u00C3\u00A7\u00C3\u00A3o de ponto de refer\u00C3\u00AAncia do endere\u00C3\u00A7o (optional)
     - parameter bairro: (query) Apresenta nome do bairro (optional)
     - parameter cidade: (query) Apresenta nome da cidade (optional)
     - parameter uf: (query) Apresenta sigla da Unidade Federativa (optional)
     - parameter pais: (query) Apresenta nome do Pais (optional)
     - parameter dataInclusao: (query) Apresenta a data em que fora cadastrado o Endere\u00C3\u00A7o (optional)
     - parameter dataUltimaAtualizacao: (query) Data em que fora realizada a \u00C3\u00BAltima mudan\u00C3\u00A7a neste registro de endere\u00C3\u00A7o. Quando n\u00C3\u00A3o tiver ocorrido mudan\u00C3\u00A7a, conter\u00C3\u00A1 a mesma informa\u00C3\u00A7\u00C3\u00A3o que o campo dataInclusao (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 100, Max = 100) (optional)

     - returns: RequestBuilder<PageEnderecos> 
     */
    public class func listarUsingGET2WithRequestBuilder(id id: Int?, idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?, dataInclusao: NSDate?, dataUltimaAtualizacao: NSDate?, page: Int?, limit: Int?) -> RequestBuilder<PageEnderecos> {
        let path = "/api/enderecos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id": id,
            "idPessoa": idPessoa,
            "idTipoEndereco": idTipoEndereco,
            "cep": cep,
            "logradouro": logradouro,
            "numero": numero,
            "complemento": complemento,
            "pontoReferencia": pontoReferencia,
            "bairro": bairro,
            "cidade": cidade,
            "uf": uf,
            "pais": pais,
            "dataInclusao": dataInclusao,
            "dataUltimaAtualizacao": dataUltimaAtualizacao,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageEnderecos>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Realiza o cadastro de um novo Endere\u00C3\u00A7o
     
     - parameter idPessoa: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa a qual o endere\u00C3\u00A7o pertence (id) (optional)
     - parameter idTipoEndereco: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Tipo Endere\u00C3\u00A7o (id) (optional)
     - parameter cep: (query) Apresenta o C\u00C3\u00B3digo de Endere\u00C3\u00A7amento Postal (CEP) no formaro &#39;58800000&#39; (optional)
     - parameter logradouro: (query) Apresenta o nome do Logradouro (optional)
     - parameter numero: (query) Apresenta o n\u00C3\u00BAmero do endere\u00C3\u00A7o (optional)
     - parameter complemento: (query) Apresenta descri\u00C3\u00A7oes complementares referente ao endere\u00C3\u00A7o (optional)
     - parameter pontoReferencia: (query) Apresenta a descri\u00C3\u00A7\u00C3\u00A3o de ponto de refer\u00C3\u00AAncia do endere\u00C3\u00A7o (optional)
     - parameter bairro: (query) Apresenta nome do bairro (optional)
     - parameter cidade: (query) Apresenta nome da cidade (optional)
     - parameter uf: (query) Apresenta sigla da Unidade Federativa (optional)
     - parameter pais: (query) Apresenta nome do Pais (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST(idPessoa idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?, completion: ((data: Endereco?, error: ErrorType?) -> Void)) {
        salvarUsingPOSTWithRequestBuilder(idPessoa: idPessoa, idTipoEndereco: idTipoEndereco, cep: cep, logradouro: logradouro, numero: numero, complemento: complemento, pontoReferencia: pontoReferencia, bairro: bairro, cidade: cidade, uf: uf, pais: pais).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realiza o cadastro de um novo Endere\u00C3\u00A7o
     
     - POST /api/enderecos
     - Este m\u00C3\u00A9todo permite que seja cadastrado um novo Endere\u00C3\u00A7o na base de dados do Emissor.
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "pontoReferencia" : "aeiou",
  "cidade" : "aeiou",
  "numero" : 123,
  "bairro" : "aeiou",
  "idTipoEndereco" : 123456789,
  "cep" : "aeiou",
  "pais" : "aeiou",
  "idPessoa" : 123456789,
  "uf" : "aeiou",
  "complemento" : "aeiou",
  "logradouro" : "aeiou",
  "dataInclusao" : "2000-01-23T04:56:07.000+0000",
  "dataUltimaAtualizacao" : "2000-01-23T04:56:07.000+0000",
  "id" : 123456789
}}]
     
     - parameter idPessoa: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa a qual o endere\u00C3\u00A7o pertence (id) (optional)
     - parameter idTipoEndereco: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Tipo Endere\u00C3\u00A7o (id) (optional)
     - parameter cep: (query) Apresenta o C\u00C3\u00B3digo de Endere\u00C3\u00A7amento Postal (CEP) no formaro &#39;58800000&#39; (optional)
     - parameter logradouro: (query) Apresenta o nome do Logradouro (optional)
     - parameter numero: (query) Apresenta o n\u00C3\u00BAmero do endere\u00C3\u00A7o (optional)
     - parameter complemento: (query) Apresenta descri\u00C3\u00A7oes complementares referente ao endere\u00C3\u00A7o (optional)
     - parameter pontoReferencia: (query) Apresenta a descri\u00C3\u00A7\u00C3\u00A3o de ponto de refer\u00C3\u00AAncia do endere\u00C3\u00A7o (optional)
     - parameter bairro: (query) Apresenta nome do bairro (optional)
     - parameter cidade: (query) Apresenta nome da cidade (optional)
     - parameter uf: (query) Apresenta sigla da Unidade Federativa (optional)
     - parameter pais: (query) Apresenta nome do Pais (optional)

     - returns: RequestBuilder<Endereco> 
     */
    public class func salvarUsingPOSTWithRequestBuilder(idPessoa idPessoa: Int?, idTipoEndereco: Int?, cep: String?, logradouro: String?, numero: Int?, complemento: String?, pontoReferencia: String?, bairro: String?, cidade: String?, uf: String?, pais: String?) -> RequestBuilder<Endereco> {
        let path = "/api/enderecos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idPessoa": idPessoa,
            "idTipoEndereco": idTipoEndereco,
            "cep": cep,
            "logradouro": logradouro,
            "numero": numero,
            "complemento": complemento,
            "pontoReferencia": pontoReferencia,
            "bairro": bairro,
            "cidade": cidade,
            "uf": uf,
            "pais": pais
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<Endereco>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

}
