//
// GlobaltagcadastrogeralAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltagcadastrogeralAPI: APIBase {
    /**
     
     Altera os dados banc\u00E1rios de um determinado conv\u00EAnio
     
     - parameter id: (path) Id 
     - parameter convenioPersist: (body) convenioPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarConvenioUsingPUT(id id: Int, convenioPersist: ConvenioPersist, completion: ((data: ConvenioResponse?, error: ErrorType?) -> Void)) {
        alterarConvenioUsingPUTWithRequestBuilder(id: id, convenioPersist: convenioPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Altera os dados banc\u00E1rios de um determinado conv\u00EAnio
     
     - PUT /api/convenios/{id}
     - Altera os dados banc\u00E1rios de um determinado conv\u00EAnio
     - examples: [{contentType=application/json, example={
  "nomeBeneficiario" : "aeiou",
  "data" : "aeiou",
  "cnpjBeneficiario" : "aeiou",
  "banco" : 123456789,
  "instrucoes" : "aeiou",
  "numeroConvenio" : 1.3579000000000001069366817318950779736042022705078125,
  "agencia" : 123456789,
  "especie" : "aeiou",
  "enderecoCobrancaEmissor" : "aeiou",
  "contaCorrente" : "aeiou",
  "carteira" : 123456789,
  "especieDocumento" : "aeiou",
  "maquina" : "aeiou",
  "localPagamento1" : "aeiou",
  "id" : 123456789,
  "localPagamento2" : "aeiou",
  "especieTipo" : "aeiou",
  "codigoCedente" : "aeiou",
  "operador" : "aeiou",
  "aceite" : "aeiou"
}}]
     
     - parameter id: (path) Id 
     - parameter convenioPersist: (body) convenioPersist 

     - returns: RequestBuilder<ConvenioResponse> 
     */
    public class func alterarConvenioUsingPUTWithRequestBuilder(id id: Int, convenioPersist: ConvenioPersist) -> RequestBuilder<ConvenioResponse> {
        var path = "/api/convenios/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = convenioPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ConvenioResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{vencimento_resource_alterar}}}
     
     - parameter dataVencimento: (path) {{{fatura_resource_consultar_fatura_param_data_vencimento}}} 
     - parameter update: (body) update 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarCorteUsingPUT(dataVencimento dataVencimento: String, update: VencimentoUpdate, completion: ((data: ControleVencimentoResponse?, error: ErrorType?) -> Void)) {
        alterarCorteUsingPUTWithRequestBuilder(dataVencimento: dataVencimento, update: update).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{vencimento_resource_alterar}}}
     
     - PUT /api/vencimentos/{dataVencimento}
     - {{{vencimento_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "dataPrevistaFaturamento" : "aeiou",
  "dataHoraRealizacaoCorte" : "aeiou",
  "dataVencimento" : "aeiou",
  "dataHoraRealizacaoFaturamento" : "aeiou",
  "dataRealVencimento" : "aeiou",
  "dataPrevistaCorte" : "aeiou"
}}]
     
     - parameter dataVencimento: (path) {{{fatura_resource_consultar_fatura_param_data_vencimento}}} 
     - parameter update: (body) update 

     - returns: RequestBuilder<ControleVencimentoResponse> 
     */
    public class func alterarCorteUsingPUTWithRequestBuilder(dataVencimento dataVencimento: String, update: VencimentoUpdate) -> RequestBuilder<ControleVencimentoResponse> {
        var path = "/api/vencimentos/{dataVencimento}"
        path = path.stringByReplacingOccurrencesOfString("{dataVencimento}", withString: "\(dataVencimento)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = update.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ControleVencimentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{campanha_resource_alterar}}}
     
     - parameter id: (path) {{{campanha_resource_alterar_param_id}}} 
     - parameter update: (body) update 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT1(id id: Int, update: CampanhaUpdateValue, completion: ((data: CampanhaResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT1WithRequestBuilder(id: id, update: update).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{campanha_resource_alterar}}}
     
     - PUT /api/campanhas/{id}
     - {{{campanha_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "planosCampanhas" : [ {
    "parcelas" : 123,
    "taxa" : 1.3579000000000001069366817318950779736042022705078125,
    "usuario" : "aeiou",
    "id" : 123456789
  } ],
  "idTipoCampanha" : 123456789,
  "nome" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter id: (path) {{{campanha_resource_alterar_param_id}}} 
     - parameter update: (body) update 

     - returns: RequestBuilder<CampanhaResponse> 
     */
    public class func alterarUsingPUT1WithRequestBuilder(id id: Int, update: CampanhaUpdateValue) -> RequestBuilder<CampanhaResponse> {
        var path = "/api/campanhas/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = update.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<CampanhaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{configuracao_registro_cobranca_resource_alterar}}}
     
     - parameter id: (path) {{{configuracao_registro_cobranca_resource_alterar_param_id}}} 
     - parameter configuracaoPersist: (body) configuracaoPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT2(id id: Int, configuracaoPersist: ConfiguracaoRegistroCobrancaPersist, completion: ((data: ConfiguracaoRegistroCobrancaResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT2WithRequestBuilder(id: id, configuracaoPersist: configuracaoPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{configuracao_registro_cobranca_resource_alterar}}}
     
     - PUT /api/configuracoes-registro-cobranca/{id}
     - {{{configuracao_registro_cobranca_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "trustStoreName" : "aeiou",
  "clientID" : "aeiou",
  "keyStorePassword" : "aeiou",
  "typeTruststore" : "aeiou",
  "keyStorePrivateKeyPassword" : "aeiou",
  "secret" : "aeiou",
  "uri" : "aeiou",
  "truststoreAlias" : "aeiou",
  "trustStorePassword" : "aeiou",
  "keyStoreName" : "aeiou",
  "keystoreAlias" : "aeiou",
  "typeKeystore" : "aeiou",
  "codigoBanco" : 123456789,
  "id" : 123456789,
  "idEmissor" : 123456789,
  "uriAdicional" : "aeiou",
  "status" : "aeiou"
}}]
     
     - parameter id: (path) {{{configuracao_registro_cobranca_resource_alterar_param_id}}} 
     - parameter configuracaoPersist: (body) configuracaoPersist 

     - returns: RequestBuilder<ConfiguracaoRegistroCobrancaResponse> 
     */
    public class func alterarUsingPUT2WithRequestBuilder(id id: Int, configuracaoPersist: ConfiguracaoRegistroCobrancaPersist) -> RequestBuilder<ConfiguracaoRegistroCobrancaResponse> {
        var path = "/api/configuracoes-registro-cobranca/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = configuracaoPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ConfiguracaoRegistroCobrancaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{configuracao_rotativo_resource_alterar}}}
     
     - parameter id: (path) {{{configuracao_rotativo_resource_alterar_param_id}}} 
     - parameter configuracaoRotativoPersist: (body) configuracaoRotativoPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT3(id id: Int, configuracaoRotativoPersist: ConfiguracaoRotativoPersist, completion: ((data: ConfiguracaoRotativoDetalheResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT3WithRequestBuilder(id: id, configuracaoRotativoPersist: configuracaoRotativoPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{configuracao_rotativo_resource_alterar}}}
     
     - PUT /api/configuracoes-rotativos/{id}
     - {{{configuracao_rotativo_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "aceitaPagamentoMaiorQueEntrada" : false,
  "recalculaParcelamentoParaEntradaMaior" : false,
  "recalculaParcelamento" : false,
  "percentualLimitarValorMinimoParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "compoeOfertaValorNaoFinanciavel" : false,
  "parcelarApenasMinimo" : false,
  "valorMinimoParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "idProduto" : 123456789,
  "compoeOfertaValorNovosLancamentos" : false,
  "idRegraCampanha" : 123456789,
  "compoeOfertaValorRotativo" : false,
  "minimoParcelasRecalculoParcelamento" : false,
  "usuario" : "aeiou",
  "id" : 123456789,
  "antecipaParcelamentosAbertos" : false,
  "numeroMinimoOfertas" : false
}}]
     
     - parameter id: (path) {{{configuracao_rotativo_resource_alterar_param_id}}} 
     - parameter configuracaoRotativoPersist: (body) configuracaoRotativoPersist 

     - returns: RequestBuilder<ConfiguracaoRotativoDetalheResponse> 
     */
    public class func alterarUsingPUT3WithRequestBuilder(id id: Int, configuracaoRotativoPersist: ConfiguracaoRotativoPersist) -> RequestBuilder<ConfiguracaoRotativoDetalheResponse> {
        var path = "/api/configuracoes-rotativos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = configuracaoRotativoPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ConfiguracaoRotativoDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Adiciona novo conv\u00EAnio para o emissor
     
     - parameter convenioPersist: (body) convenioPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarConvenioUsingPOST(convenioPersist convenioPersist: ConvenioPersist, completion: ((data: ConvenioResponse?, error: ErrorType?) -> Void)) {
        cadastrarConvenioUsingPOSTWithRequestBuilder(convenioPersist: convenioPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Adiciona novo conv\u00EAnio para o emissor
     
     - POST /api/convenios
     - Adiciona novo conv\u00EAnio para o emissor
     - examples: [{contentType=application/json, example={
  "nomeBeneficiario" : "aeiou",
  "data" : "aeiou",
  "cnpjBeneficiario" : "aeiou",
  "banco" : 123456789,
  "instrucoes" : "aeiou",
  "numeroConvenio" : 1.3579000000000001069366817318950779736042022705078125,
  "agencia" : 123456789,
  "especie" : "aeiou",
  "enderecoCobrancaEmissor" : "aeiou",
  "contaCorrente" : "aeiou",
  "carteira" : 123456789,
  "especieDocumento" : "aeiou",
  "maquina" : "aeiou",
  "localPagamento1" : "aeiou",
  "id" : 123456789,
  "localPagamento2" : "aeiou",
  "especieTipo" : "aeiou",
  "codigoCedente" : "aeiou",
  "operador" : "aeiou",
  "aceite" : "aeiou"
}}]
     
     - parameter convenioPersist: (body) convenioPersist 

     - returns: RequestBuilder<ConvenioResponse> 
     */
    public class func cadastrarConvenioUsingPOSTWithRequestBuilder(convenioPersist convenioPersist: ConvenioPersist) -> RequestBuilder<ConvenioResponse> {
        let path = "/api/convenios"
        let URLString = PierAPI.basePath + path
        
        let parameters = convenioPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ConvenioResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{configuracao_registro_cobranca_resource_cadastrar}}}
     
     - parameter configuracaoPersist: (body) configuracaoPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarUsingPOST2(configuracaoPersist configuracaoPersist: ConfiguracaoRegistroCobrancaPersist, completion: ((data: ConfiguracaoRegistroCobrancaResponse?, error: ErrorType?) -> Void)) {
        cadastrarUsingPOST2WithRequestBuilder(configuracaoPersist: configuracaoPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{configuracao_registro_cobranca_resource_cadastrar}}}
     
     - POST /api/configuracoes-registro-cobranca
     - {{{configuracao_registro_cobranca_resource_cadastrar_notes}}}
     - examples: [{contentType=application/json, example={
  "trustStoreName" : "aeiou",
  "clientID" : "aeiou",
  "keyStorePassword" : "aeiou",
  "typeTruststore" : "aeiou",
  "keyStorePrivateKeyPassword" : "aeiou",
  "secret" : "aeiou",
  "uri" : "aeiou",
  "truststoreAlias" : "aeiou",
  "trustStorePassword" : "aeiou",
  "keyStoreName" : "aeiou",
  "keystoreAlias" : "aeiou",
  "typeKeystore" : "aeiou",
  "codigoBanco" : 123456789,
  "id" : 123456789,
  "idEmissor" : 123456789,
  "uriAdicional" : "aeiou",
  "status" : "aeiou"
}}]
     
     - parameter configuracaoPersist: (body) configuracaoPersist 

     - returns: RequestBuilder<ConfiguracaoRegistroCobrancaResponse> 
     */
    public class func cadastrarUsingPOST2WithRequestBuilder(configuracaoPersist configuracaoPersist: ConfiguracaoRegistroCobrancaPersist) -> RequestBuilder<ConfiguracaoRegistroCobrancaResponse> {
        let path = "/api/configuracoes-registro-cobranca"
        let URLString = PierAPI.basePath + path
        
        let parameters = configuracaoPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ConfiguracaoRegistroCobrancaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{produto_resource_configurar_taxa_antecipacao}}}
     
     - parameter id: (path) {{{produto_resource_configurar_taxa_antecipacao_param_id}}} 
     - parameter taxaAntecipacaoRequest: (body) taxaAntecipacaoRequest 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func configurarTaxaAntecipacaoUsingPOST(id id: Int, taxaAntecipacaoRequest: TaxaAntecipacaoRequest, completion: ((data: ParametroProdutoResponse?, error: ErrorType?) -> Void)) {
        configurarTaxaAntecipacaoUsingPOSTWithRequestBuilder(id: id, taxaAntecipacaoRequest: taxaAntecipacaoRequest).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{produto_resource_configurar_taxa_antecipacao}}}
     
     - POST /api/produtos/{id}/configurar-taxa-antecipacao
     - {{{produto_resource_configurar_taxa_antecipacao_notes}}}
     - examples: [{contentType=application/json, example={
  "idProduto" : 123456789,
  "tipoOrigemTransacao" : "aeiou",
  "valorParametro" : 1.3579000000000001069366817318950779736042022705078125,
  "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "id" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) {{{produto_resource_configurar_taxa_antecipacao_param_id}}} 
     - parameter taxaAntecipacaoRequest: (body) taxaAntecipacaoRequest 

     - returns: RequestBuilder<ParametroProdutoResponse> 
     */
    public class func configurarTaxaAntecipacaoUsingPOSTWithRequestBuilder(id id: Int, taxaAntecipacaoRequest: TaxaAntecipacaoRequest) -> RequestBuilder<ParametroProdutoResponse> {
        var path = "/api/produtos/{id}/configurar-taxa-antecipacao"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = taxaAntecipacaoRequest.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ParametroProdutoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{campanha_resource_consultar_campanha}}}
     
     - parameter id: (path) {{{campanha_resource_consultar_campanha_param_id_campanha}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarCampanhaUsingGET(id id: Int, completion: ((data: CampanhaResponse?, error: ErrorType?) -> Void)) {
        consultarCampanhaUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{campanha_resource_consultar_campanha}}}
     
     - GET /api/campanhas/{id}
     - {{{campanha_resource_consultar_campanha_notes}}}
     - examples: [{contentType=application/json, example={
  "planosCampanhas" : [ {
    "parcelas" : 123,
    "taxa" : 1.3579000000000001069366817318950779736042022705078125,
    "usuario" : "aeiou",
    "id" : 123456789
  } ],
  "idTipoCampanha" : 123456789,
  "nome" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter id: (path) {{{campanha_resource_consultar_campanha_param_id_campanha}}} 

     - returns: RequestBuilder<CampanhaResponse> 
     */
    public class func consultarCampanhaUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<CampanhaResponse> {
        var path = "/api/campanhas/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CampanhaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Consultar dados banc\u00E1rios pelo id do conv\u00EAnio
     
     - parameter id: (path) Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarConvenioUsingGET(id id: Int, completion: ((data: ConvenioResponse?, error: ErrorType?) -> Void)) {
        consultarConvenioUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consultar dados banc\u00E1rios pelo id do conv\u00EAnio
     
     - GET /api/convenios/{id}
     - Consultar dados banc\u00E1rios de um determinado conv\u00EAnio
     - examples: [{contentType=application/json, example={
  "nomeBeneficiario" : "aeiou",
  "data" : "aeiou",
  "cnpjBeneficiario" : "aeiou",
  "banco" : 123456789,
  "instrucoes" : "aeiou",
  "numeroConvenio" : 1.3579000000000001069366817318950779736042022705078125,
  "agencia" : 123456789,
  "especie" : "aeiou",
  "enderecoCobrancaEmissor" : "aeiou",
  "contaCorrente" : "aeiou",
  "carteira" : 123456789,
  "especieDocumento" : "aeiou",
  "maquina" : "aeiou",
  "localPagamento1" : "aeiou",
  "id" : 123456789,
  "localPagamento2" : "aeiou",
  "especieTipo" : "aeiou",
  "codigoCedente" : "aeiou",
  "operador" : "aeiou",
  "aceite" : "aeiou"
}}]
     
     - parameter id: (path) Id 

     - returns: RequestBuilder<ConvenioResponse> 
     */
    public class func consultarConvenioUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<ConvenioResponse> {
        var path = "/api/convenios/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ConvenioResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{produto_resource_consultar_taxa_antecipacao}}}
     
     - parameter id: (path) {{{produto_resource_consultar_taxa_antecipacao_param_id}}} 
     - parameter tipoTransacao: (query) {{{produto_resource_consultar_taxa_antecipacao_param_tipo_transacao}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarTaxaAntecipacaoUsingGET(id id: Int, tipoTransacao: String, completion: ((data: ParametroProdutoResponse?, error: ErrorType?) -> Void)) {
        consultarTaxaAntecipacaoUsingGETWithRequestBuilder(id: id, tipoTransacao: tipoTransacao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{produto_resource_consultar_taxa_antecipacao}}}
     
     - GET /api/produtos/{id}/consultar-taxa-antecipacao
     - {{{produto_resource_consultar_taxa_antecipacao_notes}}}
     - examples: [{contentType=application/json, example={
  "idProduto" : 123456789,
  "tipoOrigemTransacao" : "aeiou",
  "valorParametro" : 1.3579000000000001069366817318950779736042022705078125,
  "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "id" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) {{{produto_resource_consultar_taxa_antecipacao_param_id}}} 
     - parameter tipoTransacao: (query) {{{produto_resource_consultar_taxa_antecipacao_param_tipo_transacao}}} 

     - returns: RequestBuilder<ParametroProdutoResponse> 
     */
    public class func consultarTaxaAntecipacaoUsingGETWithRequestBuilder(id id: Int, tipoTransacao: String) -> RequestBuilder<ParametroProdutoResponse> {
        var path = "/api/produtos/{id}/consultar-taxa-antecipacao"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "tipoTransacao": tipoTransacao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ParametroProdutoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{configuracao_registro_cobranca_resource_consultar}}}
     
     - parameter id: (path) {{{configuracao_registro_cobranca_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET13(id id: Int, completion: ((data: ConfiguracaoRegistroCobrancaResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET13WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{configuracao_registro_cobranca_resource_consultar}}}
     
     - GET /api/configuracoes-registro-cobranca/{id}
     - {{{configuracao_registro_cobranca_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "trustStoreName" : "aeiou",
  "clientID" : "aeiou",
  "keyStorePassword" : "aeiou",
  "typeTruststore" : "aeiou",
  "keyStorePrivateKeyPassword" : "aeiou",
  "secret" : "aeiou",
  "uri" : "aeiou",
  "truststoreAlias" : "aeiou",
  "trustStorePassword" : "aeiou",
  "keyStoreName" : "aeiou",
  "keystoreAlias" : "aeiou",
  "typeKeystore" : "aeiou",
  "codigoBanco" : 123456789,
  "id" : 123456789,
  "idEmissor" : 123456789,
  "uriAdicional" : "aeiou",
  "status" : "aeiou"
}}]
     
     - parameter id: (path) {{{configuracao_registro_cobranca_resource_consultar_param_id}}} 

     - returns: RequestBuilder<ConfiguracaoRegistroCobrancaResponse> 
     */
    public class func consultarUsingGET13WithRequestBuilder(id id: Int) -> RequestBuilder<ConfiguracaoRegistroCobrancaResponse> {
        var path = "/api/configuracoes-registro-cobranca/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ConfiguracaoRegistroCobrancaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{configuracao_rotativo_resource_consultar}}}
     
     - parameter id: (path) {{{configuracao_rotativo_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET14(id id: Int, completion: ((data: ConfiguracaoRotativoDetalheResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET14WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{configuracao_rotativo_resource_consultar}}}
     
     - GET /api/configuracoes-rotativos/{id}
     - {{{configuracao_rotativo_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "aceitaPagamentoMaiorQueEntrada" : false,
  "recalculaParcelamentoParaEntradaMaior" : false,
  "recalculaParcelamento" : false,
  "percentualLimitarValorMinimoParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "compoeOfertaValorNaoFinanciavel" : false,
  "parcelarApenasMinimo" : false,
  "valorMinimoParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "idProduto" : 123456789,
  "compoeOfertaValorNovosLancamentos" : false,
  "idRegraCampanha" : 123456789,
  "compoeOfertaValorRotativo" : false,
  "minimoParcelasRecalculoParcelamento" : false,
  "usuario" : "aeiou",
  "id" : 123456789,
  "antecipaParcelamentosAbertos" : false,
  "numeroMinimoOfertas" : false
}}]
     
     - parameter id: (path) {{{configuracao_rotativo_resource_consultar_param_id}}} 

     - returns: RequestBuilder<ConfiguracaoRotativoDetalheResponse> 
     */
    public class func consultarUsingGET14WithRequestBuilder(id id: Int) -> RequestBuilder<ConfiguracaoRotativoDetalheResponse> {
        var path = "/api/configuracoes-rotativos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ConfiguracaoRotativoDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{produto_resource_consultar}}}
     
     - parameter id: (path) {{{produto_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET34(id id: Int, completion: ((data: ProdutoDetalhesResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET34WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{produto_resource_consultar}}}
     
     - GET /api/produtos/{id}
     - {{{produto_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "idFantasiaBasica" : 123456789,
  "nome" : "aeiou",
  "id" : 123456789,
  "usoExterior" : false,
  "fantasiaBasica" : "aeiou",
  "status" : 123
}}]
     
     - parameter id: (path) {{{produto_resource_consultar_param_id}}} 

     - returns: RequestBuilder<ProdutoDetalhesResponse> 
     */
    public class func consultarUsingGET34WithRequestBuilder(id id: Int) -> RequestBuilder<ProdutoDetalhesResponse> {
        var path = "/api/produtos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ProdutoDetalhesResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{tipo_transacoes_ajuste_resource_consultar}}}
     
     - parameter id: (path) {{{tipo_transacoes_ajuste_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET43(id id: Int, completion: ((data: TipoAjusteResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET43WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{tipo_transacoes_ajuste_resource_consultar}}}
     
     - GET /api/tipos-ajustes/{id}
     - {{{tipo_transacoes_ajuste_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "transacoes" : [ {
    "id" : 123456789,
    "descricao" : "aeiou"
  } ],
  "id" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) {{{tipo_transacoes_ajuste_resource_consultar_param_id}}} 

     - returns: RequestBuilder<TipoAjusteResponse> 
     */
    public class func consultarUsingGET43WithRequestBuilder(id id: Int) -> RequestBuilder<TipoAjusteResponse> {
        var path = "/api/tipos-ajustes/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TipoAjusteResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{tipo_boleto_resource_consultar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{tipo_boleto_request_id_value}}} (optional)
     - parameter descricao: (query) {{{tipo_boleto_request_descricao_value}}} (optional)
     - parameter banco: (query) {{{tipo_boleto_request_banco_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET44(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, descricao: String?, banco: Int?, completion: ((data: PageTipoBoletoResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET44WithRequestBuilder(sort: sort, page: page, limit: limit, id: id, descricao: descricao, banco: banco).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{tipo_boleto_resource_consultar}}}
     
     - GET /api/tipos-boletos
     - {{{tipo_boleto_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "maxNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "ultimoNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "faixaNossoNumero" : 123,
    "minNossoNumero" : 1.3579000000000001069366817318950779736042022705078125,
    "banco" : 123456789,
    "id" : 123456789,
    "descricao" : "aeiou",
    "tamNossoNumero" : 123
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{tipo_boleto_request_id_value}}} (optional)
     - parameter descricao: (query) {{{tipo_boleto_request_descricao_value}}} (optional)
     - parameter banco: (query) {{{tipo_boleto_request_banco_value}}} (optional)

     - returns: RequestBuilder<PageTipoBoletoResponse> 
     */
    public class func consultarUsingGET44WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, descricao: String?, banco: Int?) -> RequestBuilder<PageTipoBoletoResponse> {
        let path = "/api/tipos-boletos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "descricao": descricao,
            "banco": banco
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoBoletoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{tipo_endereco_resource_consultar}}}
     
     - parameter id: (path) {{{tipo_endereco_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET45(id id: Int, completion: ((data: TipoEnderecoResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET45WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{tipo_endereco_resource_consultar}}}
     
     - GET /api/tipos-enderecos/{id}
     - {{{tipo_endereco_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "nome" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter id: (path) {{{tipo_endereco_resource_consultar_param_id}}} 

     - returns: RequestBuilder<TipoEnderecoResponse> 
     */
    public class func consultarUsingGET45WithRequestBuilder(id id: Int) -> RequestBuilder<TipoEnderecoResponse> {
        var path = "/api/tipos-enderecos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TipoEnderecoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{tipo_operacao_resource_consultar}}}
     
     - parameter idCartao: (query) {{{tipo_operacao_resource_consultar_param_id_cartao}}} 
     - parameter idEstabelecimento: (query) {{{tipo_operacao_resource_consultar_param_id_estabelecimento}}} 
     - parameter codigoProcessamento: (query) {{{tipo_operacao_resource_consultar_param_codigo_processamento}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET46(idCartao idCartao: Int, idEstabelecimento: Int, codigoProcessamento: String, completion: ((data: TipoOperacaoResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET46WithRequestBuilder(idCartao: idCartao, idEstabelecimento: idEstabelecimento, codigoProcessamento: codigoProcessamento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{tipo_operacao_resource_consultar}}}
     
     - GET /api/tipos-operacoes
     - {{{tipo_operacao_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "tarifa" : 1.3579000000000001069366817318950779736042022705078125,
  "idEstabelecimento" : 123456789,
  "flagTiraTac" : 123,
  "nome" : "aeiou",
  "tipoOperacao" : "aeiou",
  "planoMaximo" : 123,
  "descricao" : "aeiou",
  "valorMaximo" : 1.3579000000000001069366817318950779736042022705078125,
  "valorTAC" : 1.3579000000000001069366817318950779736042022705078125,
  "planoMinimo" : 123,
  "idProduto" : 123456789,
  "tipoExcedentePermitido" : "aeiou",
  "remuneracaoEmissor" : 1.3579000000000001069366817318950779736042022705078125,
  "excedentePermitido" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 123456789,
  "valorMinimo" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter idCartao: (query) {{{tipo_operacao_resource_consultar_param_id_cartao}}} 
     - parameter idEstabelecimento: (query) {{{tipo_operacao_resource_consultar_param_id_estabelecimento}}} 
     - parameter codigoProcessamento: (query) {{{tipo_operacao_resource_consultar_param_codigo_processamento}}} 

     - returns: RequestBuilder<TipoOperacaoResponse> 
     */
    public class func consultarUsingGET46WithRequestBuilder(idCartao idCartao: Int, idEstabelecimento: Int, codigoProcessamento: String) -> RequestBuilder<TipoOperacaoResponse> {
        let path = "/api/tipos-operacoes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idCartao": idCartao,
            "idEstabelecimento": idEstabelecimento,
            "codigoProcessamento": codigoProcessamento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TipoOperacaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{tipo_telefone_resource_consultar}}}
     
     - parameter id: (path) {{{tipo_telefone_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET48(id id: Int, completion: ((data: TipoTelefoneResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET48WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{tipo_telefone_resource_consultar}}}
     
     - GET /api/tipos-telefones/{id}
     - {{{tipo_telefone_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "nome" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter id: (path) {{{tipo_telefone_resource_consultar_param_id}}} 

     - returns: RequestBuilder<TipoTelefoneResponse> 
     */
    public class func consultarUsingGET48WithRequestBuilder(id id: Int) -> RequestBuilder<TipoTelefoneResponse> {
        var path = "/api/tipos-telefones/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TipoTelefoneResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{atendimento_cliente_resource_consultar}}}
     
     - parameter id: (path) {{{atendimento_cliente_resource_consultar_param_id_atendimento}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET7(id id: Int, completion: ((data: AtendimentoClienteResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET7WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{atendimento_cliente_resource_consultar}}}
     
     - GET /api/atendimento-clientes/{id}
     - {{{atendimento_cliente_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "conteudoAtendimento" : "aeiou",
  "idConta" : 123456789,
  "descricaoTipoAtendimento" : "aeiou",
  "dataProcessamento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataAgendamento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "flagProcessamento" : 123,
  "dataHoraFimAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "detalhesAtendimento" : "aeiou",
  "idAtendimento" : 123456789,
  "dataAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataHoraInicioAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "nomeAtendente" : "aeiou",
  "nomeSistema" : "aeiou",
  "idTipoAtendimento" : 123456789
}}]
     
     - parameter id: (path) {{{atendimento_cliente_resource_consultar_param_id_atendimento}}} 

     - returns: RequestBuilder<AtendimentoClienteResponse> 
     */
    public class func consultarUsingGET7WithRequestBuilder(id id: Int) -> RequestBuilder<AtendimentoClienteResponse> {
        var path = "/api/atendimento-clientes/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AtendimentoClienteResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{banco_resource_consultar}}}
     
     - parameter id: (path) {{{banco_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET9(id id: Int, completion: ((data: BancoResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET9WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{banco_resource_consultar}}}
     
     - GET /api/bancos/{id}
     - {{{banco_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "nome" : "aeiou",
  "id" : 123456789,
  "digitoBanco" : "aeiou",
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) {{{banco_resource_consultar_param_id}}} 

     - returns: RequestBuilder<BancoResponse> 
     */
    public class func consultarUsingGET9WithRequestBuilder(id id: Int) -> RequestBuilder<BancoResponse> {
        var path = "/api/bancos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<BancoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{campanha_resource_listar_campanhas}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idTipoCampanha: (query) {{{campanha_request_id_tipo_campanha_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarCampanhasUsingGET(sort sort: [String]?, page: Int?, limit: Int?, idTipoCampanha: Int?, completion: ((data: PageCampanhaResponse?, error: ErrorType?) -> Void)) {
        listarCampanhasUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, idTipoCampanha: idTipoCampanha).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{campanha_resource_listar_campanhas}}}
     
     - GET /api/campanhas
     - {{{campanha_resource_listar_campanhas_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "planosCampanhas" : [ {
      "parcelas" : 123,
      "taxa" : 1.3579000000000001069366817318950779736042022705078125,
      "usuario" : "aeiou",
      "id" : 123456789
    } ],
    "idTipoCampanha" : 123456789,
    "nome" : "aeiou",
    "id" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idTipoCampanha: (query) {{{campanha_request_id_tipo_campanha_value}}} (optional)

     - returns: RequestBuilder<PageCampanhaResponse> 
     */
    public class func listarCampanhasUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idTipoCampanha: Int?) -> RequestBuilder<PageCampanhaResponse> {
        let path = "/api/campanhas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idTipoCampanha": idTipoCampanha
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageCampanhaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{pessoa_resource_listar_contas_por_pessoa}}}
     
     - parameter numeroReceitaFederal: (query) {{{pessoa_resource_listar_contas_por_pessoa_param_numero_receita_federal}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarContasPorPessoaUsingGET(numeroReceitaFederal numeroReceitaFederal: String, sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageContaDetalheResponse?, error: ErrorType?) -> Void)) {
        listarContasPorPessoaUsingGETWithRequestBuilder(numeroReceitaFederal: numeroReceitaFederal, sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{pessoa_resource_listar_contas_por_pessoa}}}
     
     - GET /api/pessoas/listar-contas
     - {{{pessoa_resource_listar_contas_por_pessoa_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idOrigemComercial" : 123456789,
    "melhorDiaCompra" : 123,
    "saldoDisponivelSaque" : 1.3579000000000001069366817318950779736042022705078125,
    "statusConta" : "aeiou",
    "limiteGlobal" : 1.3579000000000001069366817318950779736042022705078125,
    "diaVencimento" : 123,
    "formaEnvioFatura" : "aeiou",
    "nomeFantasiaBasica" : "aeiou",
    "idProduto" : 123456789,
    "nomeOrigemComercial" : "aeiou",
    "dataUltimaAlteracaoVencimento" : "aeiou",
    "diasAtraso" : 123456789,
    "id" : 123456789,
    "saldoDisponivelGlobal" : 1.3579000000000001069366817318950779736042022705078125,
    "dataCadastro" : "aeiou",
    "limiteSaqueGlobal" : 1.3579000000000001069366817318950779736042022705078125,
    "idStatusConta" : 123456789,
    "valorRenda" : 1.3579000000000001069366817318950779736042022705078125,
    "nome" : "aeiou",
    "idPessoa" : 123456789,
    "numeroContaCorrente" : "aeiou",
    "dataStatusConta" : "aeiou",
    "idFantasiaBasica" : 123456789,
    "proximoVencimentoPadrao" : "aeiou",
    "numeroAgencia" : 123,
    "titular" : false,
    "dataHoraUltimaCompra" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter numeroReceitaFederal: (query) {{{pessoa_resource_listar_contas_por_pessoa_param_numero_receita_federal}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageContaDetalheResponse> 
     */
    public class func listarContasPorPessoaUsingGETWithRequestBuilder(numeroReceitaFederal numeroReceitaFederal: String, sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageContaDetalheResponse> {
        let path = "/api/pessoas/listar-contas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "numeroReceitaFederal": numeroReceitaFederal,
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageContaDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista os dados banc\u00E1rios dos conv\u00EAnios existentes
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter banco: (query) Identifica\u00E7\u00E3o do banco. (optional)
     - parameter agencia: (query) N\u00FAmero da ag\u00EAncia. (optional)
     - parameter contaCorrente: (query) Conta corrente. (optional)
     - parameter numeroConvenio: (query) C\u00F3digo de identifica\u00E7\u00E3o do conv\u00EAnio. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarConveniosUsingGET(sort sort: [String]?, page: Int?, limit: Int?, banco: Int?, agencia: Int?, contaCorrente: String?, numeroConvenio: Double?, completion: ((data: PageConvenioResponse?, error: ErrorType?) -> Void)) {
        listarConveniosUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, banco: banco, agencia: agencia, contaCorrente: contaCorrente, numeroConvenio: numeroConvenio).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista os dados banc\u00E1rios dos conv\u00EAnios existentes
     
     - GET /api/convenios
     - Lista os dados banc\u00E1rios dos conv\u00EAnios existentes
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nomeBeneficiario" : "aeiou",
    "data" : "aeiou",
    "cnpjBeneficiario" : "aeiou",
    "banco" : 123456789,
    "instrucoes" : "aeiou",
    "numeroConvenio" : 1.3579000000000001069366817318950779736042022705078125,
    "agencia" : 123456789,
    "especie" : "aeiou",
    "enderecoCobrancaEmissor" : "aeiou",
    "contaCorrente" : "aeiou",
    "carteira" : 123456789,
    "especieDocumento" : "aeiou",
    "maquina" : "aeiou",
    "localPagamento1" : "aeiou",
    "id" : 123456789,
    "localPagamento2" : "aeiou",
    "especieTipo" : "aeiou",
    "codigoCedente" : "aeiou",
    "operador" : "aeiou",
    "aceite" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter banco: (query) Identifica\u00E7\u00E3o do banco. (optional)
     - parameter agencia: (query) N\u00FAmero da ag\u00EAncia. (optional)
     - parameter contaCorrente: (query) Conta corrente. (optional)
     - parameter numeroConvenio: (query) C\u00F3digo de identifica\u00E7\u00E3o do conv\u00EAnio. (optional)

     - returns: RequestBuilder<PageConvenioResponse> 
     */
    public class func listarConveniosUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, banco: Int?, agencia: Int?, contaCorrente: String?, numeroConvenio: Double?) -> RequestBuilder<PageConvenioResponse> {
        let path = "/api/convenios"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "banco": banco,
            "agencia": agencia,
            "contaCorrente": contaCorrente,
            "numeroConvenio": numeroConvenio
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageConvenioResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{campo_codificado_resource_listar_estados_civis}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarEstadosCivisUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageCampoCodificadoDescricaoResponse?, error: ErrorType?) -> Void)) {
        listarEstadosCivisUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{campo_codificado_resource_listar_estados_civis}}}
     
     - GET /api/estados-civis
     - {{{campo_codificado_resource_listar_estados_civis_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "codigo" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageCampoCodificadoDescricaoResponse> 
     */
    public class func listarEstadosCivisUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageCampoCodificadoDescricaoResponse> {
        let path = "/api/estados-civis"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageCampoCodificadoDescricaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{fantasia_basica_resource_listar_fantasias_basicas}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarFantasiasBasicasUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageFantasiaBasicaResponse?, error: ErrorType?) -> Void)) {
        listarFantasiasBasicasUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{fantasia_basica_resource_listar_fantasias_basicas}}}
     
     - GET /api/fantasias-basicas
     - {{{fantasia_basica_resource_listar_fantasias_basicas_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nome" : "aeiou",
    "id" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageFantasiaBasicaResponse> 
     */
    public class func listarFantasiasBasicasUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageFantasiaBasicaResponse> {
        let path = "/api/fantasias-basicas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageFantasiaBasicaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{pessoa_resource_listar_historico_telefones}}}
     
     - parameter id: (path) {{{pessoa_resource_listar_historico_telefones_param_id_pessoa}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarHistoricoTelefonesUsingGET(id id: Int, completion: ((data: HistoricoTelefoneResponse?, error: ErrorType?) -> Void)) {
        listarHistoricoTelefonesUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{pessoa_resource_listar_historico_telefones}}}
     
     - GET /api/pessoas/{id}/historico-telefones
     - {{{pessoa_resource_listar_historico_telefones_notes}}}
     - examples: [{contentType=application/json, example={
  "dataModificacao" : "aeiou",
  "telefone" : "aeiou",
  "tipoTelefone" : "aeiou",
  "idTipoTelefone" : 123456789,
  "id" : 123456789
}}]
     
     - parameter id: (path) {{{pessoa_resource_listar_historico_telefones_param_id_pessoa}}} 

     - returns: RequestBuilder<HistoricoTelefoneResponse> 
     */
    public class func listarHistoricoTelefonesUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<HistoricoTelefoneResponse> {
        var path = "/api/pessoas/{id}/historico-telefones"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<HistoricoTelefoneResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{campo_codificado_resource_listar_nacionalidades}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarNacionalidadesUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageCampoCodificadoDescricaoResponse?, error: ErrorType?) -> Void)) {
        listarNacionalidadesUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{campo_codificado_resource_listar_nacionalidades}}}
     
     - GET /api/nacionalidades
     - {{{campo_codificado_resource_listar_nacionalidades_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "codigo" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageCampoCodificadoDescricaoResponse> 
     */
    public class func listarNacionalidadesUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageCampoCodificadoDescricaoResponse> {
        let path = "/api/nacionalidades"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageCampoCodificadoDescricaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{campo_codificado_resource_listar_naturezas_ocupacoes}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarNaturezasOcupacoesUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageCampoCodificadoDescricaoResponse?, error: ErrorType?) -> Void)) {
        listarNaturezasOcupacoesUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{campo_codificado_resource_listar_naturezas_ocupacoes}}}
     
     - GET /api/ocupacoes
     - {{{campo_codificado_resource_listar_naturezas_ocupacoes_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "codigo" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageCampoCodificadoDescricaoResponse> 
     */
    public class func listarNaturezasOcupacoesUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageCampoCodificadoDescricaoResponse> {
        let path = "/api/ocupacoes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageCampoCodificadoDescricaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{campo_codificado_resource_listar_parentescos}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarParentescosUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageCampoCodificadoDescricaoResponse?, error: ErrorType?) -> Void)) {
        listarParentescosUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{campo_codificado_resource_listar_parentescos}}}
     
     - GET /api/parentescos
     - {{{campo_codificado_resource_listar_parentescos_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "codigo" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageCampoCodificadoDescricaoResponse> 
     */
    public class func listarParentescosUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageCampoCodificadoDescricaoResponse> {
        let path = "/api/parentescos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageCampoCodificadoDescricaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{campo_codificado_resource_listar_profissoes}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarProfissoesUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageCampoCodificadoDescricaoResponse?, error: ErrorType?) -> Void)) {
        listarProfissoesUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{campo_codificado_resource_listar_profissoes}}}
     
     - GET /api/profissoes
     - {{{campo_codificado_resource_listar_profissoes_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "codigo" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageCampoCodificadoDescricaoResponse> 
     */
    public class func listarProfissoesUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageCampoCodificadoDescricaoResponse> {
        let path = "/api/profissoes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageCampoCodificadoDescricaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{tipo_campanha_resource_listar_tipos_campanhas}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarTiposCampanhasUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageTipoCampanhaResponse?, error: ErrorType?) -> Void)) {
        listarTiposCampanhasUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{tipo_campanha_resource_listar_tipos_campanhas}}}
     
     - GET /api/tipos-campanhas
     - {{{tipo_campanha_resource_listar_tipos_campanhas_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "id" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageTipoCampanhaResponse> 
     */
    public class func listarTiposCampanhasUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageTipoCampanhaResponse> {
        let path = "/api/tipos-campanhas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoCampanhaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{banco_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET10(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageBancoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET10WithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{banco_resource_listar}}}
     
     - GET /api/bancos
     - {{{banco_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nome" : "aeiou",
    "id" : 123456789,
    "digitoBanco" : "aeiou",
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageBancoResponse> 
     */
    public class func listarUsingGET10WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageBancoResponse> {
        let path = "/api/bancos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageBancoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{configuracao_registro_cobranca_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET15(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: ConfiguracaoRegistroCobrancaResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET15WithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{configuracao_registro_cobranca_resource_listar}}}
     
     - GET /api/configuracoes-registro-cobranca
     - {{{configuracao_registro_cobranca_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "trustStoreName" : "aeiou",
  "clientID" : "aeiou",
  "keyStorePassword" : "aeiou",
  "typeTruststore" : "aeiou",
  "keyStorePrivateKeyPassword" : "aeiou",
  "secret" : "aeiou",
  "uri" : "aeiou",
  "truststoreAlias" : "aeiou",
  "trustStorePassword" : "aeiou",
  "keyStoreName" : "aeiou",
  "keystoreAlias" : "aeiou",
  "typeKeystore" : "aeiou",
  "codigoBanco" : 123456789,
  "id" : 123456789,
  "idEmissor" : 123456789,
  "uriAdicional" : "aeiou",
  "status" : "aeiou"
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<ConfiguracaoRegistroCobrancaResponse> 
     */
    public class func listarUsingGET15WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<ConfiguracaoRegistroCobrancaResponse> {
        let path = "/api/configuracoes-registro-cobranca"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ConfiguracaoRegistroCobrancaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{configuracao_rotativo_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idProduto: (query) {{{configuracao_rotativo_request_id_produto_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET16(sort sort: [String]?, page: Int?, limit: Int?, idProduto: Int?, completion: ((data: PageConfiguracaoRotativoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET16WithRequestBuilder(sort: sort, page: page, limit: limit, idProduto: idProduto).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{configuracao_rotativo_resource_listar}}}
     
     - GET /api/configuracoes-rotativos
     - {{{configuracao_rotativo_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "aceitaPagamentoMaiorQueEntrada" : false,
    "recalculaParcelamentoParaEntradaMaior" : false,
    "recalculaParcelamento" : false,
    "percentualLimitarValorMinimoParcela" : 1.3579000000000001069366817318950779736042022705078125,
    "compoeOfertaValorNaoFinanciavel" : false,
    "parcelarApenasMinimo" : false,
    "valorMinimoParcela" : 1.3579000000000001069366817318950779736042022705078125,
    "idProduto" : 123456789,
    "compoeOfertaValorNovosLancamentos" : false,
    "idRegraCampanha" : 123456789,
    "compoeOfertaValorRotativo" : false,
    "minimoParcelasRecalculoParcelamento" : false,
    "usuario" : "aeiou",
    "id" : 123456789,
    "antecipaParcelamentosAbertos" : false,
    "numeroMinimoOfertas" : false
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idProduto: (query) {{{configuracao_rotativo_request_id_produto_value}}} (optional)

     - returns: RequestBuilder<PageConfiguracaoRotativoResponse> 
     */
    public class func listarUsingGET16WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idProduto: Int?) -> RequestBuilder<PageConfiguracaoRotativoResponse> {
        let path = "/api/configuracoes-rotativos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idProduto": idProduto
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageConfiguracaoRotativoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{portador_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idConta: (query) {{{portador_request_id_conta_value}}} (optional)
     - parameter idProduto: (query) {{{portador_request_id_produto_value}}} (optional)
     - parameter idPessoa: (query) {{{portador_request_id_pessoa_value}}} (optional)
     - parameter idParentesco: (query) {{{portador_request_id_parentesco_value}}} (optional)
     - parameter tipoPortador: (query) {{{portador_request_tipo_portador_value}}} (optional)
     - parameter nomeImpresso: (query) {{{portador_request_nome_impresso_value}}} (optional)
     - parameter idTipoCartao: (query) {{{portador_request_id_tipo_cartao_value}}} (optional)
     - parameter flagAtivo: (query) {{{portador_request_flag_ativo_value}}} (optional)
     - parameter dataCadastroPortador: (query) {{{portador_request_data_cadastro_portador_value}}} (optional)
     - parameter dataCancelamentoPortador: (query) {{{portador_request_data_cancelamento_portador_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET43(sort sort: [String]?, page: Int?, limit: Int?, idConta: Int?, idProduto: Int?, idPessoa: Int?, idParentesco: Int?, tipoPortador: String?, nomeImpresso: String?, idTipoCartao: Int?, flagAtivo: Int?, dataCadastroPortador: String?, dataCancelamentoPortador: String?, completion: ((data: PagePortadorResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET43WithRequestBuilder(sort: sort, page: page, limit: limit, idConta: idConta, idProduto: idProduto, idPessoa: idPessoa, idParentesco: idParentesco, tipoPortador: tipoPortador, nomeImpresso: nomeImpresso, idTipoCartao: idTipoCartao, flagAtivo: flagAtivo, dataCadastroPortador: dataCadastroPortador, dataCancelamentoPortador: dataCancelamentoPortador).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{portador_resource_listar}}}
     
     - GET /api/portadores
     - {{{portador_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idPessoa" : 123456789,
    "idConta" : 123456789,
    "idProduto" : 123456789,
    "dataCancelamentoPortador" : "aeiou",
    "idTipoCartao" : 123456789,
    "idParentesco" : 123456789,
    "dataCadastroPortador" : "aeiou",
    "nomeImpresso" : "aeiou",
    "flagAtivo" : 123,
    "tipoPortador" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idConta: (query) {{{portador_request_id_conta_value}}} (optional)
     - parameter idProduto: (query) {{{portador_request_id_produto_value}}} (optional)
     - parameter idPessoa: (query) {{{portador_request_id_pessoa_value}}} (optional)
     - parameter idParentesco: (query) {{{portador_request_id_parentesco_value}}} (optional)
     - parameter tipoPortador: (query) {{{portador_request_tipo_portador_value}}} (optional)
     - parameter nomeImpresso: (query) {{{portador_request_nome_impresso_value}}} (optional)
     - parameter idTipoCartao: (query) {{{portador_request_id_tipo_cartao_value}}} (optional)
     - parameter flagAtivo: (query) {{{portador_request_flag_ativo_value}}} (optional)
     - parameter dataCadastroPortador: (query) {{{portador_request_data_cadastro_portador_value}}} (optional)
     - parameter dataCancelamentoPortador: (query) {{{portador_request_data_cancelamento_portador_value}}} (optional)

     - returns: RequestBuilder<PagePortadorResponse> 
     */
    public class func listarUsingGET43WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idConta: Int?, idProduto: Int?, idPessoa: Int?, idParentesco: Int?, tipoPortador: String?, nomeImpresso: String?, idTipoCartao: Int?, flagAtivo: Int?, dataCadastroPortador: String?, dataCancelamentoPortador: String?) -> RequestBuilder<PagePortadorResponse> {
        let path = "/api/portadores"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idConta": idConta,
            "idProduto": idProduto,
            "idPessoa": idPessoa,
            "idParentesco": idParentesco,
            "tipoPortador": tipoPortador,
            "nomeImpresso": nomeImpresso,
            "idTipoCartao": idTipoCartao,
            "flagAtivo": flagAtivo,
            "dataCadastroPortador": dataCadastroPortador,
            "dataCancelamentoPortador": dataCancelamentoPortador
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PagePortadorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{produto_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter nome: (query) {{{produto_request_nome_value}}} (optional)
     - parameter status: (query) {{{produto_request_status_value}}} (optional)
     - parameter idFantasiaBasica: (query) {{{produto_request_id_fantasia_basica_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET44(sort sort: [String]?, page: Int?, limit: Int?, nome: String?, status: Int?, idFantasiaBasica: Int?, completion: ((data: PageProdutoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET44WithRequestBuilder(sort: sort, page: page, limit: limit, nome: nome, status: status, idFantasiaBasica: idFantasiaBasica).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{produto_resource_listar}}}
     
     - GET /api/produtos
     - {{{produto_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idFantasiaBasica" : 123456789,
    "nome" : "aeiou",
    "id" : 123456789,
    "status" : 123
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter nome: (query) {{{produto_request_nome_value}}} (optional)
     - parameter status: (query) {{{produto_request_status_value}}} (optional)
     - parameter idFantasiaBasica: (query) {{{produto_request_id_fantasia_basica_value}}} (optional)

     - returns: RequestBuilder<PageProdutoResponse> 
     */
    public class func listarUsingGET44WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, nome: String?, status: Int?, idFantasiaBasica: Int?) -> RequestBuilder<PageProdutoResponse> {
        let path = "/api/produtos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "nome": nome,
            "status": status,
            "idFantasiaBasica": idFantasiaBasica
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageProdutoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{promotor_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{promotor_request_id_value}}} (optional)
     - parameter nome: (query) {{{promotor_request_nome_value}}} (optional)
     - parameter dataCadastro: (query) {{{promotor_request_data_cadastro_value}}} (optional)
     - parameter idEstabelecimento: (query) {{{promotor_request_id_estabelecimento_value}}} (optional)
     - parameter idUsuario: (query) {{{promotor_request_id_usuario_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET45(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, nome: String?, dataCadastro: String?, idEstabelecimento: Int?, idUsuario: Int?, completion: ((data: PagePromotorResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET45WithRequestBuilder(sort: sort, page: page, limit: limit, id: id, nome: nome, dataCadastro: dataCadastro, idEstabelecimento: idEstabelecimento, idUsuario: idUsuario).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{promotor_resource_listar}}}
     
     - GET /api/promotores
     - {{{promotor_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idEstabelecimento" : 123456789,
    "idUsuario" : 123456789,
    "nome" : "aeiou",
    "id" : 123456789,
    "dataCadastro" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{promotor_request_id_value}}} (optional)
     - parameter nome: (query) {{{promotor_request_nome_value}}} (optional)
     - parameter dataCadastro: (query) {{{promotor_request_data_cadastro_value}}} (optional)
     - parameter idEstabelecimento: (query) {{{promotor_request_id_estabelecimento_value}}} (optional)
     - parameter idUsuario: (query) {{{promotor_request_id_usuario_value}}} (optional)

     - returns: RequestBuilder<PagePromotorResponse> 
     */
    public class func listarUsingGET45WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, nome: String?, dataCadastro: String?, idEstabelecimento: Int?, idUsuario: Int?) -> RequestBuilder<PagePromotorResponse> {
        let path = "/api/promotores"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "nome": nome,
            "dataCadastro": dataCadastro,
            "idEstabelecimento": idEstabelecimento,
            "idUsuario": idUsuario
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PagePromotorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{tipo_ajuste_resource_consultar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{tipo_ajuste_request_id_value}}} (optional)
     - parameter descricao: (query) {{{tipo_ajuste_request_descricao_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET55(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, descricao: String?, completion: ((data: PageTipoAjusteResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET55WithRequestBuilder(sort: sort, page: page, limit: limit, id: id, descricao: descricao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{tipo_ajuste_resource_consultar}}}
     
     - GET /api/tipos-ajustes
     - {{{tipo_ajuste_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "transacoes" : [ {
      "id" : 123456789,
      "descricao" : "aeiou"
    } ],
    "id" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{tipo_ajuste_request_id_value}}} (optional)
     - parameter descricao: (query) {{{tipo_ajuste_request_descricao_value}}} (optional)

     - returns: RequestBuilder<PageTipoAjusteResponse> 
     */
    public class func listarUsingGET55WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, descricao: String?) -> RequestBuilder<PageTipoAjusteResponse> {
        let path = "/api/tipos-ajustes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "descricao": descricao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoAjusteResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{tipo_endereco_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{tipo_endereco_request_id_value}}} (optional)
     - parameter nome: (query) {{{tipo_endereco_request_nome_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET57(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, nome: String?, completion: ((data: PageTipoEnderecoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET57WithRequestBuilder(sort: sort, page: page, limit: limit, id: id, nome: nome).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{tipo_endereco_resource_listar}}}
     
     - GET /api/tipos-enderecos
     - {{{tipo_endereco_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nome" : "aeiou",
    "id" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{tipo_endereco_request_id_value}}} (optional)
     - parameter nome: (query) {{{tipo_endereco_request_nome_value}}} (optional)

     - returns: RequestBuilder<PageTipoEnderecoResponse> 
     */
    public class func listarUsingGET57WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, nome: String?) -> RequestBuilder<PageTipoEnderecoResponse> {
        let path = "/api/tipos-enderecos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "nome": nome
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoEnderecoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{tipo_telefone_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{tipo_telefone_request_id_value}}} (optional)
     - parameter nome: (query) {{{tipo_telefone_request_nome_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET59(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, nome: String?, completion: ((data: PageTipoTelefoneResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET59WithRequestBuilder(sort: sort, page: page, limit: limit, id: id, nome: nome).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{tipo_telefone_resource_listar}}}
     
     - GET /api/tipos-telefones
     - {{{tipo_telefone_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nome" : "aeiou",
    "id" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{tipo_telefone_request_id_value}}} (optional)
     - parameter nome: (query) {{{tipo_telefone_request_nome_value}}} (optional)

     - returns: RequestBuilder<PageTipoTelefoneResponse> 
     */
    public class func listarUsingGET59WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, nome: String?) -> RequestBuilder<PageTipoTelefoneResponse> {
        let path = "/api/tipos-telefones"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "nome": nome
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoTelefoneResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{vencimento_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter dataVencimento: (query) {{{controle_vencimento_request_data_vencimento_value}}} (optional)
     - parameter dataVencimentoFim: (query) {{{calendario_fatura_request_data_fim_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET66(sort sort: [String]?, page: Int?, limit: Int?, dataVencimento: String?, dataVencimentoFim: String?, completion: ((data: PageControleVencimentoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET66WithRequestBuilder(sort: sort, page: page, limit: limit, dataVencimento: dataVencimento, dataVencimentoFim: dataVencimentoFim).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{vencimento_resource_listar}}}
     
     - GET /api/vencimentos
     - {{{vencimento_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "dataPrevistaFaturamento" : "aeiou",
    "dataHoraRealizacaoCorte" : "aeiou",
    "dataVencimento" : "aeiou",
    "dataHoraRealizacaoFaturamento" : "aeiou",
    "dataRealVencimento" : "aeiou",
    "dataPrevistaCorte" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter dataVencimento: (query) {{{controle_vencimento_request_data_vencimento_value}}} (optional)
     - parameter dataVencimentoFim: (query) {{{calendario_fatura_request_data_fim_value}}} (optional)

     - returns: RequestBuilder<PageControleVencimentoResponse> 
     */
    public class func listarUsingGET66WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, dataVencimento: String?, dataVencimentoFim: String?) -> RequestBuilder<PageControleVencimentoResponse> {
        let path = "/api/vencimentos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "dataVencimento": dataVencimento,
            "dataVencimentoFim": dataVencimentoFim
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageControleVencimentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{atendimento_cliente_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idTipoAtendimento: (query) {{{atendimento_cliente_request_id_tipo_atendimento_value}}} (optional)
     - parameter idConta: (query) {{{atendimento_cliente_request_id_conta_value}}} (optional)
     - parameter nomeAtendente: (query) {{{atendimento_cliente_request_nome_atendente_value}}} (optional)
     - parameter dataAtendimento: (query) {{{atendimento_cliente_request_data_atendimento_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET8(sort sort: [String]?, page: Int?, limit: Int?, idTipoAtendimento: Int?, idConta: Int?, nomeAtendente: String?, dataAtendimento: String?, completion: ((data: PageAtendimentoClienteResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET8WithRequestBuilder(sort: sort, page: page, limit: limit, idTipoAtendimento: idTipoAtendimento, idConta: idConta, nomeAtendente: nomeAtendente, dataAtendimento: dataAtendimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{atendimento_cliente_resource_listar}}}
     
     - GET /api/atendimento-clientes
     - {{{atendimento_cliente_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "conteudoAtendimento" : "aeiou",
    "idConta" : 123456789,
    "descricaoTipoAtendimento" : "aeiou",
    "dataProcessamento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "dataAgendamento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "flagProcessamento" : 123,
    "dataHoraFimAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "detalhesAtendimento" : "aeiou",
    "idAtendimento" : 123456789,
    "dataAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "dataHoraInicioAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "nomeAtendente" : "aeiou",
    "nomeSistema" : "aeiou",
    "idTipoAtendimento" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idTipoAtendimento: (query) {{{atendimento_cliente_request_id_tipo_atendimento_value}}} (optional)
     - parameter idConta: (query) {{{atendimento_cliente_request_id_conta_value}}} (optional)
     - parameter nomeAtendente: (query) {{{atendimento_cliente_request_nome_atendente_value}}} (optional)
     - parameter dataAtendimento: (query) {{{atendimento_cliente_request_data_atendimento_value}}} (optional)

     - returns: RequestBuilder<PageAtendimentoClienteResponse> 
     */
    public class func listarUsingGET8WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idTipoAtendimento: Int?, idConta: Int?, nomeAtendente: String?, dataAtendimento: String?) -> RequestBuilder<PageAtendimentoClienteResponse> {
        let path = "/api/atendimento-clientes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idTipoAtendimento": idTipoAtendimento,
            "idConta": idConta,
            "nomeAtendente": nomeAtendente,
            "dataAtendimento": dataAtendimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageAtendimentoClienteResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{atendimento_cliente_resource_salvar}}}
     
     - parameter idConta: (query) {{{atendimento_cliente_persist_id_conta_value}}} (optional)
     - parameter conteudoAtendimento: (query) {{{atendimento_cliente_persist_conteudo_atendimento_value}}} (optional)
     - parameter detalhesAtendimento: (query) {{{atendimento_cliente_persist_detalhes_atendimento_value}}} (optional)
     - parameter nomeAtendente: (query) {{{atendimento_cliente_persist_nome_atendente_value}}} (optional)
     - parameter dataAtendimento: (query) {{{atendimento_cliente_persist_data_atendimento_value}}} (optional)
     - parameter dataAgendamento: (query) {{{atendimento_cliente_persist_data_agendamento_value}}} (optional)
     - parameter dataHoraInicioAtendimento: (query) {{{atendimento_cliente_persist_data_hora_inicio_atendimento_value}}} (optional)
     - parameter dataHoraFimAtendimento: (query) {{{atendimento_cliente_persist_data_hora_fim_atendimento_value}}} (optional)
     - parameter flagFilaFraude: (query) {{{atendimento_cliente_persist_flag_fila_fraude_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST2(idConta idConta: Int?, conteudoAtendimento: String?, detalhesAtendimento: String?, nomeAtendente: String?, dataAtendimento: String?, dataAgendamento: String?, dataHoraInicioAtendimento: String?, dataHoraFimAtendimento: String?, flagFilaFraude: Int?, completion: ((data: AtendimentoClienteResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST2WithRequestBuilder(idConta: idConta, conteudoAtendimento: conteudoAtendimento, detalhesAtendimento: detalhesAtendimento, nomeAtendente: nomeAtendente, dataAtendimento: dataAtendimento, dataAgendamento: dataAgendamento, dataHoraInicioAtendimento: dataHoraInicioAtendimento, dataHoraFimAtendimento: dataHoraFimAtendimento, flagFilaFraude: flagFilaFraude).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{atendimento_cliente_resource_salvar}}}
     
     - POST /api/atendimento-clientes
     - {{{atendimento_cliente_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "conteudoAtendimento" : "aeiou",
  "idConta" : 123456789,
  "descricaoTipoAtendimento" : "aeiou",
  "dataProcessamento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataAgendamento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "flagProcessamento" : 123,
  "dataHoraFimAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "detalhesAtendimento" : "aeiou",
  "idAtendimento" : 123456789,
  "dataAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataHoraInicioAtendimento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "nomeAtendente" : "aeiou",
  "nomeSistema" : "aeiou",
  "idTipoAtendimento" : 123456789
}}]
     
     - parameter idConta: (query) {{{atendimento_cliente_persist_id_conta_value}}} (optional)
     - parameter conteudoAtendimento: (query) {{{atendimento_cliente_persist_conteudo_atendimento_value}}} (optional)
     - parameter detalhesAtendimento: (query) {{{atendimento_cliente_persist_detalhes_atendimento_value}}} (optional)
     - parameter nomeAtendente: (query) {{{atendimento_cliente_persist_nome_atendente_value}}} (optional)
     - parameter dataAtendimento: (query) {{{atendimento_cliente_persist_data_atendimento_value}}} (optional)
     - parameter dataAgendamento: (query) {{{atendimento_cliente_persist_data_agendamento_value}}} (optional)
     - parameter dataHoraInicioAtendimento: (query) {{{atendimento_cliente_persist_data_hora_inicio_atendimento_value}}} (optional)
     - parameter dataHoraFimAtendimento: (query) {{{atendimento_cliente_persist_data_hora_fim_atendimento_value}}} (optional)
     - parameter flagFilaFraude: (query) {{{atendimento_cliente_persist_flag_fila_fraude_value}}} (optional)

     - returns: RequestBuilder<AtendimentoClienteResponse> 
     */
    public class func salvarUsingPOST2WithRequestBuilder(idConta idConta: Int?, conteudoAtendimento: String?, detalhesAtendimento: String?, nomeAtendente: String?, dataAtendimento: String?, dataAgendamento: String?, dataHoraInicioAtendimento: String?, dataHoraFimAtendimento: String?, flagFilaFraude: Int?) -> RequestBuilder<AtendimentoClienteResponse> {
        let path = "/api/atendimento-clientes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idConta": idConta,
            "conteudoAtendimento": conteudoAtendimento,
            "detalhesAtendimento": detalhesAtendimento,
            "nomeAtendente": nomeAtendente,
            "dataAtendimento": dataAtendimento,
            "dataAgendamento": dataAgendamento,
            "dataHoraInicioAtendimento": dataHoraInicioAtendimento,
            "dataHoraFimAtendimento": dataHoraFimAtendimento,
            "flagFilaFraude": flagFilaFraude
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AtendimentoClienteResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{campanha_resource_salvar}}}
     
     - parameter campanhaPersist: (body) campanhaPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST5(campanhaPersist campanhaPersist: CampanhaPersist, completion: ((data: CampanhaResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST5WithRequestBuilder(campanhaPersist: campanhaPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{campanha_resource_salvar}}}
     
     - POST /api/campanhas
     - {{{campanha_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "planosCampanhas" : [ {
    "parcelas" : 123,
    "taxa" : 1.3579000000000001069366817318950779736042022705078125,
    "usuario" : "aeiou",
    "id" : 123456789
  } ],
  "idTipoCampanha" : 123456789,
  "nome" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter campanhaPersist: (body) campanhaPersist 

     - returns: RequestBuilder<CampanhaResponse> 
     */
    public class func salvarUsingPOST5WithRequestBuilder(campanhaPersist campanhaPersist: CampanhaPersist) -> RequestBuilder<CampanhaResponse> {
        let path = "/api/campanhas"
        let URLString = PierAPI.basePath + path
        
        let parameters = campanhaPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<CampanhaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{configuracao_rotativo_resource_salvar}}}
     
     - parameter configuracaoRotativoPersist: (body) configuracaoRotativoPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST7(configuracaoRotativoPersist configuracaoRotativoPersist: ConfiguracaoRotativoPersist, completion: ((data: ConfiguracaoRotativoDetalheResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST7WithRequestBuilder(configuracaoRotativoPersist: configuracaoRotativoPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{configuracao_rotativo_resource_salvar}}}
     
     - POST /api/configuracoes-rotativos
     - {{{configuracao_rotativo_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "aceitaPagamentoMaiorQueEntrada" : false,
  "recalculaParcelamentoParaEntradaMaior" : false,
  "recalculaParcelamento" : false,
  "percentualLimitarValorMinimoParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "compoeOfertaValorNaoFinanciavel" : false,
  "parcelarApenasMinimo" : false,
  "valorMinimoParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "idProduto" : 123456789,
  "compoeOfertaValorNovosLancamentos" : false,
  "idRegraCampanha" : 123456789,
  "compoeOfertaValorRotativo" : false,
  "minimoParcelasRecalculoParcelamento" : false,
  "usuario" : "aeiou",
  "id" : 123456789,
  "antecipaParcelamentosAbertos" : false,
  "numeroMinimoOfertas" : false
}}]
     
     - parameter configuracaoRotativoPersist: (body) configuracaoRotativoPersist 

     - returns: RequestBuilder<ConfiguracaoRotativoDetalheResponse> 
     */
    public class func salvarUsingPOST7WithRequestBuilder(configuracaoRotativoPersist configuracaoRotativoPersist: ConfiguracaoRotativoPersist) -> RequestBuilder<ConfiguracaoRotativoDetalheResponse> {
        let path = "/api/configuracoes-rotativos"
        let URLString = PierAPI.basePath + path
        
        let parameters = configuracaoRotativoPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ConfiguracaoRotativoDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
