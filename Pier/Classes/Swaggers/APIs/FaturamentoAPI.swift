//
// FaturamentoAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class FaturamentoAPI: APIBase {
    /**
     
     Alterar Faturamento
     
     - parameter id: (path) Id 
     - parameter tipoFaturamentoPersist: (body) tipoFaturamentoPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarTipoFaturamentoUsingPUT(id id: Int, tipoFaturamentoPersist: TipoFaturamentoPersist, completion: ((data: TipoFaturamentoResponse?, error: ErrorType?) -> Void)) {
        alterarTipoFaturamentoUsingPUTWithRequestBuilder(id: id, tipoFaturamentoPersist: tipoFaturamentoPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Alterar Faturamento
     
     - PUT /api/tipos-faturamento/{id}
     - Alterar as configura\u00C3\u00A7\u00C3\u00B5es de um determinado tipo de faturamento
     - examples: [{contentType=application/json, example={
  "flagApenasDemonstrativo" : false,
  "id" : 123456789,
  "idConvenio" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) Id 
     - parameter tipoFaturamentoPersist: (body) tipoFaturamentoPersist 

     - returns: RequestBuilder<TipoFaturamentoResponse> 
     */
    public class func alterarTipoFaturamentoUsingPUTWithRequestBuilder(id id: Int, tipoFaturamentoPersist: TipoFaturamentoPersist) -> RequestBuilder<TipoFaturamentoResponse> {
        var path = "/api/tipos-faturamento/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = tipoFaturamentoPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TipoFaturamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Adiciona uma nova configura\u00C3\u00A7\u00C3\u00A3o de faturamento para uma conta
     
     - parameter tipoFaturamentoPorContaPersist: (body) tipoFaturamentoPorContaPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarFaturamentoPorContaUsingPOST(tipoFaturamentoPorContaPersist tipoFaturamentoPorContaPersist: TipoFaturamentoPorContaPersist, completion: ((data: TipoFaturamentoPorContaResponse?, error: ErrorType?) -> Void)) {
        cadastrarFaturamentoPorContaUsingPOSTWithRequestBuilder(tipoFaturamentoPorContaPersist: tipoFaturamentoPorContaPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Adiciona uma nova configura\u00C3\u00A7\u00C3\u00A3o de faturamento para uma conta
     
     - POST /api/tipos-faturamento-conta
     - Este m\u00C3\u00A9todo permite adicionar uma nova configura\u00C3\u00A7\u00C3\u00A3o de tipo de faturamento para um conta espec\u00C3\u00ADfica.
     - examples: [{contentType=application/json, example={
  "idConta" : 123456789,
  "dataHoraCancelamento" : "aeiou",
  "modificadoPor" : "aeiou",
  "id" : 123456789,
  "dataHoraInclusao" : "aeiou",
  "idTipoFaturamento" : 123456789,
  "status" : false
}}]
     
     - parameter tipoFaturamentoPorContaPersist: (body) tipoFaturamentoPorContaPersist 

     - returns: RequestBuilder<TipoFaturamentoPorContaResponse> 
     */
    public class func cadastrarFaturamentoPorContaUsingPOSTWithRequestBuilder(tipoFaturamentoPorContaPersist tipoFaturamentoPorContaPersist: TipoFaturamentoPorContaPersist) -> RequestBuilder<TipoFaturamentoPorContaResponse> {
        let path = "/api/tipos-faturamento-conta"
        let URLString = PierAPI.basePath + path
        
        let parameters = tipoFaturamentoPorContaPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TipoFaturamentoPorContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Adiciona um novo faturamento
     
     - parameter tipoFaturamentoPersist: (body) tipoFaturamentoPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarTipoFaturamentoUsingPOST(tipoFaturamentoPersist tipoFaturamentoPersist: TipoFaturamentoPersist, completion: ((data: TipoFaturamentoResponse?, error: ErrorType?) -> Void)) {
        cadastrarTipoFaturamentoUsingPOSTWithRequestBuilder(tipoFaturamentoPersist: tipoFaturamentoPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Adiciona um novo faturamento
     
     - POST /api/tipos-faturamento
     - Adiciona uma nova configura\u00C3\u00A7\u00C3\u00A3o de tipo de faturamento
     - examples: [{contentType=application/json, example={
  "flagApenasDemonstrativo" : false,
  "id" : 123456789,
  "idConvenio" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter tipoFaturamentoPersist: (body) tipoFaturamentoPersist 

     - returns: RequestBuilder<TipoFaturamentoResponse> 
     */
    public class func cadastrarTipoFaturamentoUsingPOSTWithRequestBuilder(tipoFaturamentoPersist tipoFaturamentoPersist: TipoFaturamentoPersist) -> RequestBuilder<TipoFaturamentoResponse> {
        let path = "/api/tipos-faturamento"
        let URLString = PierAPI.basePath + path
        
        let parameters = tipoFaturamentoPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TipoFaturamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Consultar Faturamento por id
     
     - parameter id: (path) Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarTipoFaturamentoUsingGET(id id: Int, completion: ((data: TipoFaturamentoResponse?, error: ErrorType?) -> Void)) {
        consultarTipoFaturamentoUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consultar Faturamento por id
     
     - GET /api/tipos-faturamento/{id}
     - Consulta os detalhes de uma determinada Faturamento
     - examples: [{contentType=application/json, example={
  "flagApenasDemonstrativo" : false,
  "id" : 123456789,
  "idConvenio" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) Id 

     - returns: RequestBuilder<TipoFaturamentoResponse> 
     */
    public class func consultarTipoFaturamentoUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<TipoFaturamentoResponse> {
        var path = "/api/tipos-faturamento/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TipoFaturamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Desativar uma configura\u00C3\u00A7\u00C3\u00A3o de tipo de faturamento por conta atrav\u00C3\u00A9s do id
     
     - parameter id: (path) Id 
     - parameter modificadoPor: (body) modificadoPor 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desativarFaturamentoPorContaUsingPOST(id id: Int, modificadoPor: String, completion: ((data: TipoFaturamentoPorContaResponse?, error: ErrorType?) -> Void)) {
        desativarFaturamentoPorContaUsingPOSTWithRequestBuilder(id: id, modificadoPor: modificadoPor).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Desativar uma configura\u00C3\u00A7\u00C3\u00A3o de tipo de faturamento por conta atrav\u00C3\u00A9s do id
     
     - POST /api/tipos-faturamento-conta/{id}/desativar
     - Desativa uma configura\u00C3\u00A7\u00C3\u00A3o de tipo de faturamento de uma determinada conta.
     - examples: [{contentType=application/json, example={
  "idConta" : 123456789,
  "dataHoraCancelamento" : "aeiou",
  "modificadoPor" : "aeiou",
  "id" : 123456789,
  "dataHoraInclusao" : "aeiou",
  "idTipoFaturamento" : 123456789,
  "status" : false
}}]
     
     - parameter id: (path) Id 
     - parameter modificadoPor: (body) modificadoPor 

     - returns: RequestBuilder<TipoFaturamentoPorContaResponse> 
     */
    public class func desativarFaturamentoPorContaUsingPOSTWithRequestBuilder(id id: Int, modificadoPor: String) -> RequestBuilder<TipoFaturamentoPorContaResponse> {
        var path = "/api/tipos-faturamento-conta/{id}/desativar"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = modificadoPor.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TipoFaturamentoPorContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Desativar uma configura\u00C3\u00A7\u00C3\u00A3o de tipo de faturamento atrav\u00C3\u00A9s do id
     
     - parameter id: (path) Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desativarTipoFaturamentoUsingPOST(id id: Int, completion: ((data: TipoFaturamentoResponse?, error: ErrorType?) -> Void)) {
        desativarTipoFaturamentoUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Desativar uma configura\u00C3\u00A7\u00C3\u00A3o de tipo de faturamento atrav\u00C3\u00A9s do id
     
     - POST /api/tipos-faturamento/{id}/desativar
     - Desativa uma configura\u00C3\u00A7\u00C3\u00A3o de tipo de faturamento.
     - examples: [{contentType=application/json, example={
  "flagApenasDemonstrativo" : false,
  "id" : 123456789,
  "idConvenio" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) Id 

     - returns: RequestBuilder<TipoFaturamentoResponse> 
     */
    public class func desativarTipoFaturamentoUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<TipoFaturamentoResponse> {
        var path = "/api/tipos-faturamento/{id}/desativar"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TipoFaturamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Lista as configura\u00C3\u00A7\u00C3\u00B5es de tipos de faturamento por conta
     
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idTipoFaturamentoPorConta: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo de faturamento por conta (id). (optional)
     - parameter status: (query) Representa se a configura\u00C3\u00A7\u00C3\u00A3o est\u00C3\u00A1 ativada ou desativada para a conta. (optional)
     - parameter idConta: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo de faturamento por conta (id). (optional)
     - parameter idTipoFaturamento: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo de faturamento relacionada (id). (optional)
     - parameter dataHoraInclusao: (query) Data da inclus\u00C3\u00A3o da configura\u00C3\u00A7\u00C3\u00A3o, deve ser informada no formato yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;. (optional)
     - parameter dataHoraCancelamento: (query) Data do cancelamento da configura\u00C3\u00A7\u00C3\u00A3o, deve ser informada no formato yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;. (optional)
     - parameter modificadoPor: (query) Identificador do respons\u00C3\u00A1vel pela modifica\u00C3\u00A7\u00C3\u00A3o do registro. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarFaturamentoPorContaUsingGET(sort sort: [String]?, page: Int?, limit: Int?, idTipoFaturamentoPorConta: Int?, status: Bool?, idConta: Int?, idTipoFaturamento: Int?, dataHoraInclusao: String?, dataHoraCancelamento: String?, modificadoPor: String?, completion: ((data: PageTipoFaturamentoPorContaResponse?, error: ErrorType?) -> Void)) {
        listarFaturamentoPorContaUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, idTipoFaturamentoPorConta: idTipoFaturamentoPorConta, status: status, idConta: idConta, idTipoFaturamento: idTipoFaturamento, dataHoraInclusao: dataHoraInclusao, dataHoraCancelamento: dataHoraCancelamento, modificadoPor: modificadoPor).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista as configura\u00C3\u00A7\u00C3\u00B5es de tipos de faturamento por conta
     
     - GET /api/tipos-faturamento-conta
     - Este m\u00C3\u00A9todo permite listar as configura\u00C3\u00A7\u00C3\u00B5es de tipos de faturamento registrados a uma conta.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idConta" : 123456789,
    "dataHoraCancelamento" : "aeiou",
    "modificadoPor" : "aeiou",
    "id" : 123456789,
    "dataHoraInclusao" : "aeiou",
    "idTipoFaturamento" : 123456789,
    "status" : false
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idTipoFaturamentoPorConta: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo de faturamento por conta (id). (optional)
     - parameter status: (query) Representa se a configura\u00C3\u00A7\u00C3\u00A3o est\u00C3\u00A1 ativada ou desativada para a conta. (optional)
     - parameter idConta: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo de faturamento por conta (id). (optional)
     - parameter idTipoFaturamento: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo de faturamento relacionada (id). (optional)
     - parameter dataHoraInclusao: (query) Data da inclus\u00C3\u00A3o da configura\u00C3\u00A7\u00C3\u00A3o, deve ser informada no formato yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;. (optional)
     - parameter dataHoraCancelamento: (query) Data do cancelamento da configura\u00C3\u00A7\u00C3\u00A3o, deve ser informada no formato yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;. (optional)
     - parameter modificadoPor: (query) Identificador do respons\u00C3\u00A1vel pela modifica\u00C3\u00A7\u00C3\u00A3o do registro. (optional)

     - returns: RequestBuilder<PageTipoFaturamentoPorContaResponse> 
     */
    public class func listarFaturamentoPorContaUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idTipoFaturamentoPorConta: Int?, status: Bool?, idConta: Int?, idTipoFaturamento: Int?, dataHoraInclusao: String?, dataHoraCancelamento: String?, modificadoPor: String?) -> RequestBuilder<PageTipoFaturamentoPorContaResponse> {
        let path = "/api/tipos-faturamento-conta"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idTipoFaturamentoPorConta": idTipoFaturamentoPorConta,
            "status": status,
            "idConta": idConta,
            "idTipoFaturamento": idTipoFaturamento,
            "dataHoraInclusao": dataHoraInclusao,
            "dataHoraCancelamento": dataHoraCancelamento,
            "modificadoPor": modificadoPor
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoFaturamentoPorContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista Tipos de Faturamento
     
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idTipoFaturamento: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo de faturamento (id). (optional)
     - parameter descricao: (query) Descri\u00C3\u00A7\u00C3\u00A3o do tipo de faturamento. (optional)
     - parameter flagApenasDemonstrativo: (query) Flag que representa que o faturamento ser\u00C3\u00A1 apenas demonstrativo. (optional)
     - parameter idConvenio: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do conv\u00C3\u00AAnio relacionado ao tipo de faturamento. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarTipoFaturamentoUsingGET(sort sort: [String]?, page: Int?, limit: Int?, idTipoFaturamento: Int?, descricao: String?, flagApenasDemonstrativo: Bool?, idConvenio: Int?, completion: ((data: PageTipoFaturamentoResponse?, error: ErrorType?) -> Void)) {
        listarTipoFaturamentoUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, idTipoFaturamento: idTipoFaturamento, descricao: descricao, flagApenasDemonstrativo: flagApenasDemonstrativo, idConvenio: idConvenio).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista Tipos de Faturamento
     
     - GET /api/tipos-faturamento
     - Lista todas as configura\u00C3\u00A7\u00C3\u00B5es dos tipos de faturamento
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "flagApenasDemonstrativo" : false,
    "id" : 123456789,
    "idConvenio" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idTipoFaturamento: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo de faturamento (id). (optional)
     - parameter descricao: (query) Descri\u00C3\u00A7\u00C3\u00A3o do tipo de faturamento. (optional)
     - parameter flagApenasDemonstrativo: (query) Flag que representa que o faturamento ser\u00C3\u00A1 apenas demonstrativo. (optional)
     - parameter idConvenio: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do conv\u00C3\u00AAnio relacionado ao tipo de faturamento. (optional)

     - returns: RequestBuilder<PageTipoFaturamentoResponse> 
     */
    public class func listarTipoFaturamentoUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idTipoFaturamento: Int?, descricao: String?, flagApenasDemonstrativo: Bool?, idConvenio: Int?) -> RequestBuilder<PageTipoFaturamentoResponse> {
        let path = "/api/tipos-faturamento"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idTipoFaturamento": idTipoFaturamento,
            "descricao": descricao,
            "flagApenasDemonstrativo": flagApenasDemonstrativo,
            "idConvenio": idConvenio
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoFaturamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
