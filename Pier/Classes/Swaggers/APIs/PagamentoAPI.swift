//
// PagamentoAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class PagamentoAPI: APIBase {
    /**
     
     Lista hist\u00C3\u00B3rico de pagamentos
     
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idConta: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta (optional)
     - parameter idPagamento: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Pagamento (optional)
     - parameter idEstabelecimento: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento onde o Pagamento foi realizado, quando este for o local de pagamento (optional)
     - parameter idBanco: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Institui\u00C3\u00A7\u00C3\u00A3o Banc\u00C3\u00A1ria onde o Pagamento foi realizado, quando este for o local de pagamento (optional)
     - parameter idCartao: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Cart\u00C3\u00A3o (optional)
     - parameter dataHoraPagamento: (query) Data e Hora da realiza\u00C3\u00A7\u00C3\u00A3o do Pagamento. Quando feito em Institui\u00C3\u00A7\u00C3\u00A3o Banc\u00C3\u00A1ria, o hor\u00C3\u00A1rio do pagamento \u00C3\u00A9 exibido com valor zero (optional)
     - parameter status: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Status do Pagamento (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarPagamentosUsingGET1(sort sort: [String]?, page: Int?, limit: Int?, idConta: Int?, idPagamento: Int?, idEstabelecimento: Int?, idBanco: Int?, idCartao: Int?, dataHoraPagamento: String?, status: Int?, completion: ((data: PageHistoricoPagamentoResponse?, error: ErrorType?) -> Void)) {
        listarPagamentosUsingGET1WithRequestBuilder(sort: sort, page: page, limit: limit, idConta: idConta, idPagamento: idPagamento, idEstabelecimento: idEstabelecimento, idBanco: idBanco, idCartao: idCartao, dataHoraPagamento: dataHoraPagamento, status: status).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista hist\u00C3\u00B3rico de pagamentos
     
     - GET /api/pagamentos
     - Este recurso permite listar todos os Pagamentos realizados independente do seu Status de Processamento.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idPagamento" : 123456789,
    "idEstabelecimento" : 123456789,
    "idBanco" : 123456789,
    "idCartao" : 123456789,
    "idConta" : 123456789,
    "dataHoraPagamento" : "aeiou",
    "dataHoraEntradaPagamento" : "aeiou",
    "valorPagamento" : 1.3579000000000001069366817318950779736042022705078125,
    "dataVencimentoParcelaAcordo" : "aeiou",
    "status" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idConta: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta (optional)
     - parameter idPagamento: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Pagamento (optional)
     - parameter idEstabelecimento: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento onde o Pagamento foi realizado, quando este for o local de pagamento (optional)
     - parameter idBanco: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Institui\u00C3\u00A7\u00C3\u00A3o Banc\u00C3\u00A1ria onde o Pagamento foi realizado, quando este for o local de pagamento (optional)
     - parameter idCartao: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Cart\u00C3\u00A3o (optional)
     - parameter dataHoraPagamento: (query) Data e Hora da realiza\u00C3\u00A7\u00C3\u00A3o do Pagamento. Quando feito em Institui\u00C3\u00A7\u00C3\u00A3o Banc\u00C3\u00A1ria, o hor\u00C3\u00A1rio do pagamento \u00C3\u00A9 exibido com valor zero (optional)
     - parameter status: (query) C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Status do Pagamento (optional)

     - returns: RequestBuilder<PageHistoricoPagamentoResponse> 
     */
    public class func listarPagamentosUsingGET1WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idConta: Int?, idPagamento: Int?, idEstabelecimento: Int?, idBanco: Int?, idCartao: Int?, dataHoraPagamento: String?, status: Int?) -> RequestBuilder<PageHistoricoPagamentoResponse> {
        let path = "/api/pagamentos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idConta": idConta,
            "idPagamento": idPagamento,
            "idEstabelecimento": idEstabelecimento,
            "idBanco": idBanco,
            "idCartao": idCartao,
            "dataHoraPagamento": dataHoraPagamento,
            "status": status
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageHistoricoPagamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
