//
// GlobaltagestabelecimentoAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltagestabelecimentoAPI: APIBase {
    /**
     
     {{{origem_comercial_resource_alterar_origem_comercial}}}
     
     - parameter id: (path) {{{origem_comercial_resource_alterar_origem_comercial_param_id}}} 
     - parameter origemComercialUpdate: (body) origemComercialUpdate 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarOrigemComercialUsingPUT(id id: Int, origemComercialUpdate: OrigemComercialUpdate, completion: ((data: OrigemComercialResponse?, error: ErrorType?) -> Void)) {
        alterarOrigemComercialUsingPUTWithRequestBuilder(id: id, origemComercialUpdate: origemComercialUpdate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{origem_comercial_resource_alterar_origem_comercial}}}
     
     - PUT /api/origens-comerciais/{id}
     - {{{origem_comercial_resource_alterar_origem_comercial_notes}}}
     - examples: [{contentType=application/json, example={
  "flagConcedeLimiteProvisorio" : true,
  "idGrupoOrigemComercial" : 1,
  "tipoPessoa" : "PESSOA_FISICA",
  "produtosOrigem" : [ {
    "idProduto" : 123456789
  } ],
  "flagDigitalizarDoc" : true,
  "nomeTipoOrigemComercial" : "NOME DO TIPO DE ORIGEM COMERCIAL",
  "flagAprovacaoImediata" : true,
  "flagOrigemExterna" : true,
  "senha" : "21031408",
  "flagPreAprovado" : true,
  "nomeFantasiaPlastico" : "COMÉRCIO LTDA",
  "flagCartaoProvisorio" : true,
  "id" : 10,
  "flagConsultaPrevia" : true,
  "nomeGrupoOrigemComercial" : "NOME DO GRUPO DA ORIGEM COMERCIAL",
  "idEstabelecimento" : 1,
  "flagCartaoDefinitivo" : true,
  "nome" : "COMÉRCIO LTDA",
  "descricao" : "DESCRIÇÃO DA ORIGEM COMERCIAL",
  "idTipoOrigemComercial" : 1,
  "flagEmbossingLoja" : true,
  "usuario" : "usuario01",
  "flagCreditoFaturamento" : true,
  "flagModificado" : true,
  "flagEnviaFaturaUsuario" : true,
  "status" : 1
}}]
     
     - parameter id: (path) {{{origem_comercial_resource_alterar_origem_comercial_param_id}}} 
     - parameter origemComercialUpdate: (body) origemComercialUpdate 

     - returns: RequestBuilder<OrigemComercialResponse> 
     */
    public class func alterarOrigemComercialUsingPUTWithRequestBuilder(id id: Int, origemComercialUpdate: OrigemComercialUpdate) -> RequestBuilder<OrigemComercialResponse> {
        var path = "/api/origens-comerciais/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = origemComercialUpdate.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<OrigemComercialResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{maquineta_resource_alterar}}}
     
     - parameter id: (path) {{{maquineta_resource_alterar_param_id}}} 
     - parameter maquinetaUpdate: (body) maquinetaUpdate 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT10(id id: Int, maquinetaUpdate: MaquinetaUpdate, completion: ((data: MaquinetaResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT10WithRequestBuilder(id: id, maquinetaUpdate: maquinetaUpdate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{maquineta_resource_alterar}}}
     
     - PUT /api/maquinetas/{id}
     - {{{maquineta_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "dataHoraCadastramento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idEstabelecimento" : 123456789,
  "usuarioApl" : "aeiou",
  "valor" : 1.3579000000000001069366817318950779736042022705078125,
  "idTipoMaquineta" : 123456789,
  "id" : 123456789,
  "terminal" : "aeiou",
  "dataHoraImplantacao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
}}]
     
     - parameter id: (path) {{{maquineta_resource_alterar_param_id}}} 
     - parameter maquinetaUpdate: (body) maquinetaUpdate 

     - returns: RequestBuilder<MaquinetaResponse> 
     */
    public class func alterarUsingPUT10WithRequestBuilder(id id: Int, maquinetaUpdate: MaquinetaUpdate) -> RequestBuilder<MaquinetaResponse> {
        var path = "/api/maquinetas/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = maquinetaUpdate.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<MaquinetaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{operacao_credor_resource_alterar}}}
     
     - parameter id: (path) {{{operacao_credor_resource_alterar_param_id}}} 
     - parameter operacaoCredorUpdate: (body) operacaoCredorUpdate 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT11(id id: Int, operacaoCredorUpdate: OperacaoCredorUpdate, completion: ((data: OperacaoCredorResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT11WithRequestBuilder(id: id, operacaoCredorUpdate: operacaoCredorUpdate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{operacao_credor_resource_alterar}}}
     
     - PUT /api/regras-operacoes-estabelecimentos/{id}
     - {{{operacao_credor_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "diasAfastamento" : 29,
  "fatorMultiplicador" : "AGENDA",
  "idOperacao" : 2,
  "vencimentoPrimeiraParcela" : 29,
  "planoMaximo" : 5,
  "planoMinimo" : 1,
  "idProduto" : 1,
  "idGrupoEconomico" : 1,
  "remuneracaoPercentual" : 0.04,
  "flagTaxaFixada" : true,
  "remuneracaoFixa" : 0.0,
  "periodicidade" : "MENSAL",
  "id" : 2
}}]
     
     - parameter id: (path) {{{operacao_credor_resource_alterar_param_id}}} 
     - parameter operacaoCredorUpdate: (body) operacaoCredorUpdate 

     - returns: RequestBuilder<OperacaoCredorResponse> 
     */
    public class func alterarUsingPUT11WithRequestBuilder(id id: Int, operacaoCredorUpdate: OperacaoCredorUpdate) -> RequestBuilder<OperacaoCredorResponse> {
        var path = "/api/regras-operacoes-estabelecimentos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = operacaoCredorUpdate.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<OperacaoCredorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{telefone_estabelecimento_resource_alterar}}}
     
     - parameter id: (path) {{{telefone_estabelecimento_resource_alterar_param_id}}} 
     - parameter telefoneEstabelecimentoUpdate: (body) telefoneEstabelecimentoUpdate 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT17(id id: Int, telefoneEstabelecimentoUpdate: TelefoneEstabelecimentoUpdate, completion: ((data: TelefoneEstabelecimentoResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT17WithRequestBuilder(id: id, telefoneEstabelecimentoUpdate: telefoneEstabelecimentoUpdate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{telefone_estabelecimento_resource_alterar}}}
     
     - PUT /api/telefones-estabelecimentos/{id}
     - {{{telefone_estabelecimento_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "idEstabelecimento" : 123456789,
  "telefone" : "aeiou",
  "ddd" : "aeiou",
  "id" : 123456789,
  "ramal" : "aeiou"
}}]
     
     - parameter id: (path) {{{telefone_estabelecimento_resource_alterar_param_id}}} 
     - parameter telefoneEstabelecimentoUpdate: (body) telefoneEstabelecimentoUpdate 

     - returns: RequestBuilder<TelefoneEstabelecimentoResponse> 
     */
    public class func alterarUsingPUT17WithRequestBuilder(id id: Int, telefoneEstabelecimentoUpdate: TelefoneEstabelecimentoUpdate) -> RequestBuilder<TelefoneEstabelecimentoResponse> {
        var path = "/api/telefones-estabelecimentos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = telefoneEstabelecimentoUpdate.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TelefoneEstabelecimentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{terminal_resource_alterar}}}
     
     - parameter id: (path) {{{terminal_resource_alterar_param_id}}} 
     - parameter terminalUpdate: (body) terminalUpdate 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT19(id id: Int, terminalUpdate: TerminalUpdateValue, completion: ((data: TerminalResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT19WithRequestBuilder(id: id, terminalUpdate: terminalUpdate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{terminal_resource_alterar}}}
     
     - PUT /api/terminais/{id}
     - {{{terminal_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "flagTerminalVirtual" : false,
  "idEstabelecimento" : 123456789,
  "flagConsultaExtrato" : false,
  "id" : 123456789,
  "terminal" : "aeiou",
  "numeroEstabelecimento" : 123456789
}}]
     
     - parameter id: (path) {{{terminal_resource_alterar_param_id}}} 
     - parameter terminalUpdate: (body) terminalUpdate 

     - returns: RequestBuilder<TerminalResponse> 
     */
    public class func alterarUsingPUT19WithRequestBuilder(id id: Int, terminalUpdate: TerminalUpdateValue) -> RequestBuilder<TerminalResponse> {
        var path = "/api/terminais/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = terminalUpdate.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TerminalResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{estabelecimento_resource_alterar}}}
     
     - parameter id: (path) {{{estabelecimento_resource_alterar_param_id_estabelecimento}}} 
     - parameter update: (body) update 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT6(id id: Int, update: EstabelecimentoUpdate, completion: ((data: EstabelecimentoResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT6WithRequestBuilder(id: id, update: update).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{estabelecimento_resource_alterar}}}
     
     - PUT /api/estabelecimentos/{id}
     - {{{estabelecimento_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "uf2" : "aeiou",
  "obs" : "aeiou",
  "cidade" : "aeiou",
  "idPais" : 123456789,
  "numeroReceitaFederal" : 123456789,
  "flagMatriz" : 123,
  "bairro2" : "aeiou",
  "flagArquivoSecrFazenda" : 123,
  "cep2" : "aeiou",
  "mcc" : 123456789,
  "cep" : "aeiou",
  "uf" : "aeiou",
  "idTipoEstabelecimento" : 123456789,
  "nomeFantasia" : "aeiou",
  "complemento" : "aeiou",
  "flagCartaoDigitado" : 123,
  "correspondencia" : 123,
  "id" : 123456789,
  "contato" : "aeiou",
  "consulta" : {
    "tipoEntidade" : "aeiou",
    "dataHoraConsulta" : "2018-03-02T14:02:33.824Z",
    "status" : "aeiou"
  },
  "email" : "aeiou",
  "complemento2" : "aeiou",
  "nomeLogradouro" : "aeiou",
  "bairro" : "aeiou",
  "idMoeda" : 123456789,
  "cargoContato" : "aeiou",
  "dataCadastramento" : "aeiou",
  "nome" : "aeiou",
  "cidade2" : "aeiou",
  "numeroEndereco2" : "aeiou",
  "terminal" : "aeiou",
  "descricao" : "aeiou",
  "numeroEndereco" : "aeiou",
  "associadoSPCBrasil" : 123,
  "idGrupoEconomico" : 123456789,
  "nomeLogradouro2" : "aeiou",
  "consulta3" : "",
  "inativo" : 123,
  "consulta2" : "",
  "usuario" : "aeiou",
  "numeroEstabelecimento" : "aeiou",
  "tipoPagamento" : "aeiou"
}}]
     
     - parameter id: (path) {{{estabelecimento_resource_alterar_param_id_estabelecimento}}} 
     - parameter update: (body) update 

     - returns: RequestBuilder<EstabelecimentoResponse> 
     */
    public class func alterarUsingPUT6WithRequestBuilder(id id: Int, update: EstabelecimentoUpdate) -> RequestBuilder<EstabelecimentoResponse> {
        var path = "/api/estabelecimentos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = update.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<EstabelecimentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{grupo_economico_resource_alterar}}}
     
     - parameter id: (path) {{{grupo_economico_resource_alterar_param_id}}} 
     - parameter grupoEconomicoDTO: (body) grupoEconomicoDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarUsingPUT8(id id: Int, grupoEconomicoDTO: GrupoEconomicoDTO, completion: ((data: GrupoEconomicoResponse?, error: ErrorType?) -> Void)) {
        alterarUsingPUT8WithRequestBuilder(id: id, grupoEconomicoDTO: grupoEconomicoDTO).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{grupo_economico_resource_alterar}}}
     
     - PUT /api/grupos-economicos/{id}
     - {{{grupo_economico_resource_alterar_notes}}}
     - examples: [{contentType=application/json, example={
  "digitoAgencia" : "aeiou",
  "numeroReceitaFederal" : "aeiou",
  "percentualRAV" : 0.015,
  "pagamentoDecendialTerceiro" : 25,
  "pagamentoQuinzenalPrimeiro" : 5,
  "pagamentoDecendialSegundo" : 15,
  "agencia" : 123,
  "nomeCredor" : "Exemplo",
  "taxaBanco" : 0.1,
  "taxaAdm" : 0.1,
  "pagamentoMensal" : 10,
  "id" : 123456789,
  "contato" : "aeiou",
  "digitoContaCorrente" : "aeiou",
  "pagamentoQuinzenalSegundo" : 20,
  "banco" : 123,
  "recebeRAV" : "NAO_TEM_PERMISSAO_RAV",
  "percentualMultiplica" : 0.1,
  "idCredorRAV" : 1,
  "pagamentoDecendialPrimeiro" : 5,
  "inscricaoEstadual" : "aeiou",
  "contaCorrente" : "aeiou",
  "usuario" : "aeiou",
  "periodicidade" : "DIARIO",
  "razaoSocial" : "aeiou",
  "limiteRAV" : 0.015,
  "pagamentoSemanal" : "SEGUNDA"
}}]
     
     - parameter id: (path) {{{grupo_economico_resource_alterar_param_id}}} 
     - parameter grupoEconomicoDTO: (body) grupoEconomicoDTO 

     - returns: RequestBuilder<GrupoEconomicoResponse> 
     */
    public class func alterarUsingPUT8WithRequestBuilder(id id: Int, grupoEconomicoDTO: GrupoEconomicoDTO) -> RequestBuilder<GrupoEconomicoResponse> {
        var path = "/api/grupos-economicos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = grupoEconomicoDTO.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<GrupoEconomicoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{origem_comercial_resource_cadastrar_origem_comercial}}}
     
     - parameter origemComercialPersist: (body) origemComercialPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarOrigemComercialUsingPOST(origemComercialPersist origemComercialPersist: OrigemComercialPersist, completion: ((data: OrigemComercialResponse?, error: ErrorType?) -> Void)) {
        cadastrarOrigemComercialUsingPOSTWithRequestBuilder(origemComercialPersist: origemComercialPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{origem_comercial_resource_cadastrar_origem_comercial}}}
     
     - POST /api/origens-comerciais
     - {{{origem_comercial_resource_cadastrar_origem_comercial_notes}}}
     - examples: [{contentType=application/json, example={
  "flagConcedeLimiteProvisorio" : true,
  "idGrupoOrigemComercial" : 1,
  "tipoPessoa" : "PESSOA_FISICA",
  "produtosOrigem" : [ {
    "idProduto" : 123456789
  } ],
  "flagDigitalizarDoc" : true,
  "nomeTipoOrigemComercial" : "NOME DO TIPO DE ORIGEM COMERCIAL",
  "flagAprovacaoImediata" : true,
  "flagOrigemExterna" : true,
  "senha" : "21031408",
  "flagPreAprovado" : true,
  "nomeFantasiaPlastico" : "COMÉRCIO LTDA",
  "flagCartaoProvisorio" : true,
  "id" : 10,
  "flagConsultaPrevia" : true,
  "nomeGrupoOrigemComercial" : "NOME DO GRUPO DA ORIGEM COMERCIAL",
  "idEstabelecimento" : 1,
  "flagCartaoDefinitivo" : true,
  "nome" : "COMÉRCIO LTDA",
  "descricao" : "DESCRIÇÃO DA ORIGEM COMERCIAL",
  "idTipoOrigemComercial" : 1,
  "flagEmbossingLoja" : true,
  "usuario" : "usuario01",
  "flagCreditoFaturamento" : true,
  "flagModificado" : true,
  "flagEnviaFaturaUsuario" : true,
  "status" : 1
}}]
     
     - parameter origemComercialPersist: (body) origemComercialPersist 

     - returns: RequestBuilder<OrigemComercialResponse> 
     */
    public class func cadastrarOrigemComercialUsingPOSTWithRequestBuilder(origemComercialPersist origemComercialPersist: OrigemComercialPersist) -> RequestBuilder<OrigemComercialResponse> {
        let path = "/api/origens-comerciais"
        let URLString = PierAPI.basePath + path
        
        let parameters = origemComercialPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<OrigemComercialResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{estabelecimento_resource_cadastrar}}}
     
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarUsingPOST3(persist persist: EstabelecimentoPersist, completion: ((data: EstabelecimentoResponse?, error: ErrorType?) -> Void)) {
        cadastrarUsingPOST3WithRequestBuilder(persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{estabelecimento_resource_cadastrar}}}
     
     - POST /api/estabelecimentos
     - {{{estabelecimento_resource_cadastrar_notes}}}
     - examples: [{contentType=application/json, example={
  "uf2" : "aeiou",
  "obs" : "aeiou",
  "cidade" : "aeiou",
  "idPais" : 123456789,
  "numeroReceitaFederal" : 123456789,
  "flagMatriz" : 123,
  "bairro2" : "aeiou",
  "flagArquivoSecrFazenda" : 123,
  "cep2" : "aeiou",
  "mcc" : 123456789,
  "cep" : "aeiou",
  "uf" : "aeiou",
  "idTipoEstabelecimento" : 123456789,
  "nomeFantasia" : "aeiou",
  "complemento" : "aeiou",
  "flagCartaoDigitado" : 123,
  "correspondencia" : 123,
  "id" : 123456789,
  "contato" : "aeiou",
  "consulta" : {
    "tipoEntidade" : "aeiou",
    "dataHoraConsulta" : "2018-03-02T14:02:33.824Z",
    "status" : "aeiou"
  },
  "email" : "aeiou",
  "complemento2" : "aeiou",
  "nomeLogradouro" : "aeiou",
  "bairro" : "aeiou",
  "idMoeda" : 123456789,
  "cargoContato" : "aeiou",
  "dataCadastramento" : "aeiou",
  "nome" : "aeiou",
  "cidade2" : "aeiou",
  "numeroEndereco2" : "aeiou",
  "terminal" : "aeiou",
  "descricao" : "aeiou",
  "numeroEndereco" : "aeiou",
  "associadoSPCBrasil" : 123,
  "idGrupoEconomico" : 123456789,
  "nomeLogradouro2" : "aeiou",
  "consulta3" : "",
  "inativo" : 123,
  "consulta2" : "",
  "usuario" : "aeiou",
  "numeroEstabelecimento" : "aeiou",
  "tipoPagamento" : "aeiou"
}}]
     
     - parameter persist: (body) persist 

     - returns: RequestBuilder<EstabelecimentoResponse> 
     */
    public class func cadastrarUsingPOST3WithRequestBuilder(persist persist: EstabelecimentoPersist) -> RequestBuilder<EstabelecimentoResponse> {
        let path = "/api/estabelecimentos"
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<EstabelecimentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{grupo_economico_resource_cadastrar}}}
     
     - parameter grupoEconomicoDTO: (body) GrupoEconomicoDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarUsingPOST4(grupoEconomicoDTO grupoEconomicoDTO: GrupoEconomicoDTO, completion: ((data: GrupoEconomicoResponse?, error: ErrorType?) -> Void)) {
        cadastrarUsingPOST4WithRequestBuilder(grupoEconomicoDTO: grupoEconomicoDTO).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{grupo_economico_resource_cadastrar}}}
     
     - POST /api/grupos-economicos
     - {{{grupo_economico_resource_cadastrar_notes}}}
     - examples: [{contentType=application/json, example={
  "digitoAgencia" : "aeiou",
  "numeroReceitaFederal" : "aeiou",
  "percentualRAV" : 0.015,
  "pagamentoDecendialTerceiro" : 25,
  "pagamentoQuinzenalPrimeiro" : 5,
  "pagamentoDecendialSegundo" : 15,
  "agencia" : 123,
  "nomeCredor" : "Exemplo",
  "taxaBanco" : 0.1,
  "taxaAdm" : 0.1,
  "pagamentoMensal" : 10,
  "id" : 123456789,
  "contato" : "aeiou",
  "digitoContaCorrente" : "aeiou",
  "pagamentoQuinzenalSegundo" : 20,
  "banco" : 123,
  "recebeRAV" : "NAO_TEM_PERMISSAO_RAV",
  "percentualMultiplica" : 0.1,
  "idCredorRAV" : 1,
  "pagamentoDecendialPrimeiro" : 5,
  "inscricaoEstadual" : "aeiou",
  "contaCorrente" : "aeiou",
  "usuario" : "aeiou",
  "periodicidade" : "DIARIO",
  "razaoSocial" : "aeiou",
  "limiteRAV" : 0.015,
  "pagamentoSemanal" : "SEGUNDA"
}}]
     
     - parameter grupoEconomicoDTO: (body) GrupoEconomicoDTO 

     - returns: RequestBuilder<GrupoEconomicoResponse> 
     */
    public class func cadastrarUsingPOST4WithRequestBuilder(grupoEconomicoDTO grupoEconomicoDTO: GrupoEconomicoDTO) -> RequestBuilder<GrupoEconomicoResponse> {
        let path = "/api/grupos-economicos"
        let URLString = PierAPI.basePath + path
        
        let parameters = grupoEconomicoDTO.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<GrupoEconomicoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{operacao_resource_consulta_operacao}}}
     
     - parameter id: (path) {{{operacao_resource_consulta_operacao_param_id_operacao}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultaOperacaoUsingGET(id id: Int, completion: ((data: DetalheOperacaoResponse?, error: ErrorType?) -> Void)) {
        consultaOperacaoUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{operacao_resource_consulta_operacao}}}
     
     - GET /api/tipos-operacoes-estabelecimentos/{id}
     - {{{operacao_resource_consulta_operacao_notes}}}
     - examples: [{contentType=application/json, example={
  "carencia" : 123,
  "flagPermitirParcelamento" : false,
  "idOperacao" : 123456789,
  "valorOperacao" : 1.3579000000000001069366817318950779736042022705078125,
  "codigoProcessamento" : "aeiou",
  "codigoProcessamentoCancelamento" : "aeiou",
  "planoMaximo" : 123,
  "descricaoOperacao" : "aeiou",
  "nomeOperacao" : "aeiou",
  "percentualTac" : 1.3579000000000001069366817318950779736042022705078125,
  "valorMaximo" : 1.3579000000000001069366817318950779736042022705078125,
  "valorTac" : 1.3579000000000001069366817318950779736042022705078125,
  "planoMinimo" : 123,
  "flagCobraJuros" : false,
  "taxaTarifa" : 1.3579000000000001069366817318950779736042022705078125,
  "excedentePermitido" : 1.3579000000000001069366817318950779736042022705078125,
  "taxaJuros" : 1.3579000000000001069366817318950779736042022705078125,
  "valorMinimo" : 1.3579000000000001069366817318950779736042022705078125,
  "flagCobraTarifa" : false
}}]
     
     - parameter id: (path) {{{operacao_resource_consulta_operacao_param_id_operacao}}} 

     - returns: RequestBuilder<DetalheOperacaoResponse> 
     */
    public class func consultaOperacaoUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<DetalheOperacaoResponse> {
        var path = "/api/tipos-operacoes-estabelecimentos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<DetalheOperacaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{origem_comercial_resource_consultar_origem_comercial}}}
     
     - parameter id: (path) {{{origem_comercial_resource_consultar_origem_comercial_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarOrigemComercialUsingGET(id id: Int, completion: ((data: OrigemComercialResponse?, error: ErrorType?) -> Void)) {
        consultarOrigemComercialUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{origem_comercial_resource_consultar_origem_comercial}}}
     
     - GET /api/origens-comerciais/{id}
     - {{{origem_comercial_resource_consultar_origem_comercial_notes}}}
     - examples: [{contentType=application/json, example={
  "flagConcedeLimiteProvisorio" : true,
  "idGrupoOrigemComercial" : 1,
  "tipoPessoa" : "PESSOA_FISICA",
  "produtosOrigem" : [ {
    "idProduto" : 123456789
  } ],
  "flagDigitalizarDoc" : true,
  "nomeTipoOrigemComercial" : "NOME DO TIPO DE ORIGEM COMERCIAL",
  "flagAprovacaoImediata" : true,
  "flagOrigemExterna" : true,
  "senha" : "21031408",
  "flagPreAprovado" : true,
  "nomeFantasiaPlastico" : "COMÉRCIO LTDA",
  "flagCartaoProvisorio" : true,
  "id" : 10,
  "flagConsultaPrevia" : true,
  "nomeGrupoOrigemComercial" : "NOME DO GRUPO DA ORIGEM COMERCIAL",
  "idEstabelecimento" : 1,
  "flagCartaoDefinitivo" : true,
  "nome" : "COMÉRCIO LTDA",
  "descricao" : "DESCRIÇÃO DA ORIGEM COMERCIAL",
  "idTipoOrigemComercial" : 1,
  "flagEmbossingLoja" : true,
  "usuario" : "usuario01",
  "flagCreditoFaturamento" : true,
  "flagModificado" : true,
  "flagEnviaFaturaUsuario" : true,
  "status" : 1
}}]
     
     - parameter id: (path) {{{origem_comercial_resource_consultar_origem_comercial_param_id}}} 

     - returns: RequestBuilder<OrigemComercialResponse> 
     */
    public class func consultarOrigemComercialUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<OrigemComercialResponse> {
        var path = "/api/origens-comerciais/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<OrigemComercialResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{estabelecimento_resource_consultar}}}
     
     - parameter id: (path) {{{estabelecimento_resource_consultar_param_id_estabelecimento}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET20(id id: Int, completion: ((data: EstabelecimentoResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET20WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{estabelecimento_resource_consultar}}}
     
     - GET /api/estabelecimentos/{id}
     - {{{estabelecimento_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "uf2" : "aeiou",
  "obs" : "aeiou",
  "cidade" : "aeiou",
  "idPais" : 123456789,
  "numeroReceitaFederal" : 123456789,
  "flagMatriz" : 123,
  "bairro2" : "aeiou",
  "flagArquivoSecrFazenda" : 123,
  "cep2" : "aeiou",
  "mcc" : 123456789,
  "cep" : "aeiou",
  "uf" : "aeiou",
  "idTipoEstabelecimento" : 123456789,
  "nomeFantasia" : "aeiou",
  "complemento" : "aeiou",
  "flagCartaoDigitado" : 123,
  "correspondencia" : 123,
  "id" : 123456789,
  "contato" : "aeiou",
  "consulta" : {
    "tipoEntidade" : "aeiou",
    "dataHoraConsulta" : "2018-03-02T14:02:33.824Z",
    "status" : "aeiou"
  },
  "email" : "aeiou",
  "complemento2" : "aeiou",
  "nomeLogradouro" : "aeiou",
  "bairro" : "aeiou",
  "idMoeda" : 123456789,
  "cargoContato" : "aeiou",
  "dataCadastramento" : "aeiou",
  "nome" : "aeiou",
  "cidade2" : "aeiou",
  "numeroEndereco2" : "aeiou",
  "terminal" : "aeiou",
  "descricao" : "aeiou",
  "numeroEndereco" : "aeiou",
  "associadoSPCBrasil" : 123,
  "idGrupoEconomico" : 123456789,
  "nomeLogradouro2" : "aeiou",
  "consulta3" : "",
  "inativo" : 123,
  "consulta2" : "",
  "usuario" : "aeiou",
  "numeroEstabelecimento" : "aeiou",
  "tipoPagamento" : "aeiou"
}}]
     
     - parameter id: (path) {{{estabelecimento_resource_consultar_param_id_estabelecimento}}} 

     - returns: RequestBuilder<EstabelecimentoResponse> 
     */
    public class func consultarUsingGET20WithRequestBuilder(id id: Int) -> RequestBuilder<EstabelecimentoResponse> {
        var path = "/api/estabelecimentos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<EstabelecimentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{grupo_economico_resource_consultar}}}
     
     - parameter id: (path) {{{grupo_economico_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET22(id id: Int, completion: ((data: GrupoEconomicoResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET22WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{grupo_economico_resource_consultar}}}
     
     - GET /api/grupos-economicos/{id}
     - {{{grupo_economico_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "digitoAgencia" : "aeiou",
  "numeroReceitaFederal" : "aeiou",
  "percentualRAV" : 0.015,
  "pagamentoDecendialTerceiro" : 25,
  "pagamentoQuinzenalPrimeiro" : 5,
  "pagamentoDecendialSegundo" : 15,
  "agencia" : 123,
  "nomeCredor" : "Exemplo",
  "taxaBanco" : 0.1,
  "taxaAdm" : 0.1,
  "pagamentoMensal" : 10,
  "id" : 123456789,
  "contato" : "aeiou",
  "digitoContaCorrente" : "aeiou",
  "pagamentoQuinzenalSegundo" : 20,
  "banco" : 123,
  "recebeRAV" : "NAO_TEM_PERMISSAO_RAV",
  "percentualMultiplica" : 0.1,
  "idCredorRAV" : 1,
  "pagamentoDecendialPrimeiro" : 5,
  "inscricaoEstadual" : "aeiou",
  "contaCorrente" : "aeiou",
  "usuario" : "aeiou",
  "periodicidade" : "DIARIO",
  "razaoSocial" : "aeiou",
  "limiteRAV" : 0.015,
  "pagamentoSemanal" : "SEGUNDA"
}}]
     
     - parameter id: (path) {{{grupo_economico_resource_consultar_param_id}}} 

     - returns: RequestBuilder<GrupoEconomicoResponse> 
     */
    public class func consultarUsingGET22WithRequestBuilder(id id: Int) -> RequestBuilder<GrupoEconomicoResponse> {
        var path = "/api/grupos-economicos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<GrupoEconomicoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{maquineta_resource_consultar}}}
     
     - parameter id: (path) {{{maquineta_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET24(id id: Int, completion: ((data: MaquinetaResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET24WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{maquineta_resource_consultar}}}
     
     - GET /api/maquinetas/{id}
     - {{{maquineta_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "dataHoraCadastramento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idEstabelecimento" : 123456789,
  "usuarioApl" : "aeiou",
  "valor" : 1.3579000000000001069366817318950779736042022705078125,
  "idTipoMaquineta" : 123456789,
  "id" : 123456789,
  "terminal" : "aeiou",
  "dataHoraImplantacao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
}}]
     
     - parameter id: (path) {{{maquineta_resource_consultar_param_id}}} 

     - returns: RequestBuilder<MaquinetaResponse> 
     */
    public class func consultarUsingGET24WithRequestBuilder(id id: Int) -> RequestBuilder<MaquinetaResponse> {
        var path = "/api/maquinetas/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<MaquinetaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{operacao_credor_resource_consultar}}}
     
     - parameter id: (path) {{{operacao_credor_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET25(id id: Int, completion: ((data: OperacaoCredorResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET25WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{operacao_credor_resource_consultar}}}
     
     - GET /api/regras-operacoes-estabelecimentos/{id}
     - {{{operacao_credor_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "diasAfastamento" : 29,
  "fatorMultiplicador" : "AGENDA",
  "idOperacao" : 2,
  "vencimentoPrimeiraParcela" : 29,
  "planoMaximo" : 5,
  "planoMinimo" : 1,
  "idProduto" : 1,
  "idGrupoEconomico" : 1,
  "remuneracaoPercentual" : 0.04,
  "flagTaxaFixada" : true,
  "remuneracaoFixa" : 0.0,
  "periodicidade" : "MENSAL",
  "id" : 2
}}]
     
     - parameter id: (path) {{{operacao_credor_resource_consultar_param_id}}} 

     - returns: RequestBuilder<OperacaoCredorResponse> 
     */
    public class func consultarUsingGET25WithRequestBuilder(id id: Int) -> RequestBuilder<OperacaoCredorResponse> {
        var path = "/api/regras-operacoes-estabelecimentos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<OperacaoCredorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{telefone_estabelecimento_resource_consultar}}}
     
     - parameter id: (path) {{{telefone_estabelecimento_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET38(id id: Int, completion: ((data: TelefoneEstabelecimentoResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET38WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{telefone_estabelecimento_resource_consultar}}}
     
     - GET /api/telefones-estabelecimentos/{id}
     - {{{telefone_estabelecimento_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "idEstabelecimento" : 123456789,
  "telefone" : "aeiou",
  "ddd" : "aeiou",
  "id" : 123456789,
  "ramal" : "aeiou"
}}]
     
     - parameter id: (path) {{{telefone_estabelecimento_resource_consultar_param_id}}} 

     - returns: RequestBuilder<TelefoneEstabelecimentoResponse> 
     */
    public class func consultarUsingGET38WithRequestBuilder(id id: Int) -> RequestBuilder<TelefoneEstabelecimentoResponse> {
        var path = "/api/telefones-estabelecimentos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TelefoneEstabelecimentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{terminal_resource_consultar}}}
     
     - parameter id: (path) {{{terminal_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET40(id id: Int, completion: ((data: TerminalResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET40WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{terminal_resource_consultar}}}
     
     - GET /api/terminais/{id}
     - {{{terminal_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "flagTerminalVirtual" : false,
  "idEstabelecimento" : 123456789,
  "flagConsultaExtrato" : false,
  "id" : 123456789,
  "terminal" : "aeiou",
  "numeroEstabelecimento" : 123456789
}}]
     
     - parameter id: (path) {{{terminal_resource_consultar_param_id}}} 

     - returns: RequestBuilder<TerminalResponse> 
     */
    public class func consultarUsingGET40WithRequestBuilder(id id: Int) -> RequestBuilder<TerminalResponse> {
        var path = "/api/terminais/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TerminalResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_consultar}}}
     
     - parameter id: (path) {{{vinculo_estabelecimento_adquirente_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET52(id id: Int, completion: ((data: VinculoEstabelecimentoAdquirenteResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET52WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_consultar}}}
     
     - GET /api/adquirentes-estabelecimento/{id}
     - {{{vinculo_estabelecimento_adquirente_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "idAdquirente" : 123456789,
  "idEstabelecimento" : 123456789,
  "mensagem" : "aeiou",
  "dataHoraCadastro" : "aeiou",
  "id" : 123456789,
  "codigoEstabelecimentoAdquirente" : "aeiou",
  "status" : 123
}}]
     
     - parameter id: (path) {{{vinculo_estabelecimento_adquirente_resource_consultar_param_id}}} 

     - returns: RequestBuilder<VinculoEstabelecimentoAdquirenteResponse> 
     */
    public class func consultarUsingGET52WithRequestBuilder(id id: Int) -> RequestBuilder<VinculoEstabelecimentoAdquirenteResponse> {
        var path = "/api/adquirentes-estabelecimento/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<VinculoEstabelecimentoAdquirenteResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo}}}
     
     - parameter id: (path) {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desabilitarVinculoUsingPOST(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        desabilitarVinculoUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo}}}
     
     - POST /api/adquirentes-estabelecimento/{id}/desabilitar
     - {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo_notes}}}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo_param_id}}} 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func desabilitarVinculoUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/adquirentes-estabelecimento/{id}/desabilitar"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{vinculo_operacao_resource_desabilitar_vinculo}}}
     
     - parameter id: (path) {{{vinculo_operacao_resource_desabilitar_vinculo_param_id}}} 
     - parameter vinculoOperacaoPersist: (body) vinculoOperacaoPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desabilitarVinculoUsingPOST1(id id: Int, vinculoOperacaoPersist: VinculoOperacaoPersist, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        desabilitarVinculoUsingPOST1WithRequestBuilder(id: id, vinculoOperacaoPersist: vinculoOperacaoPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{vinculo_operacao_resource_desabilitar_vinculo}}}
     
     - POST /api/estabelecimentos/{id}/desabilitar-operacao
     - {{{vinculo_operacao_resource_desabilitar_vinculo_notes}}}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) {{{vinculo_operacao_resource_desabilitar_vinculo_param_id}}} 
     - parameter vinculoOperacaoPersist: (body) vinculoOperacaoPersist 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func desabilitarVinculoUsingPOST1WithRequestBuilder(id id: Int, vinculoOperacaoPersist: VinculoOperacaoPersist) -> RequestBuilder<AnyObject> {
        var path = "/api/estabelecimentos/{id}/desabilitar-operacao"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = vinculoOperacaoPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo}}}
     
     - parameter id: (path) {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func habilitarVinculoUsingPOST(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        habilitarVinculoUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo}}}
     
     - POST /api/adquirentes-estabelecimento/{id}/habilitar
     - {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo_notes}}}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo_param_id}}} 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func habilitarVinculoUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/adquirentes-estabelecimento/{id}/habilitar"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{vinculo_operacao_resource_habilitar_vinculo}}}
     
     - parameter id: (path) {{{vinculo_operacao_resource_habilitar_vinculo_param_id}}} 
     - parameter vinculoOperacaoPersist: (body) vinculoOperacaoPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func habilitarVinculoUsingPOST1(id id: Int, vinculoOperacaoPersist: VinculoOperacaoPersist, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        habilitarVinculoUsingPOST1WithRequestBuilder(id: id, vinculoOperacaoPersist: vinculoOperacaoPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{vinculo_operacao_resource_habilitar_vinculo}}}
     
     - POST /api/estabelecimentos/{id}/habilitar-operacao
     - {{{vinculo_operacao_resource_habilitar_vinculo_notes}}}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) {{{vinculo_operacao_resource_habilitar_vinculo_param_id}}} 
     - parameter vinculoOperacaoPersist: (body) vinculoOperacaoPersist 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func habilitarVinculoUsingPOST1WithRequestBuilder(id id: Int, vinculoOperacaoPersist: VinculoOperacaoPersist) -> RequestBuilder<AnyObject> {
        var path = "/api/estabelecimentos/{id}/habilitar-operacao"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = vinculoOperacaoPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{operacao_resource_lista_operacao}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idOperacao: (query) {{{operacao_request_id_operacao_value}}} (optional)
     - parameter codigoProcessamento: (query) {{{operacao_request_codigo_processamento_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listaOperacaoUsingGET(sort sort: [String]?, page: Int?, limit: Int?, idOperacao: Int?, codigoProcessamento: String?, completion: ((data: PageOperacaoResponse?, error: ErrorType?) -> Void)) {
        listaOperacaoUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, idOperacao: idOperacao, codigoProcessamento: codigoProcessamento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{operacao_resource_lista_operacao}}}
     
     - GET /api/tipos-operacoes-estabelecimentos
     - {{{operacao_resource_lista_operacao_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nomeOperacao" : "aeiou",
    "carencia" : 123,
    "flagCobraJuros" : false,
    "flagPermitirParcelamento" : false,
    "idOperacao" : 123456789,
    "codigoProcessamento" : "aeiou",
    "codigoProcessamentoCancelamento" : "aeiou",
    "flagCobraTarifa" : false
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idOperacao: (query) {{{operacao_request_id_operacao_value}}} (optional)
     - parameter codigoProcessamento: (query) {{{operacao_request_codigo_processamento_value}}} (optional)

     - returns: RequestBuilder<PageOperacaoResponse> 
     */
    public class func listaOperacaoUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idOperacao: Int?, codigoProcessamento: String?) -> RequestBuilder<PageOperacaoResponse> {
        let path = "/api/tipos-operacoes-estabelecimentos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idOperacao": idOperacao,
            "codigoProcessamento": codigoProcessamento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageOperacaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{m_c_c_resource_listar_m_c_c}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarMCCUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageMCCResponse?, error: ErrorType?) -> Void)) {
        listarMCCUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{m_c_c_resource_listar_m_c_c}}}
     
     - GET /api/mcc-estabelecimentos
     - {{{m_c_c_resource_listar_m_c_c_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "id" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageMCCResponse> 
     */
    public class func listarMCCUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageMCCResponse> {
        let path = "/api/mcc-estabelecimentos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageMCCResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{origem_comercial_resource_listar_origens_comerciais}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{origem_comercial_request_id_value}}} (optional)
     - parameter nome: (query) {{{origem_comercial_request_nome_value}}} (optional)
     - parameter status: (query) {{{origem_comercial_request_status_value}}} (optional)
     - parameter idEstabelecimento: (query) {{{origem_comercial_request_id_estabelecimento_value}}} (optional)
     - parameter idProduto: (query) {{{origem_comercial_request_id_produto_value}}} (optional)
     - parameter descricao: (query) {{{origem_comercial_request_descricao_value}}} (optional)
     - parameter idTipoOrigemComercial: (query) {{{origem_comercial_request_id_tipo_origem_comercial_value}}} (optional)
     - parameter idGrupoOrigemComercial: (query) {{{origem_comercial_request_id_grupo_origem_comercial_value}}} (optional)
     - parameter flagPreAprovado: (query) {{{origem_comercial_request_flag_pre_aprovado_value}}} (optional)
     - parameter flagAprovacaoImediata: (query) {{{origem_comercial_request_flag_aprovacao_imediata_value}}} (optional)
     - parameter nomeFantasiaPlastico: (query) {{{origem_comercial_request_nome_fantasia_plastico_value}}} (optional)
     - parameter flagCartaoProvisorio: (query) {{{origem_comercial_request_flag_cartao_provisorio_value}}} (optional)
     - parameter flagCartaoDefinitivo: (query) {{{origem_comercial_request_flag_cartao_definitivo_value}}} (optional)
     - parameter usuario: (query) {{{origem_comercial_request_usuario_value}}} (optional)
     - parameter senha: (query) {{{origem_comercial_request_senha_value}}} (optional)
     - parameter flagOrigemExterna: (query) {{{origem_comercial_request_flag_origem_externa_value}}} (optional)
     - parameter flagModificado: (query) {{{origem_comercial_request_flag_modificado_value}}} (optional)
     - parameter flagEnviaFaturaUsuario: (query) {{{origem_comercial_request_flag_envia_fatura_usuario_value}}} (optional)
     - parameter flagCreditoFaturamento: (query) {{{origem_comercial_request_flag_credito_faturamento_value}}} (optional)
     - parameter flagConcedeLimiteProvisorio: (query) {{{origem_comercial_request_flag_concede_limite_provisorio_value}}} (optional)
     - parameter flagDigitalizarDoc: (query) {{{origem_comercial_request_flag_digitalizar_doc_value}}} (optional)
     - parameter flagEmbossingLoja: (query) {{{origem_comercial_request_flag_embossing_loja_value}}} (optional)
     - parameter flagConsultaPrevia: (query) {{{origem_comercial_request_flag_consulta_previa_value}}} (optional)
     - parameter tipoPessoa: (query) {{{origem_comercial_request_tipo_pessoa_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarOrigensComerciaisUsingGET(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, nome: String?, status: Int?, idEstabelecimento: Int?, idProduto: Int?, descricao: String?, idTipoOrigemComercial: Int?, idGrupoOrigemComercial: Int?, flagPreAprovado: Bool?, flagAprovacaoImediata: Bool?, nomeFantasiaPlastico: String?, flagCartaoProvisorio: Bool?, flagCartaoDefinitivo: Bool?, usuario: String?, senha: String?, flagOrigemExterna: Bool?, flagModificado: Bool?, flagEnviaFaturaUsuario: Bool?, flagCreditoFaturamento: Bool?, flagConcedeLimiteProvisorio: Bool?, flagDigitalizarDoc: Bool?, flagEmbossingLoja: Bool?, flagConsultaPrevia: Bool?, tipoPessoa: String?, completion: ((data: PageOrigemComercialResponse?, error: ErrorType?) -> Void)) {
        listarOrigensComerciaisUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, id: id, nome: nome, status: status, idEstabelecimento: idEstabelecimento, idProduto: idProduto, descricao: descricao, idTipoOrigemComercial: idTipoOrigemComercial, idGrupoOrigemComercial: idGrupoOrigemComercial, flagPreAprovado: flagPreAprovado, flagAprovacaoImediata: flagAprovacaoImediata, nomeFantasiaPlastico: nomeFantasiaPlastico, flagCartaoProvisorio: flagCartaoProvisorio, flagCartaoDefinitivo: flagCartaoDefinitivo, usuario: usuario, senha: senha, flagOrigemExterna: flagOrigemExterna, flagModificado: flagModificado, flagEnviaFaturaUsuario: flagEnviaFaturaUsuario, flagCreditoFaturamento: flagCreditoFaturamento, flagConcedeLimiteProvisorio: flagConcedeLimiteProvisorio, flagDigitalizarDoc: flagDigitalizarDoc, flagEmbossingLoja: flagEmbossingLoja, flagConsultaPrevia: flagConsultaPrevia, tipoPessoa: tipoPessoa).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{origem_comercial_resource_listar_origens_comerciais}}}
     
     - GET /api/origens-comerciais
     - {{{origem_comercial_resource_listar_origens_comerciais_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "flagConcedeLimiteProvisorio" : true,
    "idGrupoOrigemComercial" : 1,
    "tipoPessoa" : "PESSOA_FISICA",
    "produtosOrigem" : [ {
      "idProduto" : 123456789
    } ],
    "flagDigitalizarDoc" : true,
    "nomeTipoOrigemComercial" : "NOME DO TIPO DE ORIGEM COMERCIAL",
    "flagAprovacaoImediata" : true,
    "flagOrigemExterna" : true,
    "senha" : "21031408",
    "flagPreAprovado" : true,
    "nomeFantasiaPlastico" : "COMÉRCIO LTDA",
    "flagCartaoProvisorio" : true,
    "id" : 10,
    "flagConsultaPrevia" : true,
    "nomeGrupoOrigemComercial" : "NOME DO GRUPO DA ORIGEM COMERCIAL",
    "idEstabelecimento" : 1,
    "flagCartaoDefinitivo" : true,
    "nome" : "COMÉRCIO LTDA",
    "descricao" : "DESCRIÇÃO DA ORIGEM COMERCIAL",
    "idTipoOrigemComercial" : 1,
    "flagEmbossingLoja" : true,
    "usuario" : "usuario01",
    "flagCreditoFaturamento" : true,
    "flagModificado" : true,
    "flagEnviaFaturaUsuario" : true,
    "status" : 1
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{origem_comercial_request_id_value}}} (optional)
     - parameter nome: (query) {{{origem_comercial_request_nome_value}}} (optional)
     - parameter status: (query) {{{origem_comercial_request_status_value}}} (optional)
     - parameter idEstabelecimento: (query) {{{origem_comercial_request_id_estabelecimento_value}}} (optional)
     - parameter idProduto: (query) {{{origem_comercial_request_id_produto_value}}} (optional)
     - parameter descricao: (query) {{{origem_comercial_request_descricao_value}}} (optional)
     - parameter idTipoOrigemComercial: (query) {{{origem_comercial_request_id_tipo_origem_comercial_value}}} (optional)
     - parameter idGrupoOrigemComercial: (query) {{{origem_comercial_request_id_grupo_origem_comercial_value}}} (optional)
     - parameter flagPreAprovado: (query) {{{origem_comercial_request_flag_pre_aprovado_value}}} (optional)
     - parameter flagAprovacaoImediata: (query) {{{origem_comercial_request_flag_aprovacao_imediata_value}}} (optional)
     - parameter nomeFantasiaPlastico: (query) {{{origem_comercial_request_nome_fantasia_plastico_value}}} (optional)
     - parameter flagCartaoProvisorio: (query) {{{origem_comercial_request_flag_cartao_provisorio_value}}} (optional)
     - parameter flagCartaoDefinitivo: (query) {{{origem_comercial_request_flag_cartao_definitivo_value}}} (optional)
     - parameter usuario: (query) {{{origem_comercial_request_usuario_value}}} (optional)
     - parameter senha: (query) {{{origem_comercial_request_senha_value}}} (optional)
     - parameter flagOrigemExterna: (query) {{{origem_comercial_request_flag_origem_externa_value}}} (optional)
     - parameter flagModificado: (query) {{{origem_comercial_request_flag_modificado_value}}} (optional)
     - parameter flagEnviaFaturaUsuario: (query) {{{origem_comercial_request_flag_envia_fatura_usuario_value}}} (optional)
     - parameter flagCreditoFaturamento: (query) {{{origem_comercial_request_flag_credito_faturamento_value}}} (optional)
     - parameter flagConcedeLimiteProvisorio: (query) {{{origem_comercial_request_flag_concede_limite_provisorio_value}}} (optional)
     - parameter flagDigitalizarDoc: (query) {{{origem_comercial_request_flag_digitalizar_doc_value}}} (optional)
     - parameter flagEmbossingLoja: (query) {{{origem_comercial_request_flag_embossing_loja_value}}} (optional)
     - parameter flagConsultaPrevia: (query) {{{origem_comercial_request_flag_consulta_previa_value}}} (optional)
     - parameter tipoPessoa: (query) {{{origem_comercial_request_tipo_pessoa_value}}} (optional)

     - returns: RequestBuilder<PageOrigemComercialResponse> 
     */
    public class func listarOrigensComerciaisUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, nome: String?, status: Int?, idEstabelecimento: Int?, idProduto: Int?, descricao: String?, idTipoOrigemComercial: Int?, idGrupoOrigemComercial: Int?, flagPreAprovado: Bool?, flagAprovacaoImediata: Bool?, nomeFantasiaPlastico: String?, flagCartaoProvisorio: Bool?, flagCartaoDefinitivo: Bool?, usuario: String?, senha: String?, flagOrigemExterna: Bool?, flagModificado: Bool?, flagEnviaFaturaUsuario: Bool?, flagCreditoFaturamento: Bool?, flagConcedeLimiteProvisorio: Bool?, flagDigitalizarDoc: Bool?, flagEmbossingLoja: Bool?, flagConsultaPrevia: Bool?, tipoPessoa: String?) -> RequestBuilder<PageOrigemComercialResponse> {
        let path = "/api/origens-comerciais"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "nome": nome,
            "status": status,
            "idEstabelecimento": idEstabelecimento,
            "idProduto": idProduto,
            "descricao": descricao,
            "idTipoOrigemComercial": idTipoOrigemComercial,
            "idGrupoOrigemComercial": idGrupoOrigemComercial,
            "flagPreAprovado": flagPreAprovado,
            "flagAprovacaoImediata": flagAprovacaoImediata,
            "nomeFantasiaPlastico": nomeFantasiaPlastico,
            "flagCartaoProvisorio": flagCartaoProvisorio,
            "flagCartaoDefinitivo": flagCartaoDefinitivo,
            "usuario": usuario,
            "senha": senha,
            "flagOrigemExterna": flagOrigemExterna,
            "flagModificado": flagModificado,
            "flagEnviaFaturaUsuario": flagEnviaFaturaUsuario,
            "flagCreditoFaturamento": flagCreditoFaturamento,
            "flagConcedeLimiteProvisorio": flagConcedeLimiteProvisorio,
            "flagDigitalizarDoc": flagDigitalizarDoc,
            "flagEmbossingLoja": flagEmbossingLoja,
            "flagConsultaPrevia": flagConsultaPrevia,
            "tipoPessoa": tipoPessoa
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageOrigemComercialResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_listar_tipos_adquirentes}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarTiposAdquirentesUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageEntidadeResponse?, error: ErrorType?) -> Void)) {
        listarTiposAdquirentesUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_listar_tipos_adquirentes}}}
     
     - GET /api/tipos-adquirentes
     - {{{vinculo_estabelecimento_adquirente_resource_listar_tipos_adquirentes_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "id" : 123456789,
    "flagAtivo" : false,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageEntidadeResponse> 
     */
    public class func listarTiposAdquirentesUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageEntidadeResponse> {
        let path = "/api/tipos-adquirentes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageEntidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{tipo_estabelecimento_resource_listar_tipos_estabelecimentos}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter descricao: (query) {{{tipo_estabelecimento_request_descricao_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarTiposEstabelecimentosUsingGET(sort sort: [String]?, page: Int?, limit: Int?, descricao: String?, completion: ((data: PageTipoEstabelecimentoResponse?, error: ErrorType?) -> Void)) {
        listarTiposEstabelecimentosUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, descricao: descricao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{tipo_estabelecimento_resource_listar_tipos_estabelecimentos}}}
     
     - GET /api/tipos-estabelecimentos
     - {{{tipo_estabelecimento_resource_listar_tipos_estabelecimentos_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "id" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter descricao: (query) {{{tipo_estabelecimento_request_descricao_value}}} (optional)

     - returns: RequestBuilder<PageTipoEstabelecimentoResponse> 
     */
    public class func listarTiposEstabelecimentosUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, descricao: String?) -> RequestBuilder<PageTipoEstabelecimentoResponse> {
        let path = "/api/tipos-estabelecimentos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "descricao": descricao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoEstabelecimentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{maquineta_resource_listar_tipos_maquinetas}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarTiposMaquinetasUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageCampoCodificadoDescricaoResponse?, error: ErrorType?) -> Void)) {
        listarTiposMaquinetasUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{maquineta_resource_listar_tipos_maquinetas}}}
     
     - GET /api/tipos-maquinetas
     - {{{maquineta_resource_listar_tipos_maquinetas_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "codigo" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageCampoCodificadoDescricaoResponse> 
     */
    public class func listarTiposMaquinetasUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageCampoCodificadoDescricaoResponse> {
        let path = "/api/tipos-maquinetas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageCampoCodificadoDescricaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{tipo_origem_comercial_resource_listar_tipos_origens_comerciais}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter nome: (query) {{{tipo_origem_comercial_request_nome_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarTiposOrigensComerciaisUsingGET(sort sort: [String]?, page: Int?, limit: Int?, nome: String?, completion: ((data: PageTipoOrigemComercialResponse?, error: ErrorType?) -> Void)) {
        listarTiposOrigensComerciaisUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, nome: nome).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{tipo_origem_comercial_resource_listar_tipos_origens_comerciais}}}
     
     - GET /api/tipos-origens-comerciais
     - {{{tipo_origem_comercial_resource_listar_tipos_origens_comerciais_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nome" : "aeiou",
    "id" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter nome: (query) {{{tipo_origem_comercial_request_nome_value}}} (optional)

     - returns: RequestBuilder<PageTipoOrigemComercialResponse> 
     */
    public class func listarTiposOrigensComerciaisUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, nome: String?) -> RequestBuilder<PageTipoOrigemComercialResponse> {
        let path = "/api/tipos-origens-comerciais"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "nome": nome
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoOrigemComercialResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{terminal_resource_listar_tipos_terminais}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarTiposTerminaisUsingGET1(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageTipoTerminalResponse?, error: ErrorType?) -> Void)) {
        listarTiposTerminaisUsingGET1WithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{terminal_resource_listar_tipos_terminais}}}
     
     - GET /api/tipos-terminais-estabelecimento
     - {{{terminal_resource_listar_tipos_terminais_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "descricaoTerminal" : "aeiou",
    "id" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageTipoTerminalResponse> 
     */
    public class func listarTiposTerminaisUsingGET1WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageTipoTerminalResponse> {
        let path = "/api/tipos-terminais-estabelecimento"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoTerminalResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{estabelecimento_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{estabelecimento_request_id_value}}} (optional)
     - parameter idGrupoEconomico: (query) {{{estabelecimento_request_id_grupo_economico_value}}} (optional)
     - parameter numeroReceitaFederal: (query) {{{estabelecimento_request_numero_receita_federal_value}}} (optional)
     - parameter nome: (query) {{{estabelecimento_request_nome_value}}} (optional)
     - parameter descricao: (query) {{{estabelecimento_request_descricao_value}}} (optional)
     - parameter nomeFantasia: (query) {{{estabelecimento_request_nome_fantasia_value}}} (optional)
     - parameter cep: (query) {{{estabelecimento_request_cep_value}}} (optional)
     - parameter nomeLogradouro: (query) {{{estabelecimento_request_nome_logradouro_value}}} (optional)
     - parameter numeroEndereco: (query) {{{estabelecimento_request_numero_endereco_value}}} (optional)
     - parameter complemento: (query) {{{estabelecimento_request_complemento_value}}} (optional)
     - parameter bairro: (query) {{{estabelecimento_request_bairro_value}}} (optional)
     - parameter cidade: (query) {{{estabelecimento_request_cidade_value}}} (optional)
     - parameter uf: (query) {{{estabelecimento_request_uf_value}}} (optional)
     - parameter pais: (query) {{{estabelecimento_request_pais_value}}} (optional)
     - parameter dataCadastramento: (query) {{{estabelecimento_request_data_cadastramento_value}}} (optional)
     - parameter contato: (query) {{{estabelecimento_request_contato_value}}} (optional)
     - parameter email: (query) {{{estabelecimento_request_email_value}}} (optional)
     - parameter flagArquivoSecrFazenda: (query) {{{estabelecimento_request_flag_arquivo_secr_fazenda_value}}} (optional)
     - parameter flagCartaoDigitado: (query) {{{estabelecimento_request_flag_cartao_digitado_value}}} (optional)
     - parameter inativo: (query) {{{estabelecimento_request_inativo_value}}} (optional)
     - parameter idPais: (query) {{{estabelecimento_request_id_pais_value}}} (optional)
     - parameter mcc: (query) {{{estabelecimento_request_mcc_value}}} (optional)
     - parameter idTipoEstabelecimento: (query) {{{estabelecimento_request_id_tipo_estabelecimento_value}}} (optional)
     - parameter correspondencia: (query) {{{estabelecimento_request_correspondencia_value}}} (optional)
     - parameter idMoeda: (query) {{{estabelecimento_request_id_moeda_value}}} (optional)
     - parameter tipoPagamento: (query) {{{estabelecimento_request_tipo_pagamento_value}}} (optional)
     - parameter numeroEstabelecimento: (query) {{{estabelecimento_request_numero_estabelecimento_value}}} (optional)
     - parameter cep2: (query) {{{estabelecimento_request_cep2_value}}} (optional)
     - parameter nomeLogradouro2: (query) {{{estabelecimento_request_nome_logradouro2_value}}} (optional)
     - parameter numeroEndereco2: (query) {{{estabelecimento_request_numero_endereco2_value}}} (optional)
     - parameter complemento2: (query) {{{estabelecimento_request_complemento2_value}}} (optional)
     - parameter bairro2: (query) {{{estabelecimento_request_bairro2_value}}} (optional)
     - parameter cidade2: (query) {{{estabelecimento_request_cidade2_value}}} (optional)
     - parameter uf2: (query) {{{estabelecimento_request_uf2_value}}} (optional)
     - parameter flagMatriz: (query) {{{estabelecimento_request_flag_matriz_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET25(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, idGrupoEconomico: Int?, numeroReceitaFederal: String?, nome: String?, descricao: String?, nomeFantasia: String?, cep: String?, nomeLogradouro: String?, numeroEndereco: Int?, complemento: String?, bairro: String?, cidade: String?, uf: String?, pais: String?, dataCadastramento: String?, contato: String?, email: String?, flagArquivoSecrFazenda: Int?, flagCartaoDigitado: Int?, inativo: Int?, idPais: Int?, mcc: Int?, idTipoEstabelecimento: Int?, correspondencia: Int?, idMoeda: Int?, tipoPagamento: String?, numeroEstabelecimento: String?, cep2: String?, nomeLogradouro2: String?, numeroEndereco2: Int?, complemento2: String?, bairro2: String?, cidade2: String?, uf2: String?, flagMatriz: Int?, completion: ((data: PageEstabelecimentoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET25WithRequestBuilder(sort: sort, page: page, limit: limit, id: id, idGrupoEconomico: idGrupoEconomico, numeroReceitaFederal: numeroReceitaFederal, nome: nome, descricao: descricao, nomeFantasia: nomeFantasia, cep: cep, nomeLogradouro: nomeLogradouro, numeroEndereco: numeroEndereco, complemento: complemento, bairro: bairro, cidade: cidade, uf: uf, pais: pais, dataCadastramento: dataCadastramento, contato: contato, email: email, flagArquivoSecrFazenda: flagArquivoSecrFazenda, flagCartaoDigitado: flagCartaoDigitado, inativo: inativo, idPais: idPais, mcc: mcc, idTipoEstabelecimento: idTipoEstabelecimento, correspondencia: correspondencia, idMoeda: idMoeda, tipoPagamento: tipoPagamento, numeroEstabelecimento: numeroEstabelecimento, cep2: cep2, nomeLogradouro2: nomeLogradouro2, numeroEndereco2: numeroEndereco2, complemento2: complemento2, bairro2: bairro2, cidade2: cidade2, uf2: uf2, flagMatriz: flagMatriz).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{estabelecimento_resource_listar}}}
     
     - GET /api/estabelecimentos
     - {{{estabelecimento_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "uf2" : "aeiou",
    "obs" : "aeiou",
    "cidade" : "aeiou",
    "idPais" : 123456789,
    "numeroReceitaFederal" : 123456789,
    "flagMatriz" : 123,
    "bairro2" : "aeiou",
    "flagArquivoSecrFazenda" : 123,
    "cep2" : "aeiou",
    "mcc" : 123456789,
    "cep" : "aeiou",
    "uf" : "aeiou",
    "idTipoEstabelecimento" : 123456789,
    "nomeFantasia" : "aeiou",
    "complemento" : "aeiou",
    "flagCartaoDigitado" : 123,
    "correspondencia" : 123,
    "id" : 123456789,
    "contato" : "aeiou",
    "consulta" : {
      "tipoEntidade" : "aeiou",
      "dataHoraConsulta" : "2018-03-02T14:02:33.824Z",
      "status" : "aeiou"
    },
    "email" : "aeiou",
    "complemento2" : "aeiou",
    "nomeLogradouro" : "aeiou",
    "bairro" : "aeiou",
    "idMoeda" : 123456789,
    "cargoContato" : "aeiou",
    "dataCadastramento" : "aeiou",
    "nome" : "aeiou",
    "cidade2" : "aeiou",
    "numeroEndereco2" : "aeiou",
    "terminal" : "aeiou",
    "descricao" : "aeiou",
    "numeroEndereco" : "aeiou",
    "associadoSPCBrasil" : 123,
    "idGrupoEconomico" : 123456789,
    "nomeLogradouro2" : "aeiou",
    "consulta3" : "",
    "inativo" : 123,
    "consulta2" : "",
    "usuario" : "aeiou",
    "numeroEstabelecimento" : "aeiou",
    "tipoPagamento" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{estabelecimento_request_id_value}}} (optional)
     - parameter idGrupoEconomico: (query) {{{estabelecimento_request_id_grupo_economico_value}}} (optional)
     - parameter numeroReceitaFederal: (query) {{{estabelecimento_request_numero_receita_federal_value}}} (optional)
     - parameter nome: (query) {{{estabelecimento_request_nome_value}}} (optional)
     - parameter descricao: (query) {{{estabelecimento_request_descricao_value}}} (optional)
     - parameter nomeFantasia: (query) {{{estabelecimento_request_nome_fantasia_value}}} (optional)
     - parameter cep: (query) {{{estabelecimento_request_cep_value}}} (optional)
     - parameter nomeLogradouro: (query) {{{estabelecimento_request_nome_logradouro_value}}} (optional)
     - parameter numeroEndereco: (query) {{{estabelecimento_request_numero_endereco_value}}} (optional)
     - parameter complemento: (query) {{{estabelecimento_request_complemento_value}}} (optional)
     - parameter bairro: (query) {{{estabelecimento_request_bairro_value}}} (optional)
     - parameter cidade: (query) {{{estabelecimento_request_cidade_value}}} (optional)
     - parameter uf: (query) {{{estabelecimento_request_uf_value}}} (optional)
     - parameter pais: (query) {{{estabelecimento_request_pais_value}}} (optional)
     - parameter dataCadastramento: (query) {{{estabelecimento_request_data_cadastramento_value}}} (optional)
     - parameter contato: (query) {{{estabelecimento_request_contato_value}}} (optional)
     - parameter email: (query) {{{estabelecimento_request_email_value}}} (optional)
     - parameter flagArquivoSecrFazenda: (query) {{{estabelecimento_request_flag_arquivo_secr_fazenda_value}}} (optional)
     - parameter flagCartaoDigitado: (query) {{{estabelecimento_request_flag_cartao_digitado_value}}} (optional)
     - parameter inativo: (query) {{{estabelecimento_request_inativo_value}}} (optional)
     - parameter idPais: (query) {{{estabelecimento_request_id_pais_value}}} (optional)
     - parameter mcc: (query) {{{estabelecimento_request_mcc_value}}} (optional)
     - parameter idTipoEstabelecimento: (query) {{{estabelecimento_request_id_tipo_estabelecimento_value}}} (optional)
     - parameter correspondencia: (query) {{{estabelecimento_request_correspondencia_value}}} (optional)
     - parameter idMoeda: (query) {{{estabelecimento_request_id_moeda_value}}} (optional)
     - parameter tipoPagamento: (query) {{{estabelecimento_request_tipo_pagamento_value}}} (optional)
     - parameter numeroEstabelecimento: (query) {{{estabelecimento_request_numero_estabelecimento_value}}} (optional)
     - parameter cep2: (query) {{{estabelecimento_request_cep2_value}}} (optional)
     - parameter nomeLogradouro2: (query) {{{estabelecimento_request_nome_logradouro2_value}}} (optional)
     - parameter numeroEndereco2: (query) {{{estabelecimento_request_numero_endereco2_value}}} (optional)
     - parameter complemento2: (query) {{{estabelecimento_request_complemento2_value}}} (optional)
     - parameter bairro2: (query) {{{estabelecimento_request_bairro2_value}}} (optional)
     - parameter cidade2: (query) {{{estabelecimento_request_cidade2_value}}} (optional)
     - parameter uf2: (query) {{{estabelecimento_request_uf2_value}}} (optional)
     - parameter flagMatriz: (query) {{{estabelecimento_request_flag_matriz_value}}} (optional)

     - returns: RequestBuilder<PageEstabelecimentoResponse> 
     */
    public class func listarUsingGET25WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, idGrupoEconomico: Int?, numeroReceitaFederal: String?, nome: String?, descricao: String?, nomeFantasia: String?, cep: String?, nomeLogradouro: String?, numeroEndereco: Int?, complemento: String?, bairro: String?, cidade: String?, uf: String?, pais: String?, dataCadastramento: String?, contato: String?, email: String?, flagArquivoSecrFazenda: Int?, flagCartaoDigitado: Int?, inativo: Int?, idPais: Int?, mcc: Int?, idTipoEstabelecimento: Int?, correspondencia: Int?, idMoeda: Int?, tipoPagamento: String?, numeroEstabelecimento: String?, cep2: String?, nomeLogradouro2: String?, numeroEndereco2: Int?, complemento2: String?, bairro2: String?, cidade2: String?, uf2: String?, flagMatriz: Int?) -> RequestBuilder<PageEstabelecimentoResponse> {
        let path = "/api/estabelecimentos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "idGrupoEconomico": idGrupoEconomico,
            "numeroReceitaFederal": numeroReceitaFederal,
            "nome": nome,
            "descricao": descricao,
            "nomeFantasia": nomeFantasia,
            "cep": cep,
            "nomeLogradouro": nomeLogradouro,
            "numeroEndereco": numeroEndereco,
            "complemento": complemento,
            "bairro": bairro,
            "cidade": cidade,
            "uf": uf,
            "pais": pais,
            "dataCadastramento": dataCadastramento,
            "contato": contato,
            "email": email,
            "flagArquivoSecrFazenda": flagArquivoSecrFazenda,
            "flagCartaoDigitado": flagCartaoDigitado,
            "inativo": inativo,
            "idPais": idPais,
            "mcc": mcc,
            "idTipoEstabelecimento": idTipoEstabelecimento,
            "correspondencia": correspondencia,
            "idMoeda": idMoeda,
            "tipoPagamento": tipoPagamento,
            "numeroEstabelecimento": numeroEstabelecimento,
            "cep2": cep2,
            "nomeLogradouro2": nomeLogradouro2,
            "numeroEndereco2": numeroEndereco2,
            "complemento2": complemento2,
            "bairro2": bairro2,
            "cidade2": cidade2,
            "uf2": uf2,
            "flagMatriz": flagMatriz
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageEstabelecimentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{grupo_economico_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter razaoSocial: (query) {{{grupo_economico_request_razao_social_value}}} (optional)
     - parameter nomeCredor: (query) {{{grupo_economico_request_nome_credor_value}}} (optional)
     - parameter numeroReceitaFederal: (query) {{{grupo_economico_request_numero_receita_federal_value}}} (optional)
     - parameter inscricaoEstadual: (query) {{{grupo_economico_request_inscricao_estadual_value}}} (optional)
     - parameter contato: (query) {{{grupo_economico_request_contato_value}}} (optional)
     - parameter banco: (query) {{{grupo_economico_request_banco_value}}} (optional)
     - parameter agencia: (query) {{{grupo_economico_request_agencia_value}}} (optional)
     - parameter digitoAgencia: (query) {{{grupo_economico_request_digito_agencia_value}}} (optional)
     - parameter contaCorrente: (query) {{{grupo_economico_request_conta_corrente_value}}} (optional)
     - parameter digitoContaCorrente: (query) {{{grupo_economico_request_digito_conta_corrente_value}}} (optional)
     - parameter periodicidade: (query) {{{grupo_economico_request_periodicidade_value}}} (optional)
     - parameter pagamentoSemanal: (query) {{{grupo_economico_request_pagamento_semanal_value}}} (optional)
     - parameter pagamentoMensal: (query) {{{grupo_economico_request_pagamento_mensal_value}}} (optional)
     - parameter pagamentoDecendialPrimeiro: (query) {{{grupo_economico_request_pagamento_decendial_primeiro_value}}} (optional)
     - parameter pagamentoDecendialSegundo: (query) {{{grupo_economico_request_pagamento_decendial_segundo_value}}} (optional)
     - parameter pagamentoDecendialTerceiro: (query) {{{grupo_economico_request_pagamento_decendial_terceiro_value}}} (optional)
     - parameter pagamentoQuinzenalPrimeiro: (query) {{{grupo_economico_request_pagamento_quinzenal_primeiro_value}}} (optional)
     - parameter pagamentoQuinzenalSegundo: (query) {{{grupo_economico_request_pagamento_quinzenal_segundo_value}}} (optional)
     - parameter percentualRAV: (query) {{{grupo_economico_request_percentual_r_a_v_value}}} (optional)
     - parameter recebeRAV: (query) {{{grupo_economico_request_recebe_r_a_v_value}}} (optional)
     - parameter percentualMultiplica: (query) {{{grupo_economico_request_percentual_multiplica_value}}} (optional)
     - parameter taxaAdm: (query) {{{grupo_economico_request_taxa_adm_value}}} (optional)
     - parameter taxaBanco: (query) {{{grupo_economico_request_taxa_banco_value}}} (optional)
     - parameter limiteRAV: (query) {{{grupo_economico_request_limite_r_a_v_value}}} (optional)
     - parameter idCredorRAV: (query) {{{grupo_economico_request_id_credor_r_a_v_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET28(sort sort: [String]?, page: Int?, limit: Int?, razaoSocial: String?, nomeCredor: String?, numeroReceitaFederal: String?, inscricaoEstadual: String?, contato: String?, banco: Int?, agencia: Int?, digitoAgencia: String?, contaCorrente: String?, digitoContaCorrente: String?, periodicidade: String?, pagamentoSemanal: String?, pagamentoMensal: Int?, pagamentoDecendialPrimeiro: Int?, pagamentoDecendialSegundo: Int?, pagamentoDecendialTerceiro: Int?, pagamentoQuinzenalPrimeiro: Int?, pagamentoQuinzenalSegundo: Int?, percentualRAV: Double?, recebeRAV: String?, percentualMultiplica: Double?, taxaAdm: Double?, taxaBanco: Double?, limiteRAV: Double?, idCredorRAV: Int?, completion: ((data: PageGrupoEconomicoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET28WithRequestBuilder(sort: sort, page: page, limit: limit, razaoSocial: razaoSocial, nomeCredor: nomeCredor, numeroReceitaFederal: numeroReceitaFederal, inscricaoEstadual: inscricaoEstadual, contato: contato, banco: banco, agencia: agencia, digitoAgencia: digitoAgencia, contaCorrente: contaCorrente, digitoContaCorrente: digitoContaCorrente, periodicidade: periodicidade, pagamentoSemanal: pagamentoSemanal, pagamentoMensal: pagamentoMensal, pagamentoDecendialPrimeiro: pagamentoDecendialPrimeiro, pagamentoDecendialSegundo: pagamentoDecendialSegundo, pagamentoDecendialTerceiro: pagamentoDecendialTerceiro, pagamentoQuinzenalPrimeiro: pagamentoQuinzenalPrimeiro, pagamentoQuinzenalSegundo: pagamentoQuinzenalSegundo, percentualRAV: percentualRAV, recebeRAV: recebeRAV, percentualMultiplica: percentualMultiplica, taxaAdm: taxaAdm, taxaBanco: taxaBanco, limiteRAV: limiteRAV, idCredorRAV: idCredorRAV).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{grupo_economico_resource_listar}}}
     
     - GET /api/grupos-economicos
     - {{{grupo_economico_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "digitoAgencia" : "aeiou",
    "numeroReceitaFederal" : "aeiou",
    "percentualRAV" : 0.015,
    "pagamentoDecendialTerceiro" : 25,
    "pagamentoQuinzenalPrimeiro" : 5,
    "pagamentoDecendialSegundo" : 15,
    "agencia" : 123,
    "nomeCredor" : "Exemplo",
    "taxaBanco" : 0.1,
    "taxaAdm" : 0.1,
    "pagamentoMensal" : 10,
    "id" : 123456789,
    "contato" : "aeiou",
    "digitoContaCorrente" : "aeiou",
    "pagamentoQuinzenalSegundo" : 20,
    "banco" : 123,
    "recebeRAV" : "NAO_TEM_PERMISSAO_RAV",
    "percentualMultiplica" : 0.1,
    "idCredorRAV" : 1,
    "pagamentoDecendialPrimeiro" : 5,
    "inscricaoEstadual" : "aeiou",
    "contaCorrente" : "aeiou",
    "usuario" : "aeiou",
    "periodicidade" : "DIARIO",
    "razaoSocial" : "aeiou",
    "limiteRAV" : 0.015,
    "pagamentoSemanal" : "SEGUNDA"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter razaoSocial: (query) {{{grupo_economico_request_razao_social_value}}} (optional)
     - parameter nomeCredor: (query) {{{grupo_economico_request_nome_credor_value}}} (optional)
     - parameter numeroReceitaFederal: (query) {{{grupo_economico_request_numero_receita_federal_value}}} (optional)
     - parameter inscricaoEstadual: (query) {{{grupo_economico_request_inscricao_estadual_value}}} (optional)
     - parameter contato: (query) {{{grupo_economico_request_contato_value}}} (optional)
     - parameter banco: (query) {{{grupo_economico_request_banco_value}}} (optional)
     - parameter agencia: (query) {{{grupo_economico_request_agencia_value}}} (optional)
     - parameter digitoAgencia: (query) {{{grupo_economico_request_digito_agencia_value}}} (optional)
     - parameter contaCorrente: (query) {{{grupo_economico_request_conta_corrente_value}}} (optional)
     - parameter digitoContaCorrente: (query) {{{grupo_economico_request_digito_conta_corrente_value}}} (optional)
     - parameter periodicidade: (query) {{{grupo_economico_request_periodicidade_value}}} (optional)
     - parameter pagamentoSemanal: (query) {{{grupo_economico_request_pagamento_semanal_value}}} (optional)
     - parameter pagamentoMensal: (query) {{{grupo_economico_request_pagamento_mensal_value}}} (optional)
     - parameter pagamentoDecendialPrimeiro: (query) {{{grupo_economico_request_pagamento_decendial_primeiro_value}}} (optional)
     - parameter pagamentoDecendialSegundo: (query) {{{grupo_economico_request_pagamento_decendial_segundo_value}}} (optional)
     - parameter pagamentoDecendialTerceiro: (query) {{{grupo_economico_request_pagamento_decendial_terceiro_value}}} (optional)
     - parameter pagamentoQuinzenalPrimeiro: (query) {{{grupo_economico_request_pagamento_quinzenal_primeiro_value}}} (optional)
     - parameter pagamentoQuinzenalSegundo: (query) {{{grupo_economico_request_pagamento_quinzenal_segundo_value}}} (optional)
     - parameter percentualRAV: (query) {{{grupo_economico_request_percentual_r_a_v_value}}} (optional)
     - parameter recebeRAV: (query) {{{grupo_economico_request_recebe_r_a_v_value}}} (optional)
     - parameter percentualMultiplica: (query) {{{grupo_economico_request_percentual_multiplica_value}}} (optional)
     - parameter taxaAdm: (query) {{{grupo_economico_request_taxa_adm_value}}} (optional)
     - parameter taxaBanco: (query) {{{grupo_economico_request_taxa_banco_value}}} (optional)
     - parameter limiteRAV: (query) {{{grupo_economico_request_limite_r_a_v_value}}} (optional)
     - parameter idCredorRAV: (query) {{{grupo_economico_request_id_credor_r_a_v_value}}} (optional)

     - returns: RequestBuilder<PageGrupoEconomicoResponse> 
     */
    public class func listarUsingGET28WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, razaoSocial: String?, nomeCredor: String?, numeroReceitaFederal: String?, inscricaoEstadual: String?, contato: String?, banco: Int?, agencia: Int?, digitoAgencia: String?, contaCorrente: String?, digitoContaCorrente: String?, periodicidade: String?, pagamentoSemanal: String?, pagamentoMensal: Int?, pagamentoDecendialPrimeiro: Int?, pagamentoDecendialSegundo: Int?, pagamentoDecendialTerceiro: Int?, pagamentoQuinzenalPrimeiro: Int?, pagamentoQuinzenalSegundo: Int?, percentualRAV: Double?, recebeRAV: String?, percentualMultiplica: Double?, taxaAdm: Double?, taxaBanco: Double?, limiteRAV: Double?, idCredorRAV: Int?) -> RequestBuilder<PageGrupoEconomicoResponse> {
        let path = "/api/grupos-economicos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "razaoSocial": razaoSocial,
            "nomeCredor": nomeCredor,
            "numeroReceitaFederal": numeroReceitaFederal,
            "inscricaoEstadual": inscricaoEstadual,
            "contato": contato,
            "banco": banco,
            "agencia": agencia,
            "digitoAgencia": digitoAgencia,
            "contaCorrente": contaCorrente,
            "digitoContaCorrente": digitoContaCorrente,
            "periodicidade": periodicidade,
            "pagamentoSemanal": pagamentoSemanal,
            "pagamentoMensal": pagamentoMensal,
            "pagamentoDecendialPrimeiro": pagamentoDecendialPrimeiro,
            "pagamentoDecendialSegundo": pagamentoDecendialSegundo,
            "pagamentoDecendialTerceiro": pagamentoDecendialTerceiro,
            "pagamentoQuinzenalPrimeiro": pagamentoQuinzenalPrimeiro,
            "pagamentoQuinzenalSegundo": pagamentoQuinzenalSegundo,
            "percentualRAV": percentualRAV,
            "recebeRAV": recebeRAV,
            "percentualMultiplica": percentualMultiplica,
            "taxaAdm": taxaAdm,
            "taxaBanco": taxaBanco,
            "limiteRAV": limiteRAV,
            "idCredorRAV": idCredorRAV
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageGrupoEconomicoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{grupo_origem_comercial_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter nome: (query) {{{grupo_origem_comercial_request_nome_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET29(sort sort: [String]?, page: Int?, limit: Int?, nome: String?, completion: ((data: PageGrupoOrigemComercialResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET29WithRequestBuilder(sort: sort, page: page, limit: limit, nome: nome).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{grupo_origem_comercial_resource_listar}}}
     
     - GET /api/grupos-origens-comerciais
     - {{{grupo_origem_comercial_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nome" : "aeiou",
    "id" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter nome: (query) {{{grupo_origem_comercial_request_nome_value}}} (optional)

     - returns: RequestBuilder<PageGrupoOrigemComercialResponse> 
     */
    public class func listarUsingGET29WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, nome: String?) -> RequestBuilder<PageGrupoOrigemComercialResponse> {
        let path = "/api/grupos-origens-comerciais"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "nome": nome
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageGrupoOrigemComercialResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{maquineta_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idEstabelecimento: (query) {{{maquineta_request_id_estabelecimento_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET32(sort sort: [String]?, page: Int?, limit: Int?, idEstabelecimento: Int?, completion: ((data: PageMaquinetaResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET32WithRequestBuilder(sort: sort, page: page, limit: limit, idEstabelecimento: idEstabelecimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{maquineta_resource_listar}}}
     
     - GET /api/maquinetas
     - {{{maquineta_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "dataHoraCadastramento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "idEstabelecimento" : 123456789,
    "usuarioApl" : "aeiou",
    "valor" : 1.3579000000000001069366817318950779736042022705078125,
    "idTipoMaquineta" : 123456789,
    "id" : 123456789,
    "terminal" : "aeiou",
    "dataHoraImplantacao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idEstabelecimento: (query) {{{maquineta_request_id_estabelecimento_value}}} (optional)

     - returns: RequestBuilder<PageMaquinetaResponse> 
     */
    public class func listarUsingGET32WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idEstabelecimento: Int?) -> RequestBuilder<PageMaquinetaResponse> {
        let path = "/api/maquinetas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idEstabelecimento": idEstabelecimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageMaquinetaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{moeda_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter codigoMoeda: (query) {{{moeda_request_codigo_moeda_value}}} (optional)
     - parameter simbolo: (query) {{{moeda_request_simbolo_value}}} (optional)
     - parameter descricao: (query) {{{moeda_request_descricao_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET33(sort sort: [String]?, page: Int?, limit: Int?, codigoMoeda: String?, simbolo: String?, descricao: String?, completion: ((data: PageMoedaResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET33WithRequestBuilder(sort: sort, page: page, limit: limit, codigoMoeda: codigoMoeda, simbolo: simbolo, descricao: descricao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{moeda_resource_listar}}}
     
     - GET /api/tipos-moedas
     - {{{moeda_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "simbolo" : "aeiou",
    "id" : 123456789,
    "codigoMoeda" : "aeiou",
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter codigoMoeda: (query) {{{moeda_request_codigo_moeda_value}}} (optional)
     - parameter simbolo: (query) {{{moeda_request_simbolo_value}}} (optional)
     - parameter descricao: (query) {{{moeda_request_descricao_value}}} (optional)

     - returns: RequestBuilder<PageMoedaResponse> 
     */
    public class func listarUsingGET33WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, codigoMoeda: String?, simbolo: String?, descricao: String?) -> RequestBuilder<PageMoedaResponse> {
        let path = "/api/tipos-moedas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "codigoMoeda": codigoMoeda,
            "simbolo": simbolo,
            "descricao": descricao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageMoedaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{operacao_credor_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idOperacao: (query) {{{operacao_credor_request_id_operacao_value}}} (optional)
     - parameter idCredor: (query) {{{operacao_credor_request_id_credor_value}}} (optional)
     - parameter idProduto: (query) {{{operacao_credor_request_id_produto_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET34(sort sort: [String]?, page: Int?, limit: Int?, idOperacao: Int?, idCredor: Int?, idProduto: Int?, completion: ((data: PageOperacaoCredorResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET34WithRequestBuilder(sort: sort, page: page, limit: limit, idOperacao: idOperacao, idCredor: idCredor, idProduto: idProduto).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{operacao_credor_resource_listar}}}
     
     - GET /api/regras-operacoes-estabelecimentos
     - {{{operacao_credor_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "diasAfastamento" : 29,
    "fatorMultiplicador" : "AGENDA",
    "idOperacao" : 2,
    "vencimentoPrimeiraParcela" : 29,
    "planoMaximo" : 5,
    "planoMinimo" : 1,
    "idProduto" : 1,
    "idGrupoEconomico" : 1,
    "remuneracaoPercentual" : 0.04,
    "flagTaxaFixada" : true,
    "remuneracaoFixa" : 0.0,
    "periodicidade" : "MENSAL",
    "id" : 2
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idOperacao: (query) {{{operacao_credor_request_id_operacao_value}}} (optional)
     - parameter idCredor: (query) {{{operacao_credor_request_id_credor_value}}} (optional)
     - parameter idProduto: (query) {{{operacao_credor_request_id_produto_value}}} (optional)

     - returns: RequestBuilder<PageOperacaoCredorResponse> 
     */
    public class func listarUsingGET34WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idOperacao: Int?, idCredor: Int?, idProduto: Int?) -> RequestBuilder<PageOperacaoCredorResponse> {
        let path = "/api/regras-operacoes-estabelecimentos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idOperacao": idOperacao,
            "idCredor": idCredor,
            "idProduto": idProduto
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageOperacaoCredorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{telefone_estabelecimento_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idEstabelecimento: (query) {{{telefone_estabelecimento_request_id_estabelecimento_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET49(sort sort: [String]?, page: Int?, limit: Int?, idEstabelecimento: Int?, completion: ((data: PageTelefoneEstabelecimentoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET49WithRequestBuilder(sort: sort, page: page, limit: limit, idEstabelecimento: idEstabelecimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{telefone_estabelecimento_resource_listar}}}
     
     - GET /api/telefones-estabelecimentos
     - {{{telefone_estabelecimento_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idEstabelecimento" : 123456789,
    "telefone" : "aeiou",
    "ddd" : "aeiou",
    "id" : 123456789,
    "ramal" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idEstabelecimento: (query) {{{telefone_estabelecimento_request_id_estabelecimento_value}}} (optional)

     - returns: RequestBuilder<PageTelefoneEstabelecimentoResponse> 
     */
    public class func listarUsingGET49WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idEstabelecimento: Int?) -> RequestBuilder<PageTelefoneEstabelecimentoResponse> {
        let path = "/api/telefones-estabelecimentos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idEstabelecimento": idEstabelecimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTelefoneEstabelecimentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{terminal_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{terminal_request_id_value}}} (optional)
     - parameter terminal: (query) {{{terminal_request_terminal_value}}} (optional)
     - parameter numeroEstabelecimento: (query) {{{terminal_request_numero_estabelecimento_value}}} (optional)
     - parameter idEstabelecimento: (query) {{{terminal_request_id_estabelecimento_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET51(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, terminal: String?, numeroEstabelecimento: Int?, idEstabelecimento: Int?, completion: ((data: PageTerminalResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET51WithRequestBuilder(sort: sort, page: page, limit: limit, id: id, terminal: terminal, numeroEstabelecimento: numeroEstabelecimento, idEstabelecimento: idEstabelecimento).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{terminal_resource_listar}}}
     
     - GET /api/terminais
     - {{{terminal_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "flagTerminalVirtual" : false,
    "idEstabelecimento" : 123456789,
    "flagConsultaExtrato" : false,
    "id" : 123456789,
    "terminal" : "aeiou",
    "numeroEstabelecimento" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query) {{{terminal_request_id_value}}} (optional)
     - parameter terminal: (query) {{{terminal_request_terminal_value}}} (optional)
     - parameter numeroEstabelecimento: (query) {{{terminal_request_numero_estabelecimento_value}}} (optional)
     - parameter idEstabelecimento: (query) {{{terminal_request_id_estabelecimento_value}}} (optional)

     - returns: RequestBuilder<PageTerminalResponse> 
     */
    public class func listarUsingGET51WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, terminal: String?, numeroEstabelecimento: Int?, idEstabelecimento: Int?) -> RequestBuilder<PageTerminalResponse> {
        let path = "/api/terminais"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "terminal": terminal,
            "numeroEstabelecimento": numeroEstabelecimento,
            "idEstabelecimento": idEstabelecimento
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTerminalResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idAdquirente: (query) {{{vinculo_estabelecimento_adquirente_request_id_adquirente_value}}} (optional)
     - parameter idEstabelecimento: (query) {{{vinculo_estabelecimento_adquirente_request_id_estabelecimento_value}}} (optional)
     - parameter codigoEstabelecimentoAdquirente: (query) {{{vinculo_estabelecimento_adquirente_request_codigo_estabelecimento_adquirente_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET64(sort sort: [String]?, page: Int?, limit: Int?, idAdquirente: Int?, idEstabelecimento: Int?, codigoEstabelecimentoAdquirente: String?, completion: ((data: PageVinculoEstabelecimentoAdquirenteResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET64WithRequestBuilder(sort: sort, page: page, limit: limit, idAdquirente: idAdquirente, idEstabelecimento: idEstabelecimento, codigoEstabelecimentoAdquirente: codigoEstabelecimentoAdquirente).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_listar}}}
     
     - GET /api/adquirentes-estabelecimento
     - {{{vinculo_estabelecimento_adquirente_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "idAdquirente" : 123456789,
    "idEstabelecimento" : 123456789,
    "mensagem" : "aeiou",
    "dataHoraCadastro" : "aeiou",
    "id" : 123456789,
    "codigoEstabelecimentoAdquirente" : "aeiou",
    "status" : 123
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idAdquirente: (query) {{{vinculo_estabelecimento_adquirente_request_id_adquirente_value}}} (optional)
     - parameter idEstabelecimento: (query) {{{vinculo_estabelecimento_adquirente_request_id_estabelecimento_value}}} (optional)
     - parameter codigoEstabelecimentoAdquirente: (query) {{{vinculo_estabelecimento_adquirente_request_codigo_estabelecimento_adquirente_value}}} (optional)

     - returns: RequestBuilder<PageVinculoEstabelecimentoAdquirenteResponse> 
     */
    public class func listarUsingGET64WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idAdquirente: Int?, idEstabelecimento: Int?, codigoEstabelecimentoAdquirente: String?) -> RequestBuilder<PageVinculoEstabelecimentoAdquirenteResponse> {
        let path = "/api/adquirentes-estabelecimento"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idAdquirente": idAdquirente,
            "idEstabelecimento": idEstabelecimento,
            "codigoEstabelecimentoAdquirente": codigoEstabelecimentoAdquirente
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageVinculoEstabelecimentoAdquirenteResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{vinculo_operacao_resource_listar}}}
     
     - parameter id: (path) {{{vinculo_operacao_resource_listar_param_id}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idProduto: (query) {{{vinculo_operacao_request_id_produto_value}}} (optional)
     - parameter idOperacao: (query) {{{vinculo_operacao_request_id_operacao_value}}} (optional)
     - parameter codigoMCC: (query) {{{vinculo_operacao_request_codigo_m_c_c_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET65(id id: Int, sort: [String]?, page: Int?, limit: Int?, idProduto: Int?, idOperacao: Int?, codigoMCC: Int?, completion: ((data: PageVinculoOperacaoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET65WithRequestBuilder(id: id, sort: sort, page: page, limit: limit, idProduto: idProduto, idOperacao: idOperacao, codigoMCC: codigoMCC).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{vinculo_operacao_resource_listar}}}
     
     - GET /api/estabelecimentos/{id}/operacoes
     - {{{vinculo_operacao_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "codigoMCC" : 123,
    "idProduto" : 123456789,
    "idOperacao" : 123456789,
    "codigoProcessamento" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) {{{vinculo_operacao_resource_listar_param_id}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idProduto: (query) {{{vinculo_operacao_request_id_produto_value}}} (optional)
     - parameter idOperacao: (query) {{{vinculo_operacao_request_id_operacao_value}}} (optional)
     - parameter codigoMCC: (query) {{{vinculo_operacao_request_codigo_m_c_c_value}}} (optional)

     - returns: RequestBuilder<PageVinculoOperacaoResponse> 
     */
    public class func listarUsingGET65WithRequestBuilder(id id: Int, sort: [String]?, page: Int?, limit: Int?, idProduto: Int?, idOperacao: Int?, codigoMCC: Int?) -> RequestBuilder<PageVinculoOperacaoResponse> {
        var path = "/api/estabelecimentos/{id}/operacoes"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idProduto": idProduto,
            "idOperacao": idOperacao,
            "codigoMCC": codigoMCC
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageVinculoOperacaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{maquineta_resource_salvar}}}
     
     - parameter maquinetaPersist: (body) maquinetaPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST19(maquinetaPersist maquinetaPersist: MaquinetaPersist, completion: ((data: MaquinetaResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST19WithRequestBuilder(maquinetaPersist: maquinetaPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{maquineta_resource_salvar}}}
     
     - POST /api/maquinetas
     - {{{maquineta_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "dataHoraCadastramento" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idEstabelecimento" : 123456789,
  "usuarioApl" : "aeiou",
  "valor" : 1.3579000000000001069366817318950779736042022705078125,
  "idTipoMaquineta" : 123456789,
  "id" : 123456789,
  "terminal" : "aeiou",
  "dataHoraImplantacao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
}}]
     
     - parameter maquinetaPersist: (body) maquinetaPersist 

     - returns: RequestBuilder<MaquinetaResponse> 
     */
    public class func salvarUsingPOST19WithRequestBuilder(maquinetaPersist maquinetaPersist: MaquinetaPersist) -> RequestBuilder<MaquinetaResponse> {
        let path = "/api/maquinetas"
        let URLString = PierAPI.basePath + path
        
        let parameters = maquinetaPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<MaquinetaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{operacao_credor_resource_salvar}}}
     
     - parameter operacaoCredorPersist: (body) operacaoCredorPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST20(operacaoCredorPersist operacaoCredorPersist: OperacaoCredorPersist, completion: ((data: OperacaoCredorResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST20WithRequestBuilder(operacaoCredorPersist: operacaoCredorPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{operacao_credor_resource_salvar}}}
     
     - POST /api/regras-operacoes-estabelecimentos
     - {{{operacao_credor_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "diasAfastamento" : 29,
  "fatorMultiplicador" : "AGENDA",
  "idOperacao" : 2,
  "vencimentoPrimeiraParcela" : 29,
  "planoMaximo" : 5,
  "planoMinimo" : 1,
  "idProduto" : 1,
  "idGrupoEconomico" : 1,
  "remuneracaoPercentual" : 0.04,
  "flagTaxaFixada" : true,
  "remuneracaoFixa" : 0.0,
  "periodicidade" : "MENSAL",
  "id" : 2
}}]
     
     - parameter operacaoCredorPersist: (body) operacaoCredorPersist 

     - returns: RequestBuilder<OperacaoCredorResponse> 
     */
    public class func salvarUsingPOST20WithRequestBuilder(operacaoCredorPersist operacaoCredorPersist: OperacaoCredorPersist) -> RequestBuilder<OperacaoCredorResponse> {
        let path = "/api/regras-operacoes-estabelecimentos"
        let URLString = PierAPI.basePath + path
        
        let parameters = operacaoCredorPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<OperacaoCredorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{telefone_estabelecimento_resource_salvar}}}
     
     - parameter telefoneEstabelecimentoPersist: (body) telefoneEstabelecimentoPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST27(telefoneEstabelecimentoPersist telefoneEstabelecimentoPersist: TelefoneEstabelecimentoPersist, completion: ((data: TelefoneEstabelecimentoResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST27WithRequestBuilder(telefoneEstabelecimentoPersist: telefoneEstabelecimentoPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{telefone_estabelecimento_resource_salvar}}}
     
     - POST /api/telefones-estabelecimentos
     - {{{telefone_estabelecimento_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "idEstabelecimento" : 123456789,
  "telefone" : "aeiou",
  "ddd" : "aeiou",
  "id" : 123456789,
  "ramal" : "aeiou"
}}]
     
     - parameter telefoneEstabelecimentoPersist: (body) telefoneEstabelecimentoPersist 

     - returns: RequestBuilder<TelefoneEstabelecimentoResponse> 
     */
    public class func salvarUsingPOST27WithRequestBuilder(telefoneEstabelecimentoPersist telefoneEstabelecimentoPersist: TelefoneEstabelecimentoPersist) -> RequestBuilder<TelefoneEstabelecimentoResponse> {
        let path = "/api/telefones-estabelecimentos"
        let URLString = PierAPI.basePath + path
        
        let parameters = telefoneEstabelecimentoPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TelefoneEstabelecimentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{terminal_resource_salvar}}}
     
     - parameter terminalPersist: (body) terminalPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST29(terminalPersist terminalPersist: TerminalPersist, completion: ((data: TerminalResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST29WithRequestBuilder(terminalPersist: terminalPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{terminal_resource_salvar}}}
     
     - POST /api/terminais
     - {{{terminal_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "flagTerminalVirtual" : false,
  "idEstabelecimento" : 123456789,
  "flagConsultaExtrato" : false,
  "id" : 123456789,
  "terminal" : "aeiou",
  "numeroEstabelecimento" : 123456789
}}]
     
     - parameter terminalPersist: (body) terminalPersist 

     - returns: RequestBuilder<TerminalResponse> 
     */
    public class func salvarUsingPOST29WithRequestBuilder(terminalPersist terminalPersist: TerminalPersist) -> RequestBuilder<TerminalResponse> {
        let path = "/api/terminais"
        let URLString = PierAPI.basePath + path
        
        let parameters = terminalPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TerminalResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_salvar}}}
     
     - parameter vinculoEstabelecimentoAdquirentePersist: (body) vinculoEstabelecimentoAdquirentePersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST34(vinculoEstabelecimentoAdquirentePersist vinculoEstabelecimentoAdquirentePersist: VinculoEstabelecimentoAdquirentePersist, completion: ((data: VinculoEstabelecimentoAdquirenteResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST34WithRequestBuilder(vinculoEstabelecimentoAdquirentePersist: vinculoEstabelecimentoAdquirentePersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{vinculo_estabelecimento_adquirente_resource_salvar}}}
     
     - POST /api/adquirentes-estabelecimento
     - {{{vinculo_estabelecimento_adquirente_resource_salvar_notes}}}
     - examples: [{contentType=application/json, example={
  "idAdquirente" : 123456789,
  "idEstabelecimento" : 123456789,
  "mensagem" : "aeiou",
  "dataHoraCadastro" : "aeiou",
  "id" : 123456789,
  "codigoEstabelecimentoAdquirente" : "aeiou",
  "status" : 123
}}]
     
     - parameter vinculoEstabelecimentoAdquirentePersist: (body) vinculoEstabelecimentoAdquirentePersist 

     - returns: RequestBuilder<VinculoEstabelecimentoAdquirenteResponse> 
     */
    public class func salvarUsingPOST34WithRequestBuilder(vinculoEstabelecimentoAdquirentePersist vinculoEstabelecimentoAdquirentePersist: VinculoEstabelecimentoAdquirentePersist) -> RequestBuilder<VinculoEstabelecimentoAdquirenteResponse> {
        let path = "/api/adquirentes-estabelecimento"
        let URLString = PierAPI.basePath + path
        
        let parameters = vinculoEstabelecimentoAdquirentePersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<VinculoEstabelecimentoAdquirenteResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
