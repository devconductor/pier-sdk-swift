//
// OrigemComercialAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class OrigemComercialAPI: APIBase {
    /**
     
     Opera\u00C3\u00A7\u00C3\u00A3o utilizada para consultar uma determinada Origem Comercial 
     
     - parameter idOrigemComercial: (path) ID da Origem Comercial 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarOrigemComercialUsingGET(idOrigemComercial idOrigemComercial: Int, completion: ((data: OrigemComercial?, error: ErrorType?) -> Void)) {
        consultarOrigemComercialUsingGETWithRequestBuilder(idOrigemComercial: idOrigemComercial).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Opera\u00C3\u00A7\u00C3\u00A3o utilizada para consultar uma determinada Origem Comercial 
     
     - GET /api/origens-comerciais/{idOrigemComercial}
     - Este m\u00C3\u00A9todo permite que sejam listados os registros de uma determinada Origem Comercial existente na base do emissor. Para isso, \u00C3\u00A9 preciso informar o seu respectivo c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o (id). 
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "nome" : "aeiou",
  "id" : 123456789,
  "status" : "aeiou"
}}]
     
     - parameter idOrigemComercial: (path) ID da Origem Comercial 

     - returns: RequestBuilder<OrigemComercial> 
     */
    public class func consultarOrigemComercialUsingGETWithRequestBuilder(idOrigemComercial idOrigemComercial: Int) -> RequestBuilder<OrigemComercial> {
        var path = "/api/origens-comerciais/{idOrigemComercial}"
        path = path.stringByReplacingOccurrencesOfString("{idOrigemComercial}", withString: "\(idOrigemComercial)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<OrigemComercial>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Opera\u00C3\u00A7\u00C3\u00A3o utilizada para listar Origens Comerciais 
     
     - parameter idOrigemComercial: (query) ID da Origem Comercial (optional)
     - parameter nome: (query) Nome da Origem Comercial (optional)
     - parameter status: (query) Status da Origem Comercial (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 100, Max = 100) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarOrigensComerciaisUsingGET(idOrigemComercial idOrigemComercial: Int?, nome: String?, status: String?, page: Int?, limit: Int?, completion: ((data: PageOrigensComerciais?, error: ErrorType?) -> Void)) {
        listarOrigensComerciaisUsingGETWithRequestBuilder(idOrigemComercial: idOrigemComercial, nome: nome, status: status, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Opera\u00C3\u00A7\u00C3\u00A3o utilizada para listar Origens Comerciais 
     
     - GET /api/origens-comerciais
     - Este m\u00C3\u00A9todo permite que sejam listadas as Origens Comerciais existentes na base do emissor.
     - API Key:
       - type: apiKey access_token 
       - name: access_token
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nome" : "aeiou",
    "id" : 123456789,
    "status" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter idOrigemComercial: (query) ID da Origem Comercial (optional)
     - parameter nome: (query) Nome da Origem Comercial (optional)
     - parameter status: (query) Status da Origem Comercial (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 100, Max = 100) (optional)

     - returns: RequestBuilder<PageOrigensComerciais> 
     */
    public class func listarOrigensComerciaisUsingGETWithRequestBuilder(idOrigemComercial idOrigemComercial: Int?, nome: String?, status: String?, page: Int?, limit: Int?) -> RequestBuilder<PageOrigensComerciais> {
        let path = "/api/origens-comerciais"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_origem_comercial": idOrigemComercial,
            "nome": nome,
            "status": status,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageOrigensComerciais>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
