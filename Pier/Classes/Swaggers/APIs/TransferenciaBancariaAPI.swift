//
// TransferenciaBancariaAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class TransferenciaBancariaAPI: APIBase {
    /**
     
     Atualiza conta banc\u00C3\u00A1ria portador
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria do portador (id). 
     - parameter update: (body) update 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func atualizarUsingPUT1(id id: Int, update: ContaBancariaPortadorUpdate, completion: ((data: ContaBancariaPortadorResponse?, error: ErrorType?) -> Void)) {
        atualizarUsingPUT1WithRequestBuilder(id: id, update: update).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Atualiza conta banc\u00C3\u00A1ria portador
     
     - PUT /api/contas-bancarias-portador/{id}
     - Esse recurso permite atualizar uma conta banc\u00C3\u00A1ria do portador.
     - examples: [{contentType=application/json, example={
  "nomeAgencia" : "aeiou",
  "idConta" : 123456789,
  "numeroReceiraFederal" : "aeiou",
  "digitoAgencia" : "aeiou",
  "banco" : 123456789,
  "favorecido" : "aeiou",
  "flagAtivo" : 123,
  "titularidade" : 123,
  "idPessoaFisica" : 123456789,
  "numeroConta" : "aeiou",
  "digitoConta" : "aeiou",
  "id" : 123456789,
  "flagContaPoupanca" : 123,
  "numeroAgencia" : "aeiou",
  "flagContaOrigemDoc" : 123
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria do portador (id). 
     - parameter update: (body) update 

     - returns: RequestBuilder<ContaBancariaPortadorResponse> 
     */
    public class func atualizarUsingPUT1WithRequestBuilder(id id: Int, update: ContaBancariaPortadorUpdate) -> RequestBuilder<ContaBancariaPortadorResponse> {
        var path = "/api/contas-bancarias-portador/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = update.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ContaBancariaPortadorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Realiza a consulta de uma transfer\u00C3\u00AAncia banc\u00C3\u00A1ria de cr\u00C3\u00A9dito entre contas banc\u00C3\u00A1rias de um portador
     
     - parameter idTransferencia: (path) Id Transfer\u00C3\u00AAncia 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarTransferenciaBancariaUsingGET(idTransferencia idTransferencia: Int, completion: ((data: TransferenciaCreditoContaBancariaResponse?, error: ErrorType?) -> Void)) {
        consultarTransferenciaBancariaUsingGETWithRequestBuilder(idTransferencia: idTransferencia).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realiza a consulta de uma transfer\u00C3\u00AAncia banc\u00C3\u00A1ria de cr\u00C3\u00A9dito entre contas banc\u00C3\u00A1rias de um portador
     
     - GET /api/transferencias-creditos-contas-bancarias/{idTransferencia}
     - Recurso utilizado para recuperar uma transfer\u00C3\u00AAncia de cr\u00C3\u00A9dito entre contas banc\u00C3\u00A1ria de um portador, utiliza o ID da transfer\u00C3\u00AAncia banc\u00C3\u00A1riae o idConta para realizar a consulta.
     - examples: [{contentType=application/json, example={
  "digitoAgencia" : "aeiou",
  "numeroParcelas" : 123,
  "idOperacao" : 123456789,
  "statusProcessamento" : "aeiou",
  "idAutorizacao" : 123456789,
  "valorCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "idTransferencia" : 123456789,
  "valorCET" : 1.3579000000000001069366817318950779736042022705078125,
  "dataCompra" : "aeiou",
  "dataVencimentoPadrao" : "aeiou",
  "valorContrato" : 1.3579000000000001069366817318950779736042022705078125,
  "valorTAC" : 1.3579000000000001069366817318950779736042022705078125,
  "dataAutorizacao" : "aeiou",
  "nsuOrigem" : 123456789,
  "numeroConta" : "aeiou",
  "digitoConta" : "aeiou",
  "documentoFavorecido" : "aeiou",
  "idCartao" : 123456789,
  "idConta" : 123456789,
  "banco" : 123456789,
  "codigoAutorizacao" : "aeiou",
  "valorParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "nomeFavorecido" : "aeiou",
  "dataMovimento" : "aeiou",
  "taxaJuros" : 1.3579000000000001069366817318950779736042022705078125,
  "flagContaPoupanca" : false,
  "numeroAgencia" : "aeiou",
  "valorTaxaSaque" : 1.3579000000000001069366817318950779736042022705078125,
  "dataVencimentoReal" : "aeiou",
  "valorIOF" : 1.3579000000000001069366817318950779736042022705078125,
  "status" : "aeiou"
}}]
     
     - parameter idTransferencia: (path) Id Transfer\u00C3\u00AAncia 

     - returns: RequestBuilder<TransferenciaCreditoContaBancariaResponse> 
     */
    public class func consultarTransferenciaBancariaUsingGETWithRequestBuilder(idTransferencia idTransferencia: Int) -> RequestBuilder<TransferenciaCreditoContaBancariaResponse> {
        var path = "/api/transferencias-creditos-contas-bancarias/{idTransferencia}"
        path = path.stringByReplacingOccurrencesOfString("{idTransferencia}", withString: "\(idTransferencia)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TransferenciaCreditoContaBancariaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Consulta conta banc\u00C3\u00A1ria portador
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET11(id id: Int, completion: ((data: ContaBancariaPortadorResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET11WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consulta conta banc\u00C3\u00A1ria portador
     
     - GET /api/contas-bancarias-portador/{id}
     - Esse recurso permite consultar uma conta banc\u00C3\u00A1ria do portador a partir do seu c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o (id).
     - examples: [{contentType=application/json, example={
  "nomeAgencia" : "aeiou",
  "idConta" : 123456789,
  "numeroReceiraFederal" : "aeiou",
  "digitoAgencia" : "aeiou",
  "banco" : 123456789,
  "favorecido" : "aeiou",
  "flagAtivo" : 123,
  "titularidade" : 123,
  "idPessoaFisica" : 123456789,
  "numeroConta" : "aeiou",
  "digitoConta" : "aeiou",
  "id" : 123456789,
  "flagContaPoupanca" : 123,
  "numeroAgencia" : "aeiou",
  "flagContaOrigemDoc" : 123
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria (id). 

     - returns: RequestBuilder<ContaBancariaPortadorResponse> 
     */
    public class func consultarUsingGET11WithRequestBuilder(id id: Int) -> RequestBuilder<ContaBancariaPortadorResponse> {
        var path = "/api/contas-bancarias-portador/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ContaBancariaPortadorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Consultar uma transfer\u00C3\u00AAncia banc\u00C3\u00A1ria para um banco
     
     - parameter id: (path) Id Conta 
     - parameter idTransferencia: (path) Id Transfer\u00C3\u00AAncia 
     - parameter idContaBancariaDestino: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria de destino (id) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET40(id id: Int, idTransferencia: Int, idContaBancariaDestino: Int?, completion: ((data: TransferenciaBancariaResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET40WithRequestBuilder(id: id, idTransferencia: idTransferencia, idContaBancariaDestino: idContaBancariaDestino).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consultar uma transfer\u00C3\u00AAncia banc\u00C3\u00A1ria para um banco
     
     - GET /api/contas/{id}/transferencias-creditos-contas-bancarias/{idTransferencia}
     - Este recurso permite consultar os detalhes de uma determinada transfer\u00C3\u00AAncia de cr\u00C3\u00A9dito realizada para uma conta banc\u00C3\u00A1ria. De modo geral, esta opera\u00C3\u00A7\u00C3\u00A3o poder\u00C3\u00A1 ser utilizada para uma consulta simples destes detalhes ou para realizar a montagem de um comprovante de 2\u00C2\u00AA via de transfer\u00C3\u00AAncia entre contas.
     - examples: [{contentType=application/json, example={
  "digitoAgencia" : "aeiou",
  "numeroParcelas" : 123,
  "idOperacao" : 123456789,
  "idAutorizacao" : 123456789,
  "origem" : "aeiou",
  "valorCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "idTransferencia" : 123456789,
  "idContaPortador" : 123456789,
  "dataCompra" : "aeiou",
  "dataVencimentoPadrao" : "aeiou",
  "nsuorigem" : 123456789,
  "valorContrato" : 1.3579000000000001069366817318950779736042022705078125,
  "valorTAC" : 1.3579000000000001069366817318950779736042022705078125,
  "dataAutorizacao" : "aeiou",
  "numeroConta" : "aeiou",
  "digitoConta" : "aeiou",
  "documentoFavorecido" : "aeiou",
  "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
  "idCartao" : 123456789,
  "idEstabelecimento" : 123456789,
  "idConta" : 123456789,
  "valor" : 1.3579000000000001069366817318950779736042022705078125,
  "banco" : 123456789,
  "terminal" : "aeiou",
  "codigoAutorizacao" : "aeiou",
  "valorParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "nomeFavorecido" : "aeiou",
  "dataMovimento" : "aeiou",
  "taxaJuros" : 1.3579000000000001069366817318950779736042022705078125,
  "numeroEstabelecimento" : 123456789,
  "flagContaPoupanca" : 123,
  "numeroAgencia" : "aeiou",
  "dataVencimentoReal" : "aeiou",
  "valorTaxaSaque" : 1.3579000000000001069366817318950779736042022705078125,
  "valorIOF" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Id Conta 
     - parameter idTransferencia: (path) Id Transfer\u00C3\u00AAncia 
     - parameter idContaBancariaDestino: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria de destino (id) (optional)

     - returns: RequestBuilder<TransferenciaBancariaResponse> 
     */
    public class func consultarUsingGET40WithRequestBuilder(id id: Int, idTransferencia: Int, idContaBancariaDestino: Int?) -> RequestBuilder<TransferenciaBancariaResponse> {
        var path = "/api/contas/{id}/transferencias-creditos-contas-bancarias/{idTransferencia}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{idTransferencia}", withString: "\(idTransferencia)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_conta_bancaria_destino": idContaBancariaDestino
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TransferenciaBancariaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Realiza a listagem das transfer\u00C3\u00AAncias banc\u00C3\u00A1rias de cr\u00C3\u00A9dito entre contas banc\u00C3\u00A1rias
     
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idConta: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da Conta. (optional)
     - parameter dataSolicitacaoInicial: (query) Data inicial da solicita\u00C3\u00A7\u00C3\u00A3o de transfer\u00C3\u00AAncia. (optional)
     - parameter dataSolicitacaoFinal: (query) Data final da solicita\u00C3\u00A7\u00C3\u00A3o de transfer\u00C3\u00AAncia (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarTransferenciaBancariaUsingGET(sort sort: [String]?, page: Int?, limit: Int?, idConta: Int?, dataSolicitacaoInicial: String?, dataSolicitacaoFinal: String?, completion: ((data: PageTransferenciaCreditoContaBancariaResponse?, error: ErrorType?) -> Void)) {
        listarTransferenciaBancariaUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, idConta: idConta, dataSolicitacaoInicial: dataSolicitacaoInicial, dataSolicitacaoFinal: dataSolicitacaoFinal).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realiza a listagem das transfer\u00C3\u00AAncias banc\u00C3\u00A1rias de cr\u00C3\u00A9dito entre contas banc\u00C3\u00A1rias
     
     - GET /api/transferencias-creditos-contas-bancarias
     - Recurso utilizado para listar as transfer\u00C3\u00AAncia de cr\u00C3\u00A9dito entre contas banc\u00C3\u00A1ria de um portador solicitadas.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "valorContrato" : 1.3579000000000001069366817318950779736042022705078125,
    "statusProcessamento" : "aeiou",
    "valorCompra" : 1.3579000000000001069366817318950779736042022705078125,
    "idTransferencia" : 123456789,
    "dataCompra" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter idConta: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da Conta. (optional)
     - parameter dataSolicitacaoInicial: (query) Data inicial da solicita\u00C3\u00A7\u00C3\u00A3o de transfer\u00C3\u00AAncia. (optional)
     - parameter dataSolicitacaoFinal: (query) Data final da solicita\u00C3\u00A7\u00C3\u00A3o de transfer\u00C3\u00AAncia (optional)

     - returns: RequestBuilder<PageTransferenciaCreditoContaBancariaResponse> 
     */
    public class func listarTransferenciaBancariaUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idConta: Int?, dataSolicitacaoInicial: String?, dataSolicitacaoFinal: String?) -> RequestBuilder<PageTransferenciaCreditoContaBancariaResponse> {
        let path = "/api/transferencias-creditos-contas-bancarias"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idConta": idConta,
            "dataSolicitacaoInicial": dataSolicitacaoInicial,
            "dataSolicitacaoFinal": dataSolicitacaoFinal
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTransferenciaCreditoContaBancariaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Lista contas banc\u00C3\u00A1rias portador
     
     - parameter idConta: (query) C\u00C3\u00B3digo identificador da conta cart\u00C3\u00A3o (optional)
     - parameter nomeAgencia: (query) Descri\u00C3\u00A7\u00C3\u00A3o da ag\u00C3\u00AAncia (optional)
     - parameter numeroAgencia: (query) N\u00C3\u00BAmero da ag\u00C3\u00AAncia (optional)
     - parameter numeroConta: (query) N\u00C3\u00BAmero da conta (optional)
     - parameter flagContaOrigemDoc: (query) Sinaliza se origem \u00C3\u00A9 DOC (1: DOC, 0: TED) (optional)
     - parameter idPessoaFisica: (query) C\u00C3\u00B3digo da pessoa (optional)
     - parameter favorecido: (query) Nome do favorecido (optional)
     - parameter numeroReceiraFederal: (query) Documento do favorecido (optional)
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET14(idConta idConta: Int?, nomeAgencia: String?, numeroAgencia: String?, numeroConta: String?, flagContaOrigemDoc: Int?, idPessoaFisica: Int?, favorecido: String?, numeroReceiraFederal: String?, sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageContaBancariaPortadorResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET14WithRequestBuilder(idConta: idConta, nomeAgencia: nomeAgencia, numeroAgencia: numeroAgencia, numeroConta: numeroConta, flagContaOrigemDoc: flagContaOrigemDoc, idPessoaFisica: idPessoaFisica, favorecido: favorecido, numeroReceiraFederal: numeroReceiraFederal, sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista contas banc\u00C3\u00A1rias portador
     
     - GET /api/contas-bancarias-portador
     - Esse recurso permite listar contas banc\u00C3\u00A1rias do portador.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nomeAgencia" : "aeiou",
    "idConta" : 123456789,
    "numeroReceiraFederal" : "aeiou",
    "digitoAgencia" : "aeiou",
    "banco" : 123456789,
    "favorecido" : "aeiou",
    "flagAtivo" : 123,
    "titularidade" : 123,
    "idPessoaFisica" : 123456789,
    "numeroConta" : "aeiou",
    "digitoConta" : "aeiou",
    "id" : 123456789,
    "flagContaPoupanca" : 123,
    "numeroAgencia" : "aeiou",
    "flagContaOrigemDoc" : 123
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter idConta: (query) C\u00C3\u00B3digo identificador da conta cart\u00C3\u00A3o (optional)
     - parameter nomeAgencia: (query) Descri\u00C3\u00A7\u00C3\u00A3o da ag\u00C3\u00AAncia (optional)
     - parameter numeroAgencia: (query) N\u00C3\u00BAmero da ag\u00C3\u00AAncia (optional)
     - parameter numeroConta: (query) N\u00C3\u00BAmero da conta (optional)
     - parameter flagContaOrigemDoc: (query) Sinaliza se origem \u00C3\u00A9 DOC (1: DOC, 0: TED) (optional)
     - parameter idPessoaFisica: (query) C\u00C3\u00B3digo da pessoa (optional)
     - parameter favorecido: (query) Nome do favorecido (optional)
     - parameter numeroReceiraFederal: (query) Documento do favorecido (optional)
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)

     - returns: RequestBuilder<PageContaBancariaPortadorResponse> 
     */
    public class func listarUsingGET14WithRequestBuilder(idConta idConta: Int?, nomeAgencia: String?, numeroAgencia: String?, numeroConta: String?, flagContaOrigemDoc: Int?, idPessoaFisica: Int?, favorecido: String?, numeroReceiraFederal: String?, sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageContaBancariaPortadorResponse> {
        let path = "/api/contas-bancarias-portador"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idConta": idConta,
            "nomeAgencia": nomeAgencia,
            "numeroAgencia": numeroAgencia,
            "numeroConta": numeroConta,
            "flagContaOrigemDoc": flagContaOrigemDoc,
            "idPessoaFisica": idPessoaFisica,
            "favorecido": favorecido,
            "numeroReceiraFederal": numeroReceiraFederal,
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageContaBancariaPortadorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Listar as transfer\u00C3\u00AAncias banc\u00C3\u00A1rias realizadas
     
     - parameter id: (path) Id Conta 
     - parameter idContaBancariaDestino: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria de destino (id) (optional)
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET47(id id: Int, idContaBancariaDestino: Int?, sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageTransferenciaBancariaResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET47WithRequestBuilder(id: id, idContaBancariaDestino: idContaBancariaDestino, sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Listar as transfer\u00C3\u00AAncias banc\u00C3\u00A1rias realizadas
     
     - GET /api/contas/{id}/transferencias-creditos-contas-bancarias
     - Este recurso tem como objetivo permitir que o portador de um Cart\u00C3\u00A3o possa consultar uma lista das Transfer\u00C3\u00AAncias Banc\u00C3\u00A1rias para os Favorecidos cadastrados.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "digitoAgencia" : "aeiou",
    "numeroParcelas" : 123,
    "idOperacao" : 123456789,
    "idAutorizacao" : 123456789,
    "origem" : "aeiou",
    "valorCompra" : 1.3579000000000001069366817318950779736042022705078125,
    "idTransferencia" : 123456789,
    "idContaPortador" : 123456789,
    "dataCompra" : "aeiou",
    "dataVencimentoPadrao" : "aeiou",
    "nsuorigem" : 123456789,
    "valorContrato" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTAC" : 1.3579000000000001069366817318950779736042022705078125,
    "dataAutorizacao" : "aeiou",
    "numeroConta" : "aeiou",
    "digitoConta" : "aeiou",
    "documentoFavorecido" : "aeiou",
    "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
    "idCartao" : 123456789,
    "idEstabelecimento" : 123456789,
    "idConta" : 123456789,
    "valor" : 1.3579000000000001069366817318950779736042022705078125,
    "banco" : 123456789,
    "terminal" : "aeiou",
    "codigoAutorizacao" : "aeiou",
    "valorParcela" : 1.3579000000000001069366817318950779736042022705078125,
    "nomeFavorecido" : "aeiou",
    "dataMovimento" : "aeiou",
    "taxaJuros" : 1.3579000000000001069366817318950779736042022705078125,
    "numeroEstabelecimento" : 123456789,
    "flagContaPoupanca" : 123,
    "numeroAgencia" : "aeiou",
    "dataVencimentoReal" : "aeiou",
    "valorTaxaSaque" : 1.3579000000000001069366817318950779736042022705078125,
    "valorIOF" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) Id Conta 
     - parameter idContaBancariaDestino: (query) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria de destino (id) (optional)
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)

     - returns: RequestBuilder<PageTransferenciaBancariaResponse> 
     */
    public class func listarUsingGET47WithRequestBuilder(id id: Int, idContaBancariaDestino: Int?, sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageTransferenciaBancariaResponse> {
        var path = "/api/contas/{id}/transferencias-creditos-contas-bancarias"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_conta_bancaria_destino": idContaBancariaDestino,
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTransferenciaBancariaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Cadastra uma conta banc\u00C3\u00A1ria do portador
     
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST8(persist persist: ContaBancariaPortadorPersist, completion: ((data: ContaBancariaPortadorResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST8WithRequestBuilder(persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Cadastra uma conta banc\u00C3\u00A1ria do portador
     
     - POST /api/contas-bancarias-portador
     - Esse recurso permite cadastrar contas banc\u00C3\u00A1rias do portador.
     - examples: [{contentType=application/json, example={
  "nomeAgencia" : "aeiou",
  "idConta" : 123456789,
  "numeroReceiraFederal" : "aeiou",
  "digitoAgencia" : "aeiou",
  "banco" : 123456789,
  "favorecido" : "aeiou",
  "flagAtivo" : 123,
  "titularidade" : 123,
  "idPessoaFisica" : 123456789,
  "numeroConta" : "aeiou",
  "digitoConta" : "aeiou",
  "id" : 123456789,
  "flagContaPoupanca" : 123,
  "numeroAgencia" : "aeiou",
  "flagContaOrigemDoc" : 123
}}]
     
     - parameter persist: (body) persist 

     - returns: RequestBuilder<ContaBancariaPortadorResponse> 
     */
    public class func salvarUsingPOST8WithRequestBuilder(persist persist: ContaBancariaPortadorPersist) -> RequestBuilder<ContaBancariaPortadorResponse> {
        let path = "/api/contas-bancarias-portador"
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ContaBancariaPortadorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Realiza a simula\u00C3\u00A7\u00C3\u00A3o dos planos de parcelamentos para uma transfer\u00C3\u00AAncia banc\u00C3\u00A1ria de cr\u00C3\u00A9dito entre contas banc\u00C3\u00A1rias
     
     - parameter request: (body) request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func simularTransferenciaBancariaUsingPOST(request request: PlanoParcelamentoTransferenciaCreditoContaBancariaRequest, completion: ((data: PlanoParcelamentoTransferenciaCreditoContaBancariaResponse?, error: ErrorType?) -> Void)) {
        simularTransferenciaBancariaUsingPOSTWithRequestBuilder(request: request).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realiza a simula\u00C3\u00A7\u00C3\u00A3o dos planos de parcelamentos para uma transfer\u00C3\u00AAncia banc\u00C3\u00A1ria de cr\u00C3\u00A9dito entre contas banc\u00C3\u00A1rias
     
     - POST /api/simular-transferencias-creditos-contas-bancarias
     - Realiza a simula\u00C3\u00A7\u00C3\u00A3o dos planos de parcelamentos para uma transfer\u00C3\u00AAncia banc\u00C3\u00A1ria de cr\u00C3\u00A9dito entre contas banc\u00C3\u00A1rias.
     - examples: [{contentType=application/json, example={
  "numeroMesesCarencia" : 123,
  "parcelas" : [ {
    "valorTAC" : 1.3579000000000001069366817318950779736042022705078125,
    "cetAnual" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTotal" : 1.3579000000000001069366817318950779736042022705078125,
    "valorParcelas" : 1.3579000000000001069366817318950779736042022705078125,
    "taxaJuros" : 1.3579000000000001069366817318950779736042022705078125,
    "numeroParcela" : 123,
    "valorIOF" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "numeroMascaradoCartao" : "aeiou",
  "vencimentoPrimeiraParcela" : "aeiou",
  "valorTransacao" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter request: (body) request 

     - returns: RequestBuilder<PlanoParcelamentoTransferenciaCreditoContaBancariaResponse> 
     */
    public class func simularTransferenciaBancariaUsingPOSTWithRequestBuilder(request request: PlanoParcelamentoTransferenciaCreditoContaBancariaRequest) -> RequestBuilder<PlanoParcelamentoTransferenciaCreditoContaBancariaResponse> {
        let path = "/api/simular-transferencias-creditos-contas-bancarias"
        let URLString = PierAPI.basePath + path
        
        let parameters = request.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<PlanoParcelamentoTransferenciaCreditoContaBancariaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Realizar transfer\u00C3\u00AAncia banc\u00C3\u00A1ria do cart\u00C3\u00A3o para contas banc\u00C3\u00A1rias
     
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func transferenciaCreditoContaBancariaUsingPOST(persist persist: TransferenciaCreditoContaBancariaPersist, completion: ((data: TransferenciaCreditoContaBancariaResponse?, error: ErrorType?) -> Void)) {
        transferenciaCreditoContaBancariaUsingPOSTWithRequestBuilder(persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realizar transfer\u00C3\u00AAncia banc\u00C3\u00A1ria do cart\u00C3\u00A3o para contas banc\u00C3\u00A1rias
     
     - POST /api/transferencias-creditos-contas-bancarias
     - Este recurso tem como objetivo permitir que o portador de um cart\u00C3\u00A3o possa realizar a transfer\u00C3\u00AAncia de cr\u00C3\u00A9dito para uma conta banc\u00C3\u00A1ria. Assim, o valor do cr\u00C3\u00A9dito somado a tarifa para transfer\u00C3\u00AAncia, quando praticada pelo emissor, ser\u00C3\u00A1 debitado da conta de origem, se houver saldo suficiente, e ser\u00C3\u00A1 creditado na conta banc\u00C3\u00A1ria de destino.
     - examples: [{contentType=application/json, example={
  "digitoAgencia" : "aeiou",
  "numeroParcelas" : 123,
  "idOperacao" : 123456789,
  "statusProcessamento" : "aeiou",
  "idAutorizacao" : 123456789,
  "valorCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "idTransferencia" : 123456789,
  "valorCET" : 1.3579000000000001069366817318950779736042022705078125,
  "dataCompra" : "aeiou",
  "dataVencimentoPadrao" : "aeiou",
  "valorContrato" : 1.3579000000000001069366817318950779736042022705078125,
  "valorTAC" : 1.3579000000000001069366817318950779736042022705078125,
  "dataAutorizacao" : "aeiou",
  "nsuOrigem" : 123456789,
  "numeroConta" : "aeiou",
  "digitoConta" : "aeiou",
  "documentoFavorecido" : "aeiou",
  "idCartao" : 123456789,
  "idConta" : 123456789,
  "banco" : 123456789,
  "codigoAutorizacao" : "aeiou",
  "valorParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "nomeFavorecido" : "aeiou",
  "dataMovimento" : "aeiou",
  "taxaJuros" : 1.3579000000000001069366817318950779736042022705078125,
  "flagContaPoupanca" : false,
  "numeroAgencia" : "aeiou",
  "valorTaxaSaque" : 1.3579000000000001069366817318950779736042022705078125,
  "dataVencimentoReal" : "aeiou",
  "valorIOF" : 1.3579000000000001069366817318950779736042022705078125,
  "status" : "aeiou"
}}]
     
     - parameter persist: (body) persist 

     - returns: RequestBuilder<TransferenciaCreditoContaBancariaResponse> 
     */
    public class func transferenciaCreditoContaBancariaUsingPOSTWithRequestBuilder(persist persist: TransferenciaCreditoContaBancariaPersist) -> RequestBuilder<TransferenciaCreditoContaBancariaResponse> {
        let path = "/api/transferencias-creditos-contas-bancarias"
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TransferenciaCreditoContaBancariaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Realizar transfer\u00C3\u00AAncia banc\u00C3\u00A1ria do cart\u00C3\u00A3o para contas banc\u00C3\u00A1rias
     
     - parameter id: (path) Id Conta 
     - parameter transferenciaBancariaPersist: (body) transferenciaBancariaPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func transferirUsingPOST(id id: Int, transferenciaBancariaPersist: TransferenciaBancariaPersist, completion: ((data: TransferenciaBancariaResponse?, error: ErrorType?) -> Void)) {
        transferirUsingPOSTWithRequestBuilder(id: id, transferenciaBancariaPersist: transferenciaBancariaPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Realizar transfer\u00C3\u00AAncia banc\u00C3\u00A1ria do cart\u00C3\u00A3o para contas banc\u00C3\u00A1rias
     
     - POST /api/contas/{id}/transferencias-creditos-contas-bancarias
     - Este recurso tem como objetivo permitir que o portador de um cart\u00C3\u00A3o possa realizar a transfer\u00C3\u00AAncia de cr\u00C3\u00A9dito para uma conta banc\u00C3\u00A1ria. Assim, o valor do cr\u00C3\u00A9dito somado a tarifa para transfer\u00C3\u00AAncia, quando praticada pelo emissor, ser\u00C3\u00A1 debitado da conta de origem, se houver saldo suficiente, e ser\u00C3\u00A1 creditado na conta banc\u00C3\u00A1ria de destino.
     - examples: [{contentType=application/json, example={
  "digitoAgencia" : "aeiou",
  "numeroParcelas" : 123,
  "idOperacao" : 123456789,
  "idAutorizacao" : 123456789,
  "origem" : "aeiou",
  "valorCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "idTransferencia" : 123456789,
  "idContaPortador" : 123456789,
  "dataCompra" : "aeiou",
  "dataVencimentoPadrao" : "aeiou",
  "nsuorigem" : 123456789,
  "valorContrato" : 1.3579000000000001069366817318950779736042022705078125,
  "valorTAC" : 1.3579000000000001069366817318950779736042022705078125,
  "dataAutorizacao" : "aeiou",
  "numeroConta" : "aeiou",
  "digitoConta" : "aeiou",
  "documentoFavorecido" : "aeiou",
  "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
  "idCartao" : 123456789,
  "idEstabelecimento" : 123456789,
  "idConta" : 123456789,
  "valor" : 1.3579000000000001069366817318950779736042022705078125,
  "banco" : 123456789,
  "terminal" : "aeiou",
  "codigoAutorizacao" : "aeiou",
  "valorParcela" : 1.3579000000000001069366817318950779736042022705078125,
  "nomeFavorecido" : "aeiou",
  "dataMovimento" : "aeiou",
  "taxaJuros" : 1.3579000000000001069366817318950779736042022705078125,
  "numeroEstabelecimento" : 123456789,
  "flagContaPoupanca" : 123,
  "numeroAgencia" : "aeiou",
  "dataVencimentoReal" : "aeiou",
  "valorTaxaSaque" : 1.3579000000000001069366817318950779736042022705078125,
  "valorIOF" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Id Conta 
     - parameter transferenciaBancariaPersist: (body) transferenciaBancariaPersist 

     - returns: RequestBuilder<TransferenciaBancariaResponse> 
     */
    public class func transferirUsingPOSTWithRequestBuilder(id id: Int, transferenciaBancariaPersist: TransferenciaBancariaPersist) -> RequestBuilder<TransferenciaBancariaResponse> {
        var path = "/api/contas/{id}/transferencias-creditos-contas-bancarias"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = transferenciaBancariaPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TransferenciaBancariaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
