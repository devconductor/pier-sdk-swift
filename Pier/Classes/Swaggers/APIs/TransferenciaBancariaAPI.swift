//
// TransferenciaBancariaAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class TransferenciaBancariaAPI: APIBase {
    /**
     
     Atualiza conta banc\u00C3\u00A1ria portador
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria do portador (id). 
     - parameter update: (body) update 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func atualizarUsingPUT1(id id: Int, update: ContaBancariaPortadorUpdate, completion: ((data: ContaBancariaPortadorResponse?, error: ErrorType?) -> Void)) {
        atualizarUsingPUT1WithRequestBuilder(id: id, update: update).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Atualiza conta banc\u00C3\u00A1ria portador
     
     - PUT /api/contas-bancarias-portador/{id}
     - Esse recurso permite atualizar uma conta banc\u00C3\u00A1ria do portador.
     - examples: [{contentType=application/json, example={
  "nomeAgencia" : "aeiou",
  "idConta" : 123456789,
  "numeroReceiraFederal" : "aeiou",
  "digitoAgencia" : "aeiou",
  "banco" : 123456789,
  "favorecido" : "aeiou",
  "flagAtivo" : 123,
  "titularidade" : 123,
  "idPessoaFisica" : 123456789,
  "numeroConta" : "aeiou",
  "digitoConta" : "aeiou",
  "id" : 123456789,
  "flagContaPoupanca" : 123,
  "numeroAgencia" : "aeiou",
  "flagContaOrigemDoc" : 123
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria do portador (id). 
     - parameter update: (body) update 

     - returns: RequestBuilder<ContaBancariaPortadorResponse> 
     */
    public class func atualizarUsingPUT1WithRequestBuilder(id id: Int, update: ContaBancariaPortadorUpdate) -> RequestBuilder<ContaBancariaPortadorResponse> {
        var path = "/api/contas-bancarias-portador/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = update.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ContaBancariaPortadorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Consulta conta banc\u00C3\u00A1ria portador
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET9(id id: Int, completion: ((data: ContaBancariaPortadorResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET9WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Consulta conta banc\u00C3\u00A1ria portador
     
     - GET /api/contas-bancarias-portador/{id}
     - Esse recurso permite consultar uma conta banc\u00C3\u00A1ria do portador a partir do seu c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o (id).
     - examples: [{contentType=application/json, example={
  "nomeAgencia" : "aeiou",
  "idConta" : 123456789,
  "numeroReceiraFederal" : "aeiou",
  "digitoAgencia" : "aeiou",
  "banco" : 123456789,
  "favorecido" : "aeiou",
  "flagAtivo" : 123,
  "titularidade" : 123,
  "idPessoaFisica" : 123456789,
  "numeroConta" : "aeiou",
  "digitoConta" : "aeiou",
  "id" : 123456789,
  "flagContaPoupanca" : 123,
  "numeroAgencia" : "aeiou",
  "flagContaOrigemDoc" : 123
}}]
     
     - parameter id: (path) C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria (id). 

     - returns: RequestBuilder<ContaBancariaPortadorResponse> 
     */
    public class func consultarUsingGET9WithRequestBuilder(id id: Int) -> RequestBuilder<ContaBancariaPortadorResponse> {
        var path = "/api/contas-bancarias-portador/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ContaBancariaPortadorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Lista contas banc\u00C3\u00A1rias portador
     
     - parameter idConta: (query) C\u00C3\u00B3digo identificador da conta cart\u00C3\u00A3o (optional)
     - parameter nomeAgencia: (query) Descri\u00C3\u00A7\u00C3\u00A3o da ag\u00C3\u00AAncia (optional)
     - parameter numeroAgencia: (query) N\u00C3\u00BAmero da ag\u00C3\u00AAncia (optional)
     - parameter numeroConta: (query) N\u00C3\u00BAmero da conta (optional)
     - parameter flagContaOrigemDoc: (query) Sinaliza se origem \u00C3\u00A9 DOC (1: DOC, 0: TED) (optional)
     - parameter idPessoaFisica: (query) C\u00C3\u00B3digo da pessoa (optional)
     - parameter favorecido: (query) Nome do favorecido (optional)
     - parameter numeroReceiraFederal: (query) Documento do favorecido (optional)
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET11(idConta idConta: Int?, nomeAgencia: String?, numeroAgencia: String?, numeroConta: String?, flagContaOrigemDoc: Int?, idPessoaFisica: Int?, favorecido: String?, numeroReceiraFederal: String?, sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageContaBancariaPortadorResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET11WithRequestBuilder(idConta: idConta, nomeAgencia: nomeAgencia, numeroAgencia: numeroAgencia, numeroConta: numeroConta, flagContaOrigemDoc: flagContaOrigemDoc, idPessoaFisica: idPessoaFisica, favorecido: favorecido, numeroReceiraFederal: numeroReceiraFederal, sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista contas banc\u00C3\u00A1rias portador
     
     - GET /api/contas-bancarias-portador
     - Esse recurso permite listar contas banc\u00C3\u00A1rias do portador.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nomeAgencia" : "aeiou",
    "idConta" : 123456789,
    "numeroReceiraFederal" : "aeiou",
    "digitoAgencia" : "aeiou",
    "banco" : 123456789,
    "favorecido" : "aeiou",
    "flagAtivo" : 123,
    "titularidade" : 123,
    "idPessoaFisica" : 123456789,
    "numeroConta" : "aeiou",
    "digitoConta" : "aeiou",
    "id" : 123456789,
    "flagContaPoupanca" : 123,
    "numeroAgencia" : "aeiou",
    "flagContaOrigemDoc" : 123
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter idConta: (query) C\u00C3\u00B3digo identificador da conta cart\u00C3\u00A3o (optional)
     - parameter nomeAgencia: (query) Descri\u00C3\u00A7\u00C3\u00A3o da ag\u00C3\u00AAncia (optional)
     - parameter numeroAgencia: (query) N\u00C3\u00BAmero da ag\u00C3\u00AAncia (optional)
     - parameter numeroConta: (query) N\u00C3\u00BAmero da conta (optional)
     - parameter flagContaOrigemDoc: (query) Sinaliza se origem \u00C3\u00A9 DOC (1: DOC, 0: TED) (optional)
     - parameter idPessoaFisica: (query) C\u00C3\u00B3digo da pessoa (optional)
     - parameter favorecido: (query) Nome do favorecido (optional)
     - parameter numeroReceiraFederal: (query) Documento do favorecido (optional)
     - parameter sort: (query) Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros. (optional)
     - parameter page: (query) P\u00C3\u00A1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50) (optional)

     - returns: RequestBuilder<PageContaBancariaPortadorResponse> 
     */
    public class func listarUsingGET11WithRequestBuilder(idConta idConta: Int?, nomeAgencia: String?, numeroAgencia: String?, numeroConta: String?, flagContaOrigemDoc: Int?, idPessoaFisica: Int?, favorecido: String?, numeroReceiraFederal: String?, sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageContaBancariaPortadorResponse> {
        let path = "/api/contas-bancarias-portador"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idConta": idConta,
            "nomeAgencia": nomeAgencia,
            "numeroAgencia": numeroAgencia,
            "numeroConta": numeroConta,
            "flagContaOrigemDoc": flagContaOrigemDoc,
            "idPessoaFisica": idPessoaFisica,
            "favorecido": favorecido,
            "numeroReceiraFederal": numeroReceiraFederal,
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageContaBancariaPortadorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Cadastra uma conta banc\u00C3\u00A1ria do portador
     
     - parameter persist: (body) persist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST7(persist persist: ContaBancariaPortadorPersist, completion: ((data: ContaBancariaPortadorResponse?, error: ErrorType?) -> Void)) {
        salvarUsingPOST7WithRequestBuilder(persist: persist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Cadastra uma conta banc\u00C3\u00A1ria do portador
     
     - POST /api/contas-bancarias-portador
     - Esse recurso permite cadastrar contas banc\u00C3\u00A1rias do portador.
     - examples: [{contentType=application/json, example={
  "nomeAgencia" : "aeiou",
  "idConta" : 123456789,
  "numeroReceiraFederal" : "aeiou",
  "digitoAgencia" : "aeiou",
  "banco" : 123456789,
  "favorecido" : "aeiou",
  "flagAtivo" : 123,
  "titularidade" : 123,
  "idPessoaFisica" : 123456789,
  "numeroConta" : "aeiou",
  "digitoConta" : "aeiou",
  "id" : 123456789,
  "flagContaPoupanca" : 123,
  "numeroAgencia" : "aeiou",
  "flagContaOrigemDoc" : 123
}}]
     
     - parameter persist: (body) persist 

     - returns: RequestBuilder<ContaBancariaPortadorResponse> 
     */
    public class func salvarUsingPOST7WithRequestBuilder(persist persist: ContaBancariaPortadorPersist) -> RequestBuilder<ContaBancariaPortadorResponse> {
        let path = "/api/contas-bancarias-portador"
        let URLString = PierAPI.basePath + path
        
        let parameters = persist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ContaBancariaPortadorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
