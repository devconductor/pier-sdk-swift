//
// GlobaltagfaturamentoAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltagfaturamentoAPI: APIBase {
    /**
     
     {{{faturamento_resource_alterar_tipo_faturamento}}}
     
     - parameter id: (path) {{{faturamento_resource_alterar_tipo_faturamento_param_id_tipo_faturamento}}} 
     - parameter tipoFaturamentoPersist: (body) tipoFaturamentoPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarTipoFaturamentoUsingPUT(id id: Int, tipoFaturamentoPersist: TipoFaturamentoPersistValue, completion: ((data: TipoFaturamentoResponse?, error: ErrorType?) -> Void)) {
        alterarTipoFaturamentoUsingPUTWithRequestBuilder(id: id, tipoFaturamentoPersist: tipoFaturamentoPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{faturamento_resource_alterar_tipo_faturamento}}}
     
     - PUT /api/tipos-faturamento/{id}
     - {{{faturamento_resource_alterar_tipo_faturamento_notes}}}
     - examples: [{contentType=application/json, example={
  "flagApenasDemonstrativo" : false,
  "id" : 123456789,
  "idConvenio" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) {{{faturamento_resource_alterar_tipo_faturamento_param_id_tipo_faturamento}}} 
     - parameter tipoFaturamentoPersist: (body) tipoFaturamentoPersist 

     - returns: RequestBuilder<TipoFaturamentoResponse> 
     */
    public class func alterarTipoFaturamentoUsingPUTWithRequestBuilder(id id: Int, tipoFaturamentoPersist: TipoFaturamentoPersistValue) -> RequestBuilder<TipoFaturamentoResponse> {
        var path = "/api/tipos-faturamento/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = tipoFaturamentoPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TipoFaturamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{faturamento_resource_cadastrar_faturamento_por_conta}}}
     
     - parameter tipoFaturamentoPorContaPersist: (body) tipoFaturamentoPorContaPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarFaturamentoPorContaUsingPOST(tipoFaturamentoPorContaPersist tipoFaturamentoPorContaPersist: TipoFaturamentoPorContaPersistValue, completion: ((data: TipoFaturamentoPorContaResponse?, error: ErrorType?) -> Void)) {
        cadastrarFaturamentoPorContaUsingPOSTWithRequestBuilder(tipoFaturamentoPorContaPersist: tipoFaturamentoPorContaPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{faturamento_resource_cadastrar_faturamento_por_conta}}}
     
     - POST /api/tipos-faturamento-conta
     - {{{faturamento_resource_cadastrar_faturamento_por_conta_notes}}}
     - examples: [{contentType=application/json, example={
  "ativo" : false,
  "idConta" : 123456789,
  "dataHoraCancelamento" : "aeiou",
  "modificadoPor" : "aeiou",
  "id" : 123456789,
  "dataHoraInclusao" : "aeiou",
  "idTipoFaturamento" : 123456789
}}]
     
     - parameter tipoFaturamentoPorContaPersist: (body) tipoFaturamentoPorContaPersist 

     - returns: RequestBuilder<TipoFaturamentoPorContaResponse> 
     */
    public class func cadastrarFaturamentoPorContaUsingPOSTWithRequestBuilder(tipoFaturamentoPorContaPersist tipoFaturamentoPorContaPersist: TipoFaturamentoPorContaPersistValue) -> RequestBuilder<TipoFaturamentoPorContaResponse> {
        let path = "/api/tipos-faturamento-conta"
        let URLString = PierAPI.basePath + path
        
        let parameters = tipoFaturamentoPorContaPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TipoFaturamentoPorContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{faturamento_resource_cadastrar_tipo_faturamento}}}
     
     - parameter tipoFaturamentoPersist: (body) tipoFaturamentoPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarTipoFaturamentoUsingPOST(tipoFaturamentoPersist tipoFaturamentoPersist: TipoFaturamentoPersistValue, completion: ((data: TipoFaturamentoResponse?, error: ErrorType?) -> Void)) {
        cadastrarTipoFaturamentoUsingPOSTWithRequestBuilder(tipoFaturamentoPersist: tipoFaturamentoPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{faturamento_resource_cadastrar_tipo_faturamento}}}
     
     - POST /api/tipos-faturamento
     - {{{faturamento_resource_cadastrar_tipo_faturamento_notes}}}
     - examples: [{contentType=application/json, example={
  "flagApenasDemonstrativo" : false,
  "id" : 123456789,
  "idConvenio" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter tipoFaturamentoPersist: (body) tipoFaturamentoPersist 

     - returns: RequestBuilder<TipoFaturamentoResponse> 
     */
    public class func cadastrarTipoFaturamentoUsingPOSTWithRequestBuilder(tipoFaturamentoPersist tipoFaturamentoPersist: TipoFaturamentoPersistValue) -> RequestBuilder<TipoFaturamentoResponse> {
        let path = "/api/tipos-faturamento"
        let URLString = PierAPI.basePath + path
        
        let parameters = tipoFaturamentoPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TipoFaturamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{faturamento_resource_consultar_tipo_faturamento}}}
     
     - parameter id: (path) {{{faturamento_resource_consultar_tipo_faturamento_param_id_tipo_faturamento}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarTipoFaturamentoUsingGET(id id: Int, completion: ((data: TipoFaturamentoResponse?, error: ErrorType?) -> Void)) {
        consultarTipoFaturamentoUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{faturamento_resource_consultar_tipo_faturamento}}}
     
     - GET /api/tipos-faturamento/{id}
     - {{{faturamento_resource_consultar_tipo_faturamento_notes}}}
     - examples: [{contentType=application/json, example={
  "flagApenasDemonstrativo" : false,
  "id" : 123456789,
  "idConvenio" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) {{{faturamento_resource_consultar_tipo_faturamento_param_id_tipo_faturamento}}} 

     - returns: RequestBuilder<TipoFaturamentoResponse> 
     */
    public class func consultarTipoFaturamentoUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<TipoFaturamentoResponse> {
        var path = "/api/tipos-faturamento/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TipoFaturamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{faturamento_resource_desativar_faturamento_por_conta}}}
     
     - parameter id: (path) {{{faturamento_resource_desativar_faturamento_por_conta_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desativarFaturamentoPorContaUsingPOST(id id: Int, completion: ((data: TipoFaturamentoPorContaResponse?, error: ErrorType?) -> Void)) {
        desativarFaturamentoPorContaUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{faturamento_resource_desativar_faturamento_por_conta}}}
     
     - POST /api/tipos-faturamento-conta/{id}/desativar
     - {{{faturamento_resource_desativar_faturamento_por_conta_notes}}}
     - examples: [{contentType=application/json, example={
  "ativo" : false,
  "idConta" : 123456789,
  "dataHoraCancelamento" : "aeiou",
  "modificadoPor" : "aeiou",
  "id" : 123456789,
  "dataHoraInclusao" : "aeiou",
  "idTipoFaturamento" : 123456789
}}]
     
     - parameter id: (path) {{{faturamento_resource_desativar_faturamento_por_conta_param_id}}} 

     - returns: RequestBuilder<TipoFaturamentoPorContaResponse> 
     */
    public class func desativarFaturamentoPorContaUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<TipoFaturamentoPorContaResponse> {
        var path = "/api/tipos-faturamento-conta/{id}/desativar"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TipoFaturamentoPorContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{faturamento_resource_desativar_tipo_faturamento}}}
     
     - parameter id: (path) {{{faturamento_resource_desativar_tipo_faturamento_param_id_tipo_faturamento}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desativarTipoFaturamentoUsingPOST(id id: Int, completion: ((data: TipoFaturamentoResponse?, error: ErrorType?) -> Void)) {
        desativarTipoFaturamentoUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{faturamento_resource_desativar_tipo_faturamento}}}
     
     - POST /api/tipos-faturamento/{id}/desativar
     - {{{faturamento_resource_desativar_tipo_faturamento_notes}}}
     - examples: [{contentType=application/json, example={
  "flagApenasDemonstrativo" : false,
  "id" : 123456789,
  "idConvenio" : 123456789,
  "descricao" : "aeiou"
}}]
     
     - parameter id: (path) {{{faturamento_resource_desativar_tipo_faturamento_param_id_tipo_faturamento}}} 

     - returns: RequestBuilder<TipoFaturamentoResponse> 
     */
    public class func desativarTipoFaturamentoUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<TipoFaturamentoResponse> {
        var path = "/api/tipos-faturamento/{id}/desativar"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TipoFaturamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{faturamento_resource_listar_faturamento_por_conta}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idTipoFaturamentoPorConta: (query) {{{tipo_faturamento_por_conta_request_id_tipo_faturamento_por_conta_value}}} (optional)
     - parameter ativo: (query) {{{tipo_faturamento_por_conta_request_status_value}}} (optional)
     - parameter idConta: (query) {{{tipo_faturamento_por_conta_request_id_conta_value}}} (optional)
     - parameter idTipoFaturamento: (query) {{{tipo_faturamento_por_conta_request_id_tipo_faturamento_value}}} (optional)
     - parameter dataHoraInclusao: (query) {{{tipo_faturamento_por_conta_request_data_hora_inclusao_value}}} (optional)
     - parameter dataHoraCancelamento: (query) {{{tipo_faturamento_por_conta_request_data_hora_cancelamento_value}}} (optional)
     - parameter modificadoPor: (query) {{{tipo_faturamento_por_conta_request_modificado_por_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarFaturamentoPorContaUsingGET(sort sort: [String]?, page: Int?, limit: Int?, idTipoFaturamentoPorConta: Int?, ativo: Bool?, idConta: Int?, idTipoFaturamento: Int?, dataHoraInclusao: String?, dataHoraCancelamento: String?, modificadoPor: String?, completion: ((data: PageTipoFaturamentoPorContaResponse?, error: ErrorType?) -> Void)) {
        listarFaturamentoPorContaUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, idTipoFaturamentoPorConta: idTipoFaturamentoPorConta, ativo: ativo, idConta: idConta, idTipoFaturamento: idTipoFaturamento, dataHoraInclusao: dataHoraInclusao, dataHoraCancelamento: dataHoraCancelamento, modificadoPor: modificadoPor).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{faturamento_resource_listar_faturamento_por_conta}}}
     
     - GET /api/tipos-faturamento-conta
     - {{{faturamento_resource_listar_faturamento_por_conta_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "ativo" : false,
    "idConta" : 123456789,
    "dataHoraCancelamento" : "aeiou",
    "modificadoPor" : "aeiou",
    "id" : 123456789,
    "dataHoraInclusao" : "aeiou",
    "idTipoFaturamento" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idTipoFaturamentoPorConta: (query) {{{tipo_faturamento_por_conta_request_id_tipo_faturamento_por_conta_value}}} (optional)
     - parameter ativo: (query) {{{tipo_faturamento_por_conta_request_status_value}}} (optional)
     - parameter idConta: (query) {{{tipo_faturamento_por_conta_request_id_conta_value}}} (optional)
     - parameter idTipoFaturamento: (query) {{{tipo_faturamento_por_conta_request_id_tipo_faturamento_value}}} (optional)
     - parameter dataHoraInclusao: (query) {{{tipo_faturamento_por_conta_request_data_hora_inclusao_value}}} (optional)
     - parameter dataHoraCancelamento: (query) {{{tipo_faturamento_por_conta_request_data_hora_cancelamento_value}}} (optional)
     - parameter modificadoPor: (query) {{{tipo_faturamento_por_conta_request_modificado_por_value}}} (optional)

     - returns: RequestBuilder<PageTipoFaturamentoPorContaResponse> 
     */
    public class func listarFaturamentoPorContaUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idTipoFaturamentoPorConta: Int?, ativo: Bool?, idConta: Int?, idTipoFaturamento: Int?, dataHoraInclusao: String?, dataHoraCancelamento: String?, modificadoPor: String?) -> RequestBuilder<PageTipoFaturamentoPorContaResponse> {
        let path = "/api/tipos-faturamento-conta"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idTipoFaturamentoPorConta": idTipoFaturamentoPorConta,
            "ativo": ativo,
            "idConta": idConta,
            "idTipoFaturamento": idTipoFaturamento,
            "dataHoraInclusao": dataHoraInclusao,
            "dataHoraCancelamento": dataHoraCancelamento,
            "modificadoPor": modificadoPor
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoFaturamentoPorContaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{faturamento_resource_listar_tipo_faturamento}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idTipoFaturamento: (query) {{{tipo_faturamento_request_id_tipo_faturamento_value}}} (optional)
     - parameter descricao: (query) {{{tipo_faturamento_request_descricao_value}}} (optional)
     - parameter flagApenasDemonstrativo: (query) {{{tipo_faturamento_request_flag_apenas_demonstrativo_value}}} (optional)
     - parameter idConvenio: (query) {{{tipo_faturamento_request_id_convenio_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarTipoFaturamentoUsingGET(sort sort: [String]?, page: Int?, limit: Int?, idTipoFaturamento: Int?, descricao: String?, flagApenasDemonstrativo: Bool?, idConvenio: Int?, completion: ((data: PageTipoFaturamentoResponse?, error: ErrorType?) -> Void)) {
        listarTipoFaturamentoUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, idTipoFaturamento: idTipoFaturamento, descricao: descricao, flagApenasDemonstrativo: flagApenasDemonstrativo, idConvenio: idConvenio).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{faturamento_resource_listar_tipo_faturamento}}}
     
     - GET /api/tipos-faturamento
     - {{{faturamento_resource_listar_tipo_faturamento_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "flagApenasDemonstrativo" : false,
    "id" : 123456789,
    "idConvenio" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idTipoFaturamento: (query) {{{tipo_faturamento_request_id_tipo_faturamento_value}}} (optional)
     - parameter descricao: (query) {{{tipo_faturamento_request_descricao_value}}} (optional)
     - parameter flagApenasDemonstrativo: (query) {{{tipo_faturamento_request_flag_apenas_demonstrativo_value}}} (optional)
     - parameter idConvenio: (query) {{{tipo_faturamento_request_id_convenio_value}}} (optional)

     - returns: RequestBuilder<PageTipoFaturamentoResponse> 
     */
    public class func listarTipoFaturamentoUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idTipoFaturamento: Int?, descricao: String?, flagApenasDemonstrativo: Bool?, idConvenio: Int?) -> RequestBuilder<PageTipoFaturamentoResponse> {
        let path = "/api/tipos-faturamento"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idTipoFaturamento": idTipoFaturamento,
            "descricao": descricao,
            "flagApenasDemonstrativo": flagApenasDemonstrativo,
            "idConvenio": idConvenio
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageTipoFaturamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
