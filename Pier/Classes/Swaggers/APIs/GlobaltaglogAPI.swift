//
// GlobaltaglogAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltaglogAPI: APIBase {
    /**
     
     {{{log_acesso_usuario_recurso_salvar}}}
     
     - parameter logAcessoUsuarioPersist: (body) logAcessoUsuarioPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST18(logAcessoUsuarioPersist logAcessoUsuarioPersist: LogAcessoUsuarioPersistencia, completion: ((data: LogAcessoUsuarioResposta?, error: ErrorType?) -> Void)) {
        salvarUsingPOST18WithRequestBuilder(logAcessoUsuarioPersist: logAcessoUsuarioPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{log_acesso_usuario_recurso_salvar}}}
     
     - POST /api/logs/log-acessos-usuario
     - {{{log_acesso_usuario_recurso_salvar_notas}}}
     - examples: [{contentType=application/json, example={
  "id" : 123456789
}}]
     
     - parameter logAcessoUsuarioPersist: (body) logAcessoUsuarioPersist 

     - returns: RequestBuilder<LogAcessoUsuarioResposta> 
     */
    public class func salvarUsingPOST18WithRequestBuilder(logAcessoUsuarioPersist logAcessoUsuarioPersist: LogAcessoUsuarioPersistencia) -> RequestBuilder<LogAcessoUsuarioResposta> {
        let path = "/api/logs/log-acessos-usuario"
        let URLString = PierAPI.basePath + path
        
        let parameters = logAcessoUsuarioPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<LogAcessoUsuarioResposta>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
