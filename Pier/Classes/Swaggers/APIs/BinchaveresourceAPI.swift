//
// BinchaveresourceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class BinchaveresourceAPI: APIBase {
    /**
     
     alterarBinChave
     
     - parameter id: (path) id 
     - parameter request: (body) request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarBinChaveUsingPUT(id id: Int, request: BinChaveUpdate, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        alterarBinChaveUsingPUTWithRequestBuilder(id: id, request: request).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     alterarBinChave
     
     - PUT /api/bins-chaves/{id}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) id 
     - parameter request: (body) request 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func alterarBinChaveUsingPUTWithRequestBuilder(id id: Int, request: BinChaveUpdate) -> RequestBuilder<AnyObject> {
        var path = "/api/bins-chaves/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = request.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     consultar
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET10(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        consultarUsingGET10WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     consultar
     
     - GET /api/bins-chaves/{id}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func consultarUsingGET10WithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/bins-chaves/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     listarBinChave
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query)  (optional)
     - parameter idTipoChave: (query)  (optional)
     - parameter idBin: (query)  (optional)
     - parameter chave: (query)  (optional)
     - parameter checkValue: (query)  (optional)
     - parameter validade: (query)  (optional)
     - parameter flagDescriptografado: (query)  (optional)
     - parameter label: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarBinChaveUsingGET(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, idTipoChave: Int?, idBin: Int?, chave: String?, checkValue: String?, validade: String?, flagDescriptografado: Bool?, label: String?, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        listarBinChaveUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, id: id, idTipoChave: idTipoChave, idBin: idBin, chave: chave, checkValue: checkValue, validade: validade, flagDescriptografado: flagDescriptografado, label: label).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     listarBinChave
     
     - GET /api/bins-chaves
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter id: (query)  (optional)
     - parameter idTipoChave: (query)  (optional)
     - parameter idBin: (query)  (optional)
     - parameter chave: (query)  (optional)
     - parameter checkValue: (query)  (optional)
     - parameter validade: (query)  (optional)
     - parameter flagDescriptografado: (query)  (optional)
     - parameter label: (query)  (optional)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func listarBinChaveUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, id: Int?, idTipoChave: Int?, idBin: Int?, chave: String?, checkValue: String?, validade: String?, flagDescriptografado: Bool?, label: String?) -> RequestBuilder<AnyObject> {
        let path = "/api/bins-chaves"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "id": id,
            "idTipoChave": idTipoChave,
            "idBin": idBin,
            "chave": chave,
            "checkValue": checkValue,
            "validade": validade,
            "flagDescriptografado": flagDescriptografado,
            "label": label
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     salvar
     
     - parameter binChavePersist: (body) binChavePersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func salvarUsingPOST4(binChavePersist binChavePersist: BinChavePersist, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        salvarUsingPOST4WithRequestBuilder(binChavePersist: binChavePersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     salvar
     
     - POST /api/bins-chaves
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter binChavePersist: (body) binChavePersist 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func salvarUsingPOST4WithRequestBuilder(binChavePersist binChavePersist: BinChavePersist) -> RequestBuilder<AnyObject> {
        let path = "/api/bins-chaves"
        let URLString = PierAPI.basePath + path
        
        let parameters = binChavePersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
