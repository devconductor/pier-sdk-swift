//
// GlobaltagcartaoAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltagcartaoAPI: APIBase {
    /**
     
     {{{cartao_resource_alterar_alterar_senha}}}
     
     - parameter id: (path) {{{cartao_resource_alterar_alterar_senha_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarAlterarSenhaUsingPUT(id id: Int, completion: ((data: String?, error: ErrorType?) -> Void)) {
        alterarAlterarSenhaUsingPUTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_alterar_alterar_senha}}}
     
     - PUT /api/cartoes/{id}/alterar-senha
     - {{{cartao_resource_alterar_alterar_senha_notes}}}
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter id: (path) {{{cartao_resource_alterar_alterar_senha_param_id}}} 

     - returns: RequestBuilder<String> 
     */
    public class func alterarAlterarSenhaUsingPUTWithRequestBuilder(id id: Int) -> RequestBuilder<String> {
        var path = "/api/cartoes/{id}/alterar-senha"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<String>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_alterar_estagio}}}
     
     - parameter id: (path) {{{cartao_resource_alterar_estagio_param_id}}} 
     - parameter update: (body) {{{cartao_resource_alterar_estagio_param_id_estagio_cartao}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarEstagioUsingPOST(id id: Int, update: EstagioCartaoUpdate, completion: ((data: CartaoResponse?, error: ErrorType?) -> Void)) {
        alterarEstagioUsingPOSTWithRequestBuilder(id: id, update: update).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_alterar_estagio}}}
     
     - POST /api/cartoes/{id}/alterar-estagio
     - {{{cartao_resource_alterar_estagio_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroBin" : 123456789,
  "idConta" : 123456789,
  "nomeArquivoImpressao" : "aeiou",
  "codigoDesbloqueio" : "aeiou",
  "numeroCartaoHash" : 123456789,
  "flagTitular" : 123,
  "dataStatus" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataEmissao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatus" : 123456789,
  "numeroCartao" : "aeiou",
  "idPessoa" : 123456789,
  "dataEstagio" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "cartaoVirtual" : 123,
  "idProduto" : 123456789,
  "numeroCartaoCriptografado" : "aeiou",
  "idEstagio" : 123456789,
  "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sequencialCartao" : 123,
  "id" : 123456789,
  "nomeImpresso" : "aeiou",
  "dataImpressao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "impressaoAvulsa" : 123
}}]
     
     - parameter id: (path) {{{cartao_resource_alterar_estagio_param_id}}} 
     - parameter update: (body) {{{cartao_resource_alterar_estagio_param_id_estagio_cartao}}} 

     - returns: RequestBuilder<CartaoResponse> 
     */
    public class func alterarEstagioUsingPOSTWithRequestBuilder(id id: Int, update: EstagioCartaoUpdate) -> RequestBuilder<CartaoResponse> {
        var path = "/api/cartoes/{id}/alterar-estagio"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = update.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<CartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_alterar_status_impressao}}}
     
     - parameter id: (path) {{{cartao_resource_alterar_status_impressao_param_id}}} 
     - parameter idStatusImpressao: (query) {{{cartao_resource_alterar_status_impressao_param_id_status_impressao}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func alterarStatusImpressaoUsingPUT(id id: Int, idStatusImpressao: Int, completion: ((data: HistoricoImpressaoCartaoResponse?, error: ErrorType?) -> Void)) {
        alterarStatusImpressaoUsingPUTWithRequestBuilder(id: id, idStatusImpressao: idStatusImpressao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_alterar_status_impressao}}}
     
     - PUT /api/cartoes/{id}/alterar-status-impressao
     - {{{cartao_resource_alterar_status_impressao_notes}}}
     - examples: [{contentType=application/json, example={
  "idStatusImpressaoCartao" : 123456789,
  "idCartao" : 123456789,
  "mensagemHistorico" : "aeiou",
  "dataHistorico" : "aeiou",
  "id" : 123456789
}}]
     
     - parameter id: (path) {{{cartao_resource_alterar_status_impressao_param_id}}} 
     - parameter idStatusImpressao: (query) {{{cartao_resource_alterar_status_impressao_param_id_status_impressao}}} 

     - returns: RequestBuilder<HistoricoImpressaoCartaoResponse> 
     */
    public class func alterarStatusImpressaoUsingPUTWithRequestBuilder(id id: Int, idStatusImpressao: Int) -> RequestBuilder<HistoricoImpressaoCartaoResponse> {
        var path = "/api/cartoes/{id}/alterar-status-impressao"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_status_impressao": idStatusImpressao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<HistoricoImpressaoCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{cartao_resource_atribuir_pessoa}}}
     
     - parameter id: (path) {{{cartao_resource_atribuir_pessoa_param_id_cartao}}} 
     - parameter idPessoa: (query) {{{cartao_resource_atribuir_pessoa_param_id_pessoa}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func atribuirPessoaUsingPUT(id id: Int, idPessoa: Int, completion: ((data: CartaoResponse?, error: ErrorType?) -> Void)) {
        atribuirPessoaUsingPUTWithRequestBuilder(id: id, idPessoa: idPessoa).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_atribuir_pessoa}}}
     
     - PUT /api/cartoes/{id}/atribuir-titular
     - {{{cartao_resource_atribuir_pessoa_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroBin" : 123456789,
  "idConta" : 123456789,
  "nomeArquivoImpressao" : "aeiou",
  "codigoDesbloqueio" : "aeiou",
  "numeroCartaoHash" : 123456789,
  "flagTitular" : 123,
  "dataStatus" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataEmissao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatus" : 123456789,
  "numeroCartao" : "aeiou",
  "idPessoa" : 123456789,
  "dataEstagio" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "cartaoVirtual" : 123,
  "idProduto" : 123456789,
  "numeroCartaoCriptografado" : "aeiou",
  "idEstagio" : 123456789,
  "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sequencialCartao" : 123,
  "id" : 123456789,
  "nomeImpresso" : "aeiou",
  "dataImpressao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "impressaoAvulsa" : 123
}}]
     
     - parameter id: (path) {{{cartao_resource_atribuir_pessoa_param_id_cartao}}} 
     - parameter idPessoa: (query) {{{cartao_resource_atribuir_pessoa_param_id_pessoa}}} 

     - returns: RequestBuilder<CartaoResponse> 
     */
    public class func atribuirPessoaUsingPUTWithRequestBuilder(id id: Int, idPessoa: Int) -> RequestBuilder<CartaoResponse> {
        var path = "/api/cartoes/{id}/atribuir-titular"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_pessoa": idPessoa
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{cartao_resource_bloquear}}}
     
     - parameter id: (path) {{{cartao_resource_bloquear_param_id}}} 
     - parameter idStatus: (query) {{{cartao_resource_bloquear_param_id_status}}} 
     - parameter observacao: (query) {{{cartao_resource_bloquear_param_observacao}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func bloquearUsingPOST(id id: Int, idStatus: Int, observacao: String, completion: ((data: CartaoResponse?, error: ErrorType?) -> Void)) {
        bloquearUsingPOSTWithRequestBuilder(id: id, idStatus: idStatus, observacao: observacao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_bloquear}}}
     
     - POST /api/cartoes/{id}/bloquear
     - {{{cartao_resource_bloquear_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroBin" : 123456789,
  "idConta" : 123456789,
  "nomeArquivoImpressao" : "aeiou",
  "codigoDesbloqueio" : "aeiou",
  "numeroCartaoHash" : 123456789,
  "flagTitular" : 123,
  "dataStatus" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataEmissao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatus" : 123456789,
  "numeroCartao" : "aeiou",
  "idPessoa" : 123456789,
  "dataEstagio" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "cartaoVirtual" : 123,
  "idProduto" : 123456789,
  "numeroCartaoCriptografado" : "aeiou",
  "idEstagio" : 123456789,
  "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sequencialCartao" : 123,
  "id" : 123456789,
  "nomeImpresso" : "aeiou",
  "dataImpressao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "impressaoAvulsa" : 123
}}]
     
     - parameter id: (path) {{{cartao_resource_bloquear_param_id}}} 
     - parameter idStatus: (query) {{{cartao_resource_bloquear_param_id_status}}} 
     - parameter observacao: (query) {{{cartao_resource_bloquear_param_observacao}}} 

     - returns: RequestBuilder<CartaoResponse> 
     */
    public class func bloquearUsingPOSTWithRequestBuilder(id id: Int, idStatus: Int, observacao: String) -> RequestBuilder<CartaoResponse> {
        var path = "/api/cartoes/{id}/bloquear"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_status": idStatus,
            "observacao": observacao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{cartao_resource_cadastrar_alterar_senha}}}
     
     - parameter id: (path) {{{cartao_resource_cadastrar_alterar_senha_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cadastrarAlterarSenhaUsingPOST(id id: Int, completion: ((data: String?, error: ErrorType?) -> Void)) {
        cadastrarAlterarSenhaUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_cadastrar_alterar_senha}}}
     
     - POST /api/cartoes/{id}/cadastrar-senha
     - {{{cartao_resource_cadastrar_alterar_senha_notes}}}
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter id: (path) {{{cartao_resource_cadastrar_alterar_senha_param_id}}} 

     - returns: RequestBuilder<String> 
     */
    public class func cadastrarAlterarSenhaUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<String> {
        var path = "/api/cartoes/{id}/cadastrar-senha"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<String>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_cancelar}}}
     
     - parameter id: (path) {{{cartao_resource_cancelar_param_id}}} 
     - parameter idStatus: (query) {{{cartao_resource_cancelar_param_id_status}}} 
     - parameter observacao: (query) {{{cartao_resource_cancelar_param_observacao}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cancelarUsingPOST(id id: Int, idStatus: Int, observacao: String, completion: ((data: CartaoResponse?, error: ErrorType?) -> Void)) {
        cancelarUsingPOSTWithRequestBuilder(id: id, idStatus: idStatus, observacao: observacao).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_cancelar}}}
     
     - POST /api/cartoes/{id}/cancelar
     - {{{cartao_resource_cancelar_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroBin" : 123456789,
  "idConta" : 123456789,
  "nomeArquivoImpressao" : "aeiou",
  "codigoDesbloqueio" : "aeiou",
  "numeroCartaoHash" : 123456789,
  "flagTitular" : 123,
  "dataStatus" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataEmissao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatus" : 123456789,
  "numeroCartao" : "aeiou",
  "idPessoa" : 123456789,
  "dataEstagio" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "cartaoVirtual" : 123,
  "idProduto" : 123456789,
  "numeroCartaoCriptografado" : "aeiou",
  "idEstagio" : 123456789,
  "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sequencialCartao" : 123,
  "id" : 123456789,
  "nomeImpresso" : "aeiou",
  "dataImpressao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "impressaoAvulsa" : 123
}}]
     
     - parameter id: (path) {{{cartao_resource_cancelar_param_id}}} 
     - parameter idStatus: (query) {{{cartao_resource_cancelar_param_id_status}}} 
     - parameter observacao: (query) {{{cartao_resource_cancelar_param_observacao}}} 

     - returns: RequestBuilder<CartaoResponse> 
     */
    public class func cancelarUsingPOSTWithRequestBuilder(id id: Int, idStatus: Int, observacao: String) -> RequestBuilder<CartaoResponse> {
        var path = "/api/cartoes/{id}/cancelar"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id_status": idStatus,
            "observacao": observacao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{cartao_resource_consultar_cartao_impressao}}}
     
     - parameter id: (path) {{{cartao_resource_consultar_cartao_impressao_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarCartaoImpressaoUsingGET(id id: Int, completion: ((data: DadosCartaoImpressaoResponse?, error: ErrorType?) -> Void)) {
        consultarCartaoImpressaoUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_consultar_cartao_impressao}}}
     
     - GET /api/cartoes/{id}/consultar-dados-impressao
     - {{{cartao_resource_consultar_cartao_impressao_notes}}}
     - examples: [{contentType=application/json, example={
  "cvv2" : "aeiou",
  "trilhaCVV2" : "aeiou",
  "tipoPessoa" : "aeiou",
  "trilhaCVV1" : "aeiou",
  "idTipoCartao" : 123456789,
  "complementoEndereco" : "aeiou",
  "descricaoProduto" : "aeiou",
  "numeroCartao" : "aeiou",
  "idStatus" : 123456789,
  "dataEstagio" : "aeiou",
  "uf" : "aeiou",
  "idProduto" : 123456789,
  "dataValidade" : "aeiou",
  "cpf" : "aeiou",
  "sequencialCartao" : 123,
  "nomePessoa" : "aeiou",
  "senhaCriptografada" : "aeiou",
  "dataNascimento" : "aeiou",
  "descricaoTipoEndereco" : "aeiou",
  "bairro" : "aeiou",
  "dataStatus" : "aeiou",
  "idPessoa" : 123456789,
  "nomeBandeira" : "aeiou",
  "dataGeracao" : "aeiou",
  "trilha1" : "aeiou",
  "cidade" : "aeiou",
  "descricaoStatusCartao" : "aeiou",
  "idBandeira" : 123456789,
  "idTipoEndereco" : 123456789,
  "trilha2" : "aeiou",
  "cep" : "aeiou",
  "idEstagio" : 123456789,
  "descricaoStatusConta" : 123456789,
  "nomePlastico" : "aeiou",
  "flagVirtual" : 123,
  "descricaoEstagio" : "aeiou",
  "numeroBin" : "aeiou",
  "idCartao" : 123456789,
  "idStatusConta" : 123456789,
  "idConta" : 123456789,
  "codigoDesbloqueio" : "aeiou",
  "idEndereco" : 123456789,
  "flagTitular" : 123,
  "icvv" : "aeiou",
  "pais" : "aeiou",
  "numeroEndereco" : "aeiou",
  "logradouro" : "aeiou",
  "idStatusImpressao" : 123456789,
  "tipoPortador" : "aeiou",
  "dataEmbossing" : "aeiou"
}}]
     
     - parameter id: (path) {{{cartao_resource_consultar_cartao_impressao_param_id}}} 

     - returns: RequestBuilder<DadosCartaoImpressaoResponse> 
     */
    public class func consultarCartaoImpressaoUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<DadosCartaoImpressaoResponse> {
        var path = "/api/cartoes/{id}/consultar-dados-impressao"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<DadosCartaoImpressaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_consultar_dados_reais_cartao}}}
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarDadosReaisCartaoUsingGET(id id: Int, completion: ((data: DadosCartaoResponse?, error: ErrorType?) -> Void)) {
        consultarDadosReaisCartaoUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_consultar_dados_reais_cartao}}}
     
     - GET /api/cartoes/{id}/consultar-dados-reais
     - {{{cartao_resource_consultar_dados_reais_cartao_notes}}}
     - examples: [{contentType=application/json, example={
  "cvv2" : "aeiou",
  "idCartao" : 123456789,
  "idStatusConta" : 123456789,
  "idConta" : 123456789,
  "statusConta" : "aeiou",
  "numeroCartao" : "aeiou",
  "numeroContaCorente" : "aeiou",
  "dataValidade" : "aeiou",
  "idStatusCartao" : 123456789,
  "nomePlastico" : "aeiou",
  "statusCartao" : "aeiou",
  "flagVirtual" : 123,
  "numeroAgencia" : 123
}}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<DadosCartaoResponse> 
     */
    public class func consultarDadosReaisCartaoUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<DadosCartaoResponse> {
        var path = "/api/cartoes/{id}/consultar-dados-reais"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<DadosCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_consultar_limite_disponibilidade}}}
     
     - parameter id: (path) {{{cartao_resource_consultar_limite_disponibilidade_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarLimiteDisponibilidadeUsingGET(id id: Int, completion: ((data: LimiteDisponibilidadeResponse?, error: ErrorType?) -> Void)) {
        consultarLimiteDisponibilidadeUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_consultar_limite_disponibilidade}}}
     
     - GET /api/cartoes/{id}/limites-disponibilidades
     - {{{cartao_resource_consultar_limite_disponibilidade_notes}}}
     - examples: [{contentType=application/json, example={
  "saldoDisponivelCompraInternacional" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelSaque" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteSaquePeriodo" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalSaqueGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalSaquePeriodo" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelSaqueInternacional" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteMaximo" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoPontosFidelidade" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 123456789,
  "limiteConsignado" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoDisponivelParcelado" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalParcelas" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteSaqueGlobal" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteInternacionalCompra" : 1.3579000000000001069366817318950779736042022705078125,
  "limiteCompra" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) {{{cartao_resource_consultar_limite_disponibilidade_param_id}}} 

     - returns: RequestBuilder<LimiteDisponibilidadeResponse> 
     */
    public class func consultarLimiteDisponibilidadeUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<LimiteDisponibilidadeResponse> {
        var path = "/api/cartoes/{id}/limites-disponibilidades"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<LimiteDisponibilidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_consultar_lotes_cartoes_pre_pagos}}}
     
     - parameter id: (path) {{{cartao_resource_consultar_lotes_cartoes_pre_pagos_param_id_lote}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarLotesCartoesPrePagosUsingGET(id id: Int, completion: ((data: LoteCartoesPrePagosResponse?, error: ErrorType?) -> Void)) {
        consultarLotesCartoesPrePagosUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_consultar_lotes_cartoes_pre_pagos}}}
     
     - GET /api/cartoes/lotes-cartoes-pre-pagos/{id}
     - {{{cartao_resource_consultar_lotes_cartoes_pre_pagos_notes}}}
     - examples: [{contentType=application/json, example={
  "identificadorExterno" : "aeiou",
  "idOrigemComercial" : 123456789,
  "idProduto" : 123456789,
  "idImagem" : 123456789,
  "idEndereco" : 123456789,
  "statusProcessamento" : 123,
  "idTipoCartao" : 123456789,
  "id" : 123456789,
  "quantidade" : 123,
  "dataCadastro" : "aeiou",
  "usuarioCadastro" : "aeiou"
}}]
     
     - parameter id: (path) {{{cartao_resource_consultar_lotes_cartoes_pre_pagos_param_id_lote}}} 

     - returns: RequestBuilder<LoteCartoesPrePagosResponse> 
     */
    public class func consultarLotesCartoesPrePagosUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<LoteCartoesPrePagosResponse> {
        var path = "/api/cartoes/lotes-cartoes-pre-pagos/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<LoteCartoesPrePagosResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_consultar_portador}}}
     
     - parameter id: (path) {{{cartao_resource_consultar_portador_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarPortadorUsingGET(id id: Int, completion: ((data: PortadorResponse?, error: ErrorType?) -> Void)) {
        consultarPortadorUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_consultar_portador}}}
     
     - GET /api/cartoes/{id}/portadores
     - {{{cartao_resource_consultar_portador_notes}}}
     - examples: [{contentType=application/json, example={
  "idPessoa" : 123456789,
  "idConta" : 123456789,
  "idProduto" : 123456789,
  "dataCancelamentoPortador" : "aeiou",
  "idTipoCartao" : 123456789,
  "idParentesco" : 123456789,
  "dataCadastroPortador" : "aeiou",
  "nomeImpresso" : "aeiou",
  "flagAtivo" : 123,
  "tipoPortador" : "aeiou"
}}]
     
     - parameter id: (path) {{{cartao_resource_consultar_portador_param_id}}} 

     - returns: RequestBuilder<PortadorResponse> 
     */
    public class func consultarPortadorUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<PortadorResponse> {
        var path = "/api/cartoes/{id}/portadores"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PortadorResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_consultar}}}
     
     - parameter id: (path) {{{cartao_resource_consultar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET12(id id: Int, completion: ((data: CartaoDetalheResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET12WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_consultar}}}
     
     - GET /api/cartoes/{id}
     - {{{cartao_resource_consultar_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroBin" : 123456789,
  "idConta" : 123456789,
  "descricaoTipoCartao" : "aeiou",
  "nomeArquivoImpressao" : "aeiou",
  "codigoDesbloqueio" : "aeiou",
  "numeroCartaoHash" : 123456789,
  "flagTitular" : 123,
  "dataStatus" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataEmissao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatus" : 123456789,
  "numeroCartao" : "aeiou",
  "idPessoa" : 123456789,
  "dataEstagio" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "cartaoVirtual" : 123,
  "idProduto" : 123456789,
  "tipoCartao" : 123456789,
  "numeroCartaoCriptografado" : "aeiou",
  "idEstagio" : 123456789,
  "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sequencialCartao" : 123,
  "id" : 123456789,
  "nomeImpresso" : "aeiou",
  "dataImpressao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "impressaoAvulsa" : 123
}}]
     
     - parameter id: (path) {{{cartao_resource_consultar_param_id}}} 

     - returns: RequestBuilder<CartaoDetalheResponse> 
     */
    public class func consultarUsingGET12WithRequestBuilder(id id: Int) -> RequestBuilder<CartaoDetalheResponse> {
        var path = "/api/cartoes/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CartaoDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{conta_resource_cadastrar_cartao_multiapp}}}
     
     - parameter cartaoMultiAppPersist: (body) cartaoMultiAppPersist 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func criarCartoesMultiAppUsingPOST(cartaoMultiAppPersist cartaoMultiAppPersist: CartaoMultiAppPersistValue, completion: ((data: VinculoCartoesResponse?, error: ErrorType?) -> Void)) {
        criarCartoesMultiAppUsingPOSTWithRequestBuilder(cartaoMultiAppPersist: cartaoMultiAppPersist).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{conta_resource_cadastrar_cartao_multiapp}}}
     
     - POST /api/cartoes/gerar-cartoes-multiapp
     - {{{conta_resource_cadastrar_cartao_multiapp_notes}}}
     - examples: [{contentType=application/json, example={
  "idCartaoPrincipal" : 123456789,
  "idCartaoVinculado" : 123456789
}}]
     
     - parameter cartaoMultiAppPersist: (body) cartaoMultiAppPersist 

     - returns: RequestBuilder<VinculoCartoesResponse> 
     */
    public class func criarCartoesMultiAppUsingPOSTWithRequestBuilder(cartaoMultiAppPersist cartaoMultiAppPersist: CartaoMultiAppPersistValue) -> RequestBuilder<VinculoCartoesResponse> {
        let path = "/api/cartoes/gerar-cartoes-multiapp"
        let URLString = PierAPI.basePath + path
        
        let parameters = cartaoMultiAppPersist.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<VinculoCartoesResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_desbloquear_senha_incorreta}}}
     
     - parameter id: (path) {{{cartao_resource_desbloquear_senha_incorreta_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desbloquearSenhaIncorretaUsingPOST(id id: Int, completion: ((data: CartaoResponse?, error: ErrorType?) -> Void)) {
        desbloquearSenhaIncorretaUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_desbloquear_senha_incorreta}}}
     
     - POST /api/cartoes/{id}/desbloquear-senha-incorreta
     - {{{cartao_resource_desbloquear_senha_incorreta_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroBin" : 123456789,
  "idConta" : 123456789,
  "nomeArquivoImpressao" : "aeiou",
  "codigoDesbloqueio" : "aeiou",
  "numeroCartaoHash" : 123456789,
  "flagTitular" : 123,
  "dataStatus" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataEmissao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatus" : 123456789,
  "numeroCartao" : "aeiou",
  "idPessoa" : 123456789,
  "dataEstagio" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "cartaoVirtual" : 123,
  "idProduto" : 123456789,
  "numeroCartaoCriptografado" : "aeiou",
  "idEstagio" : 123456789,
  "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sequencialCartao" : 123,
  "id" : 123456789,
  "nomeImpresso" : "aeiou",
  "dataImpressao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "impressaoAvulsa" : 123
}}]
     
     - parameter id: (path) {{{cartao_resource_desbloquear_senha_incorreta_param_id}}} 

     - returns: RequestBuilder<CartaoResponse> 
     */
    public class func desbloquearSenhaIncorretaUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<CartaoResponse> {
        var path = "/api/cartoes/{id}/desbloquear-senha-incorreta"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_desbloquear}}}
     
     - parameter id: (path) {{{cartao_resource_desbloquear_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desbloquearUsingPOST(id id: Int, completion: ((data: CartaoResponse?, error: ErrorType?) -> Void)) {
        desbloquearUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_desbloquear}}}
     
     - POST /api/cartoes/{id}/desbloquear
     - {{{cartao_resource_desbloquear_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroBin" : 123456789,
  "idConta" : 123456789,
  "nomeArquivoImpressao" : "aeiou",
  "codigoDesbloqueio" : "aeiou",
  "numeroCartaoHash" : 123456789,
  "flagTitular" : 123,
  "dataStatus" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataEmissao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatus" : 123456789,
  "numeroCartao" : "aeiou",
  "idPessoa" : 123456789,
  "dataEstagio" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "cartaoVirtual" : 123,
  "idProduto" : 123456789,
  "numeroCartaoCriptografado" : "aeiou",
  "idEstagio" : 123456789,
  "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sequencialCartao" : 123,
  "id" : 123456789,
  "nomeImpresso" : "aeiou",
  "dataImpressao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "impressaoAvulsa" : 123
}}]
     
     - parameter id: (path) {{{cartao_resource_desbloquear_param_id}}} 

     - returns: RequestBuilder<CartaoResponse> 
     */
    public class func desbloquearUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<CartaoResponse> {
        var path = "/api/cartoes/{id}/desbloquear"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_gerar_lotes_cartoes_pre_pagos}}}
     
     - parameter idOrigemComercial: (query) {{{lote_cartoes_pre_pagos_persist_id_origem_comercial_value}}} (optional)
     - parameter idProduto: (query) {{{lote_cartoes_pre_pagos_persist_id_produto_value}}} (optional)
     - parameter idTipoCartao: (query) {{{lote_cartoes_pre_pagos_persist_id_tipo_cartao_value}}} (optional)
     - parameter idImagem: (query) {{{lote_cartoes_pre_pagos_persist_id_imagem_value}}} (optional)
     - parameter idEndereco: (query) {{{lote_cartoes_pre_pagos_persist_id_endereco_value}}} (optional)
     - parameter quantidadeCartoes: (query) {{{lote_cartoes_pre_pagos_persist_quantidade_cartoes_value}}} (optional)
     - parameter identificadorExterno: (query) {{{lote_cartoes_pre_pagos_persist_identificador_externo_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func gerarLotesCartoesPrePagosUsingPOST(idOrigemComercial idOrigemComercial: Int?, idProduto: Int?, idTipoCartao: Int?, idImagem: Int?, idEndereco: Int?, quantidadeCartoes: Int?, identificadorExterno: String?, completion: ((data: LoteCartoesPrePagosResponse?, error: ErrorType?) -> Void)) {
        gerarLotesCartoesPrePagosUsingPOSTWithRequestBuilder(idOrigemComercial: idOrigemComercial, idProduto: idProduto, idTipoCartao: idTipoCartao, idImagem: idImagem, idEndereco: idEndereco, quantidadeCartoes: quantidadeCartoes, identificadorExterno: identificadorExterno).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_gerar_lotes_cartoes_pre_pagos}}}
     
     - POST /api/cartoes/lotes-cartoes-pre-pagos
     - {{{cartao_resource_gerar_lotes_cartoes_pre_pagos_notes}}}
     - examples: [{contentType=application/json, example={
  "identificadorExterno" : "aeiou",
  "idOrigemComercial" : 123456789,
  "idProduto" : 123456789,
  "idImagem" : 123456789,
  "idEndereco" : 123456789,
  "statusProcessamento" : 123,
  "idTipoCartao" : 123456789,
  "id" : 123456789,
  "quantidade" : 123,
  "dataCadastro" : "aeiou",
  "usuarioCadastro" : "aeiou"
}}]
     
     - parameter idOrigemComercial: (query) {{{lote_cartoes_pre_pagos_persist_id_origem_comercial_value}}} (optional)
     - parameter idProduto: (query) {{{lote_cartoes_pre_pagos_persist_id_produto_value}}} (optional)
     - parameter idTipoCartao: (query) {{{lote_cartoes_pre_pagos_persist_id_tipo_cartao_value}}} (optional)
     - parameter idImagem: (query) {{{lote_cartoes_pre_pagos_persist_id_imagem_value}}} (optional)
     - parameter idEndereco: (query) {{{lote_cartoes_pre_pagos_persist_id_endereco_value}}} (optional)
     - parameter quantidadeCartoes: (query) {{{lote_cartoes_pre_pagos_persist_quantidade_cartoes_value}}} (optional)
     - parameter identificadorExterno: (query) {{{lote_cartoes_pre_pagos_persist_identificador_externo_value}}} (optional)

     - returns: RequestBuilder<LoteCartoesPrePagosResponse> 
     */
    public class func gerarLotesCartoesPrePagosUsingPOSTWithRequestBuilder(idOrigemComercial idOrigemComercial: Int?, idProduto: Int?, idTipoCartao: Int?, idImagem: Int?, idEndereco: Int?, quantidadeCartoes: Int?, identificadorExterno: String?) -> RequestBuilder<LoteCartoesPrePagosResponse> {
        let path = "/api/cartoes/lotes-cartoes-pre-pagos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idOrigemComercial": idOrigemComercial,
            "idProduto": idProduto,
            "idTipoCartao": idTipoCartao,
            "idImagem": idImagem,
            "idEndereco": idEndereco,
            "quantidadeCartoes": quantidadeCartoes,
            "identificadorExterno": identificadorExterno
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<LoteCartoesPrePagosResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{cartao_resource_gerar_nova_via_multiplo}}}
     
     - parameter id: (path) {{{cartao_resource_gerar_nova_via_param_id_cartao}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func gerarNovaViaCartaoMultiAppUsingPOST(id id: Int, completion: ((data: CartaoMultiAppImpressaoResponse?, error: ErrorType?) -> Void)) {
        gerarNovaViaCartaoMultiAppUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_gerar_nova_via_multiplo}}}
     
     - POST /api/cartoes/{id}/gerar-nova-via-multiplo
     - {{{cartao_resource_gerar_nova_via_multiplo_notes}}}
     - examples: [{contentType=application/json, example={
  "cartao" : "",
  "cartaoPai" : {
    "cvv2" : "aeiou",
    "idCartao" : 123456789,
    "trilha1" : "aeiou",
    "trilhaCVV2" : "aeiou",
    "idConta" : 123456789,
    "trilhaCVV1" : "aeiou",
    "numeroCartaoHash" : 123456789,
    "idTipoCartao" : 123456789,
    "idBandeira" : 123456789,
    "trilha2" : "aeiou",
    "nomeEmpregador" : "aeiou",
    "numeroCartao" : "aeiou",
    "numeroContaCorente" : "aeiou",
    "idPessoa" : 123456789,
    "nomeEmpresa" : "aeiou",
    "dataValidade" : "aeiou",
    "nomeOrigemComercial" : "aeiou",
    "cpf" : "aeiou",
    "nomePlastico" : "aeiou",
    "flagVirtual" : 123,
    "numeroAgencia" : 123,
    "nomeEmpresaBeneficio" : "aeiou",
    "dataGeracao" : "aeiou",
    "tipoPortador" : "aeiou"
  }
}}]
     
     - parameter id: (path) {{{cartao_resource_gerar_nova_via_param_id_cartao}}} 

     - returns: RequestBuilder<CartaoMultiAppImpressaoResponse> 
     */
    public class func gerarNovaViaCartaoMultiAppUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<CartaoMultiAppImpressaoResponse> {
        var path = "/api/cartoes/{id}/gerar-nova-via-multiplo"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CartaoMultiAppImpressaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_gerar_nova_via}}}
     
     - parameter id: (path) {{{cartao_resource_gerar_nova_via_param_id_cartao}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func gerarNovaViaUsingPOST(id id: Int, completion: ((data: CartaoResponse?, error: ErrorType?) -> Void)) {
        gerarNovaViaUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_gerar_nova_via}}}
     
     - POST /api/cartoes/{id}/gerar-nova-via
     - {{{cartao_resource_gerar_nova_via_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroBin" : 123456789,
  "idConta" : 123456789,
  "nomeArquivoImpressao" : "aeiou",
  "codigoDesbloqueio" : "aeiou",
  "numeroCartaoHash" : 123456789,
  "flagTitular" : 123,
  "dataStatus" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataEmissao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatus" : 123456789,
  "numeroCartao" : "aeiou",
  "idPessoa" : 123456789,
  "dataEstagio" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "cartaoVirtual" : 123,
  "idProduto" : 123456789,
  "numeroCartaoCriptografado" : "aeiou",
  "idEstagio" : 123456789,
  "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sequencialCartao" : 123,
  "id" : 123456789,
  "nomeImpresso" : "aeiou",
  "dataImpressao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "impressaoAvulsa" : 123
}}]
     
     - parameter id: (path) {{{cartao_resource_gerar_nova_via_param_id_cartao}}} 

     - returns: RequestBuilder<CartaoResponse> 
     */
    public class func gerarNovaViaUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<CartaoResponse> {
        var path = "/api/cartoes/{id}/gerar-nova-via"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_lancar_tarifa_segunda_via}}}
     
     - parameter id: (path) {{{cartao_resource_lancar_tarifa_segunda_via_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func lancarTarifaSegundaViaUsingPOST(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        lancarTarifaSegundaViaUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_lancar_tarifa_segunda_via}}}
     
     - POST /api/cartoes/{id}/lancar-tarifa-reemissao
     - {{{cartao_resource_lancar_tarifa_segunda_via_notes}}}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) {{{cartao_resource_lancar_tarifa_segunda_via_param_id}}} 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func lancarTarifaSegundaViaUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/cartoes/{id}/lancar-tarifa-reemissao"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_listar_lotes_cartoes_pre_pagos}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idOrigemComercial: (query) {{{lote_cartoes_pre_pagos_request_id_origem_comercial_value}}} (optional)
     - parameter idProduto: (query) {{{lote_cartoes_pre_pagos_request_id_produto_value}}} (optional)
     - parameter idTipoCartao: (query) {{{lote_cartoes_pre_pagos_request_id_tipo_cartao_value}}} (optional)
     - parameter idImagem: (query) {{{lote_cartoes_pre_pagos_request_id_imagem_value}}} (optional)
     - parameter idEndereco: (query) {{{lote_cartoes_pre_pagos_request_id_endereco_value}}} (optional)
     - parameter quantidadeCartoes: (query) {{{lote_cartoes_pre_pagos_request_quantidade_cartoes_value}}} (optional)
     - parameter dataCadastro: (query) {{{lote_cartoes_pre_pagos_request_data_cadastro_value}}} (optional)
     - parameter usuarioCadastro: (query) {{{lote_cartoes_pre_pagos_request_usuario_cadastro_value}}} (optional)
     - parameter statusProcessamento: (query) {{{lote_cartoes_pre_pagos_request_status_processamento_value}}} (optional)
     - parameter identificadorExterno: (query) {{{lote_cartoes_pre_pagos_request_identificador_externo_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarLotesCartoesPrePagosUsingGET(sort sort: [String]?, page: Int?, limit: Int?, idOrigemComercial: Int?, idProduto: Int?, idTipoCartao: Int?, idImagem: Int?, idEndereco: Int?, quantidadeCartoes: Int?, dataCadastro: String?, usuarioCadastro: String?, statusProcessamento: Int?, identificadorExterno: String?, completion: ((data: PageLoteCartoesPrePagosResponse?, error: ErrorType?) -> Void)) {
        listarLotesCartoesPrePagosUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit, idOrigemComercial: idOrigemComercial, idProduto: idProduto, idTipoCartao: idTipoCartao, idImagem: idImagem, idEndereco: idEndereco, quantidadeCartoes: quantidadeCartoes, dataCadastro: dataCadastro, usuarioCadastro: usuarioCadastro, statusProcessamento: statusProcessamento, identificadorExterno: identificadorExterno).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_listar_lotes_cartoes_pre_pagos}}}
     
     - GET /api/cartoes/lotes-cartoes-pre-pagos
     - {{{cartao_resource_listar_lotes_cartoes_pre_pagos_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "identificadorExterno" : "aeiou",
    "idOrigemComercial" : 123456789,
    "idProduto" : 123456789,
    "idImagem" : 123456789,
    "idEndereco" : 123456789,
    "statusProcessamento" : 123,
    "idTipoCartao" : 123456789,
    "id" : 123456789,
    "quantidade" : 123,
    "dataCadastro" : "aeiou",
    "usuarioCadastro" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idOrigemComercial: (query) {{{lote_cartoes_pre_pagos_request_id_origem_comercial_value}}} (optional)
     - parameter idProduto: (query) {{{lote_cartoes_pre_pagos_request_id_produto_value}}} (optional)
     - parameter idTipoCartao: (query) {{{lote_cartoes_pre_pagos_request_id_tipo_cartao_value}}} (optional)
     - parameter idImagem: (query) {{{lote_cartoes_pre_pagos_request_id_imagem_value}}} (optional)
     - parameter idEndereco: (query) {{{lote_cartoes_pre_pagos_request_id_endereco_value}}} (optional)
     - parameter quantidadeCartoes: (query) {{{lote_cartoes_pre_pagos_request_quantidade_cartoes_value}}} (optional)
     - parameter dataCadastro: (query) {{{lote_cartoes_pre_pagos_request_data_cadastro_value}}} (optional)
     - parameter usuarioCadastro: (query) {{{lote_cartoes_pre_pagos_request_usuario_cadastro_value}}} (optional)
     - parameter statusProcessamento: (query) {{{lote_cartoes_pre_pagos_request_status_processamento_value}}} (optional)
     - parameter identificadorExterno: (query) {{{lote_cartoes_pre_pagos_request_identificador_externo_value}}} (optional)

     - returns: RequestBuilder<PageLoteCartoesPrePagosResponse> 
     */
    public class func listarLotesCartoesPrePagosUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idOrigemComercial: Int?, idProduto: Int?, idTipoCartao: Int?, idImagem: Int?, idEndereco: Int?, quantidadeCartoes: Int?, dataCadastro: String?, usuarioCadastro: String?, statusProcessamento: Int?, identificadorExterno: String?) -> RequestBuilder<PageLoteCartoesPrePagosResponse> {
        let path = "/api/cartoes/lotes-cartoes-pre-pagos"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idOrigemComercial": idOrigemComercial,
            "idProduto": idProduto,
            "idTipoCartao": idTipoCartao,
            "idImagem": idImagem,
            "idEndereco": idEndereco,
            "quantidadeCartoes": quantidadeCartoes,
            "dataCadastro": dataCadastro,
            "usuarioCadastro": usuarioCadastro,
            "statusProcessamento": statusProcessamento,
            "identificadorExterno": identificadorExterno
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageLoteCartoesPrePagosResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{cartao_resource_listar}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idStatusCartao: (query) {{{cartao_request_id_status_cartao_value}}} (optional)
     - parameter idEstagioCartao: (query) {{{cartao_request_id_estagio_cartao_value}}} (optional)
     - parameter idConta: (query) {{{cartao_request_id_conta_value}}} (optional)
     - parameter idPessoa: (query) {{{cartao_request_id_pessoa_value}}} (optional)
     - parameter idProduto: (query) {{{cartao_request_id_produto_value}}} (optional)
     - parameter tipoPortador: (query) {{{cartao_request_tipo_portador_value}}} (optional)
     - parameter numeroCartao: (query) {{{cartao_request_numero_cartao_value}}} (optional)
     - parameter nomeImpresso: (query) {{{cartao_request_nome_impresso_value}}} (optional)
     - parameter dataGeracao: (query) {{{cartao_request_data_geracao_value}}} (optional)
     - parameter dataStatusCartao: (query) {{{cartao_request_data_status_cartao_value}}} (optional)
     - parameter dataEstagioCartao: (query) {{{cartao_request_data_estagio_cartao_value}}} (optional)
     - parameter dataValidade: (query) {{{cartao_request_data_validade_value}}} (optional)
     - parameter dataImpressao: (query) {{{cartao_request_data_impressao_value}}} (optional)
     - parameter arquivoImpressao: (query) {{{cartao_request_arquivo_impressao_value}}} (optional)
     - parameter flagImpressaoOrigemComercial: (query) {{{cartao_request_flag_impressao_origem_comercial_value}}} (optional)
     - parameter flagProvisorio: (query) {{{cartao_request_flag_provisorio_value}}} (optional)
     - parameter codigoDesbloqueio: (query) {{{cartao_request_codigo_desbloqueio_value}}} (optional)
     - parameter sequencialCartao: (query) {{{cartao_request_sequencial_cartao_value}}} (optional)
     - parameter identificadorExterno: (query) {{{cartao_request_identificador_externo_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET12(sort sort: [String]?, page: Int?, limit: Int?, idStatusCartao: Int?, idEstagioCartao: Int?, idConta: Int?, idPessoa: Int?, idProduto: Int?, tipoPortador: String?, numeroCartao: String?, nomeImpresso: String?, dataGeracao: String?, dataStatusCartao: String?, dataEstagioCartao: String?, dataValidade: String?, dataImpressao: String?, arquivoImpressao: String?, flagImpressaoOrigemComercial: Int?, flagProvisorio: Int?, codigoDesbloqueio: String?, sequencialCartao: Int?, identificadorExterno: Int?, completion: ((data: PageCartaoResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET12WithRequestBuilder(sort: sort, page: page, limit: limit, idStatusCartao: idStatusCartao, idEstagioCartao: idEstagioCartao, idConta: idConta, idPessoa: idPessoa, idProduto: idProduto, tipoPortador: tipoPortador, numeroCartao: numeroCartao, nomeImpresso: nomeImpresso, dataGeracao: dataGeracao, dataStatusCartao: dataStatusCartao, dataEstagioCartao: dataEstagioCartao, dataValidade: dataValidade, dataImpressao: dataImpressao, arquivoImpressao: arquivoImpressao, flagImpressaoOrigemComercial: flagImpressaoOrigemComercial, flagProvisorio: flagProvisorio, codigoDesbloqueio: codigoDesbloqueio, sequencialCartao: sequencialCartao, identificadorExterno: identificadorExterno).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_listar}}}
     
     - GET /api/cartoes
     - {{{cartao_resource_listar_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "numeroBin" : 123456789,
    "idConta" : 123456789,
    "nomeArquivoImpressao" : "aeiou",
    "codigoDesbloqueio" : "aeiou",
    "numeroCartaoHash" : 123456789,
    "flagTitular" : 123,
    "dataStatus" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "dataEmissao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "idStatus" : 123456789,
    "numeroCartao" : "aeiou",
    "idPessoa" : 123456789,
    "dataEstagio" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "cartaoVirtual" : 123,
    "idProduto" : 123456789,
    "numeroCartaoCriptografado" : "aeiou",
    "idEstagio" : 123456789,
    "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "sequencialCartao" : 123,
    "id" : 123456789,
    "nomeImpresso" : "aeiou",
    "dataImpressao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "impressaoAvulsa" : 123
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter idStatusCartao: (query) {{{cartao_request_id_status_cartao_value}}} (optional)
     - parameter idEstagioCartao: (query) {{{cartao_request_id_estagio_cartao_value}}} (optional)
     - parameter idConta: (query) {{{cartao_request_id_conta_value}}} (optional)
     - parameter idPessoa: (query) {{{cartao_request_id_pessoa_value}}} (optional)
     - parameter idProduto: (query) {{{cartao_request_id_produto_value}}} (optional)
     - parameter tipoPortador: (query) {{{cartao_request_tipo_portador_value}}} (optional)
     - parameter numeroCartao: (query) {{{cartao_request_numero_cartao_value}}} (optional)
     - parameter nomeImpresso: (query) {{{cartao_request_nome_impresso_value}}} (optional)
     - parameter dataGeracao: (query) {{{cartao_request_data_geracao_value}}} (optional)
     - parameter dataStatusCartao: (query) {{{cartao_request_data_status_cartao_value}}} (optional)
     - parameter dataEstagioCartao: (query) {{{cartao_request_data_estagio_cartao_value}}} (optional)
     - parameter dataValidade: (query) {{{cartao_request_data_validade_value}}} (optional)
     - parameter dataImpressao: (query) {{{cartao_request_data_impressao_value}}} (optional)
     - parameter arquivoImpressao: (query) {{{cartao_request_arquivo_impressao_value}}} (optional)
     - parameter flagImpressaoOrigemComercial: (query) {{{cartao_request_flag_impressao_origem_comercial_value}}} (optional)
     - parameter flagProvisorio: (query) {{{cartao_request_flag_provisorio_value}}} (optional)
     - parameter codigoDesbloqueio: (query) {{{cartao_request_codigo_desbloqueio_value}}} (optional)
     - parameter sequencialCartao: (query) {{{cartao_request_sequencial_cartao_value}}} (optional)
     - parameter identificadorExterno: (query) {{{cartao_request_identificador_externo_value}}} (optional)

     - returns: RequestBuilder<PageCartaoResponse> 
     */
    public class func listarUsingGET12WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idStatusCartao: Int?, idEstagioCartao: Int?, idConta: Int?, idPessoa: Int?, idProduto: Int?, tipoPortador: String?, numeroCartao: String?, nomeImpresso: String?, dataGeracao: String?, dataStatusCartao: String?, dataEstagioCartao: String?, dataValidade: String?, dataImpressao: String?, arquivoImpressao: String?, flagImpressaoOrigemComercial: Int?, flagProvisorio: Int?, codigoDesbloqueio: String?, sequencialCartao: Int?, identificadorExterno: Int?) -> RequestBuilder<PageCartaoResponse> {
        let path = "/api/cartoes"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idStatusCartao": idStatusCartao,
            "idEstagioCartao": idEstagioCartao,
            "idConta": idConta,
            "idPessoa": idPessoa,
            "idProduto": idProduto,
            "tipoPortador": tipoPortador,
            "numeroCartao": numeroCartao,
            "nomeImpresso": nomeImpresso,
            "dataGeracao": dataGeracao,
            "dataStatusCartao": dataStatusCartao,
            "dataEstagioCartao": dataEstagioCartao,
            "dataValidade": dataValidade,
            "dataImpressao": dataImpressao,
            "arquivoImpressao": arquivoImpressao,
            "flagImpressaoOrigemComercial": flagImpressaoOrigemComercial,
            "flagProvisorio": flagProvisorio,
            "codigoDesbloqueio": codigoDesbloqueio,
            "sequencialCartao": sequencialCartao,
            "identificadorExterno": identificadorExterno
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{cartao_resource_reativar}}}
     
     - parameter id: (path) {{{cartao_resource_reativar_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func reativarUsingPOST(id id: Int, completion: ((data: CartaoResponse?, error: ErrorType?) -> Void)) {
        reativarUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_reativar}}}
     
     - POST /api/cartoes/{id}/reativar
     - {{{cartao_resource_reativar_notes}}}
     - examples: [{contentType=application/json, example={
  "numeroBin" : 123456789,
  "idConta" : 123456789,
  "nomeArquivoImpressao" : "aeiou",
  "codigoDesbloqueio" : "aeiou",
  "numeroCartaoHash" : 123456789,
  "flagTitular" : 123,
  "dataStatus" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "dataEmissao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "idStatus" : 123456789,
  "numeroCartao" : "aeiou",
  "idPessoa" : 123456789,
  "dataEstagio" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "cartaoVirtual" : 123,
  "idProduto" : 123456789,
  "numeroCartaoCriptografado" : "aeiou",
  "idEstagio" : 123456789,
  "dataValidade" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "sequencialCartao" : 123,
  "id" : 123456789,
  "nomeImpresso" : "aeiou",
  "dataImpressao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "impressaoAvulsa" : 123
}}]
     
     - parameter id: (path) {{{cartao_resource_reativar_param_id}}} 

     - returns: RequestBuilder<CartaoResponse> 
     */
    public class func reativarUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<CartaoResponse> {
        var path = "/api/cartoes/{id}/reativar"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<CartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_validar_c_v_v}}}
     
     - parameter id: (path) {{{cartao_resource_validar_c_v_v_param_id}}} 
     - parameter validaCVV: (body) validaCVV 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func validarCVVUsingPOST(id id: Int, validaCVV: ValidaCVVRequest, completion: ((data: String?, error: ErrorType?) -> Void)) {
        validarCVVUsingPOSTWithRequestBuilder(id: id, validaCVV: validaCVV).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_validar_c_v_v}}}
     
     - POST /api/cartoes/{id}/validar-cvv
     - {{{cartao_resource_validar_c_v_v_notes}}}
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter id: (path) {{{cartao_resource_validar_c_v_v_param_id}}} 
     - parameter validaCVV: (body) validaCVV 

     - returns: RequestBuilder<String> 
     */
    public class func validarCVVUsingPOSTWithRequestBuilder(id id: Int, validaCVV: ValidaCVVRequest) -> RequestBuilder<String> {
        var path = "/api/cartoes/{id}/validar-cvv"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let parameters = validaCVV.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<String>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_validar_dados_impressos_bandeirado}}}
     
     - parameter numeroCartao: (query) {{{cartao_resource_validar_dados_impressos_bandeirado_param_numero_cartao}}} 
     - parameter nomePortador: (query) {{{cartao_resource_validar_dados_impressos_bandeirado_param_nome_portador}}} 
     - parameter dataValidade: (query) {{{cartao_resource_validar_dados_impressos_bandeirado_param_data_validade}}} 
     - parameter codigoSeguranca: (query) {{{cartao_resource_validar_dados_impressos_bandeirado_param_codigo_seguranca}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func validarDadosImpressosBandeiradoUsingGET(numeroCartao numeroCartao: String, nomePortador: String, dataValidade: String, codigoSeguranca: String, completion: ((data: ValidaCartaoResponse?, error: ErrorType?) -> Void)) {
        validarDadosImpressosBandeiradoUsingGETWithRequestBuilder(numeroCartao: numeroCartao, nomePortador: nomePortador, dataValidade: dataValidade, codigoSeguranca: codigoSeguranca).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_validar_dados_impressos_bandeirado}}}
     
     - GET /api/cartoes/validar-dados-impressos-bandeirados
     - {{{cartao_resource_validar_dados_impressos_bandeirado_notes}}}
     - examples: [{contentType=application/json, example={
  "idStatusConta" : 123456789,
  "idConta" : 123456789,
  "idStatusCartao" : 123456789,
  "numeroContaCorrente" : "aeiou",
  "criptogramaResposta" : "aeiou",
  "statusConta" : "aeiou",
  "statusCartao" : "aeiou",
  "numeroAgencia" : 123
}}]
     
     - parameter numeroCartao: (query) {{{cartao_resource_validar_dados_impressos_bandeirado_param_numero_cartao}}} 
     - parameter nomePortador: (query) {{{cartao_resource_validar_dados_impressos_bandeirado_param_nome_portador}}} 
     - parameter dataValidade: (query) {{{cartao_resource_validar_dados_impressos_bandeirado_param_data_validade}}} 
     - parameter codigoSeguranca: (query) {{{cartao_resource_validar_dados_impressos_bandeirado_param_codigo_seguranca}}} 

     - returns: RequestBuilder<ValidaCartaoResponse> 
     */
    public class func validarDadosImpressosBandeiradoUsingGETWithRequestBuilder(numeroCartao numeroCartao: String, nomePortador: String, dataValidade: String, codigoSeguranca: String) -> RequestBuilder<ValidaCartaoResponse> {
        let path = "/api/cartoes/validar-dados-impressos-bandeirados"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "numero_cartao": numeroCartao,
            "nome_portador": nomePortador,
            "data_validade": dataValidade,
            "codigo_seguranca": codigoSeguranca
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ValidaCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{cartao_resource_validar_dados_impressos_nao_bandeirado}}}
     
     - parameter numeroCartao: (query) {{{cartao_resource_validar_dados_impressos_nao_bandeirado_param_numero_cartao}}} 
     - parameter nomePortador: (query) {{{cartao_resource_validar_dados_impressos_nao_bandeirado_param_nome_portador}}} 
     - parameter dataValidade: (query) {{{cartao_resource_validar_dados_impressos_nao_bandeirado_param_data_validade}}} 
     - parameter codigoSeguranca: (query) {{{cartao_resource_validar_dados_impressos_nao_bandeirado_param_codigo_seguranca}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func validarDadosImpressosNaoBandeiradoUsingGET(numeroCartao numeroCartao: String, nomePortador: String, dataValidade: String, codigoSeguranca: String, completion: ((data: ValidaCartaoResponse?, error: ErrorType?) -> Void)) {
        validarDadosImpressosNaoBandeiradoUsingGETWithRequestBuilder(numeroCartao: numeroCartao, nomePortador: nomePortador, dataValidade: dataValidade, codigoSeguranca: codigoSeguranca).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_validar_dados_impressos_nao_bandeirado}}}
     
     - GET /api/cartoes/validar-dados-impressos-nao-bandeirados
     - {{{cartao_resource_validar_dados_impressos_nao_bandeirado_notes}}}
     - examples: [{contentType=application/json, example={
  "idStatusConta" : 123456789,
  "idConta" : 123456789,
  "idStatusCartao" : 123456789,
  "numeroContaCorrente" : "aeiou",
  "criptogramaResposta" : "aeiou",
  "statusConta" : "aeiou",
  "statusCartao" : "aeiou",
  "numeroAgencia" : 123
}}]
     
     - parameter numeroCartao: (query) {{{cartao_resource_validar_dados_impressos_nao_bandeirado_param_numero_cartao}}} 
     - parameter nomePortador: (query) {{{cartao_resource_validar_dados_impressos_nao_bandeirado_param_nome_portador}}} 
     - parameter dataValidade: (query) {{{cartao_resource_validar_dados_impressos_nao_bandeirado_param_data_validade}}} 
     - parameter codigoSeguranca: (query) {{{cartao_resource_validar_dados_impressos_nao_bandeirado_param_codigo_seguranca}}} 

     - returns: RequestBuilder<ValidaCartaoResponse> 
     */
    public class func validarDadosImpressosNaoBandeiradoUsingGETWithRequestBuilder(numeroCartao numeroCartao: String, nomePortador: String, dataValidade: String, codigoSeguranca: String) -> RequestBuilder<ValidaCartaoResponse> {
        let path = "/api/cartoes/validar-dados-impressos-nao-bandeirados"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "numero_cartao": numeroCartao,
            "nome_portador": nomePortador,
            "data_validade": dataValidade,
            "codigo_seguranca": codigoSeguranca
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ValidaCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{cartao_resource_validar_de55_cartao_mastercard}}}
     
     - parameter numeroCartao: (query) {{{cartao_resource_validar_de55_cartao_mastercard_param_numero_cartao}}} 
     - parameter criptograma: (query) {{{cartao_resource_validar_de55_cartao_mastercard_param_criptograma}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func validarDe55CartaoMastercardUsingGET(numeroCartao numeroCartao: String, criptograma: String, completion: ((data: ValidaCartaoResponse?, error: ErrorType?) -> Void)) {
        validarDe55CartaoMastercardUsingGETWithRequestBuilder(numeroCartao: numeroCartao, criptograma: criptograma).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_validar_de55_cartao_mastercard}}}
     
     - GET /api/cartoes/validar-de55-mastercard
     - {{{cartao_resource_validar_de55_cartao_mastercard_notes}}}
     - examples: [{contentType=application/json, example={
  "idStatusConta" : 123456789,
  "idConta" : 123456789,
  "idStatusCartao" : 123456789,
  "numeroContaCorrente" : "aeiou",
  "criptogramaResposta" : "aeiou",
  "statusConta" : "aeiou",
  "statusCartao" : "aeiou",
  "numeroAgencia" : 123
}}]
     
     - parameter numeroCartao: (query) {{{cartao_resource_validar_de55_cartao_mastercard_param_numero_cartao}}} 
     - parameter criptograma: (query) {{{cartao_resource_validar_de55_cartao_mastercard_param_criptograma}}} 

     - returns: RequestBuilder<ValidaCartaoResponse> 
     */
    public class func validarDe55CartaoMastercardUsingGETWithRequestBuilder(numeroCartao numeroCartao: String, criptograma: String) -> RequestBuilder<ValidaCartaoResponse> {
        let path = "/api/cartoes/validar-de55-mastercard"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "numero_cartao": numeroCartao,
            "criptograma": criptograma
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ValidaCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{cartao_resource_validar_senha}}}
     
     - parameter id: (path) {{{cartao_resource_validar_senha_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func validarSenhaUsingGET(id id: Int, completion: ((data: ValidaSenhaCartaoResponse?, error: ErrorType?) -> Void)) {
        validarSenhaUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_validar_senha}}}
     
     - GET /api/cartoes/{id}/validar-senha
     - {{{cartao_resource_validar_senha_notes}}}
     - examples: [{contentType=application/json, example={
  "quantidadeTentativas" : 123,
  "idStatusCartao" : 123456789,
  "mensagem" : "aeiou",
  "quantidadeMaximaTentativas" : 123,
  "statusCartao" : "aeiou"
}}]
     
     - parameter id: (path) {{{cartao_resource_validar_senha_param_id}}} 

     - returns: RequestBuilder<ValidaSenhaCartaoResponse> 
     */
    public class func validarSenhaUsingGETWithRequestBuilder(id id: Int) -> RequestBuilder<ValidaSenhaCartaoResponse> {
        var path = "/api/cartoes/{id}/validar-senha"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ValidaSenhaCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{cartao_resource_validar_tarja}}}
     
     - parameter numeroCartao: (query) {{{cartao_resource_validar_tarja_param_numero_cartao}}} 
     - parameter trilha1: (query) {{{cartao_resource_validar_tarja_param_trilha1}}} 
     - parameter trilha2: (query) {{{cartao_resource_validar_tarja_param_trilha2}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func validarTarjaUsingGET(numeroCartao numeroCartao: String, trilha1: String, trilha2: String, completion: ((data: ValidaCartaoResponse?, error: ErrorType?) -> Void)) {
        validarTarjaUsingGETWithRequestBuilder(numeroCartao: numeroCartao, trilha1: trilha1, trilha2: trilha2).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{cartao_resource_validar_tarja}}}
     
     - GET /api/cartoes/validar-tarja
     - {{{cartao_resource_validar_tarja_notes}}}
     - examples: [{contentType=application/json, example={
  "idStatusConta" : 123456789,
  "idConta" : 123456789,
  "idStatusCartao" : 123456789,
  "numeroContaCorrente" : "aeiou",
  "criptogramaResposta" : "aeiou",
  "statusConta" : "aeiou",
  "statusCartao" : "aeiou",
  "numeroAgencia" : 123
}}]
     
     - parameter numeroCartao: (query) {{{cartao_resource_validar_tarja_param_numero_cartao}}} 
     - parameter trilha1: (query) {{{cartao_resource_validar_tarja_param_trilha1}}} 
     - parameter trilha2: (query) {{{cartao_resource_validar_tarja_param_trilha2}}} 

     - returns: RequestBuilder<ValidaCartaoResponse> 
     */
    public class func validarTarjaUsingGETWithRequestBuilder(numeroCartao numeroCartao: String, trilha1: String, trilha2: String) -> RequestBuilder<ValidaCartaoResponse> {
        let path = "/api/cartoes/validar-tarja"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "numero_cartao": numeroCartao,
            "trilha1": trilha1,
            "trilha2": trilha2
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ValidaCartaoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
