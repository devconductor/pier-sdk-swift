//
// GlobaltagfaturaAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltagfaturaAPI: APIBase {
    /**
     
     {{{fatura_resource_consultar_fatura}}}
     
     - parameter dataVencimento: (path) {{{fatura_resource_consultar_fatura_param_data_vencimento}}} 
     - parameter idConta: (query) {{{fatura_resource_consultar_fatura_param_id_conta}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarFaturaUsingGET1(dataVencimento dataVencimento: String, idConta: Int, completion: ((data: FaturaDetalheResponse?, error: ErrorType?) -> Void)) {
        consultarFaturaUsingGET1WithRequestBuilder(dataVencimento: dataVencimento, idConta: idConta).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{fatura_resource_consultar_fatura}}}
     
     - GET /api/faturas/{dataVencimento}
     - {{{fatura_resource_consultar_fatura_notes}}}
     - examples: [{contentType=application/json, example={
  "pagamentoEfetuado" : false,
  "idConta" : 123456789,
  "dataVencimentoFatura" : "yyyy-MM-dd",
  "valorPagamentoMinimo" : 1.3579000000000001069366817318950779736042022705078125,
  "saldoAnterior" : 1.3579000000000001069366817318950779736042022705078125,
  "valorTotal" : 1.3579000000000001069366817318950779736042022705078125,
  "situacaoProcessamento" : "aeiou",
  "lancamentosFaturaResponse" : [ {
    "valorUSD" : 1.3579000000000001069366817318950779736042022705078125,
    "numeroCartaoMascarado" : "aeiou",
    "idMCC" : 123456789,
    "idTipoEvento" : 123456789,
    "descricaoTipoEvento" : "aeiou",
    "idGrupoMCC" : 123456789,
    "flagSolicitouContestacao" : false,
    "quantidadeParcelas" : 123,
    "nomePortador" : "aeiou",
    "complemento" : "aeiou",
    "dataHoraTransacao" : "aeiou",
    "descricaoAbreviada" : "aeiou",
    "valorBRL" : 1.3579000000000001069366817318950779736042022705078125,
    "numeroParcela" : 123,
    "descricaoEstabelecimento" : "aeiou",
    "flagCredito" : false,
    "valorTaxaEmbarque" : 1.3579000000000001069366817318950779736042022705078125,
    "idConta" : 123456789,
    "idEvento" : 123456789,
    "descricaoTipoTransacao" : "aeiou",
    "descricaoGrupoMCC" : "aeiou",
    "nomeEstabelecimento" : "aeiou",
    "idTransacao" : 123456789,
    "nomeFantasiaEstabelecimento" : "aeiou",
    "titular" : false
  } ],
  "dataFechamento" : "yyyy-MM-dd",
  "dataVencimentoReal" : "yyyy-MM-dd"
}}]
     
     - parameter dataVencimento: (path) {{{fatura_resource_consultar_fatura_param_data_vencimento}}} 
     - parameter idConta: (query) {{{fatura_resource_consultar_fatura_param_id_conta}}} 

     - returns: RequestBuilder<FaturaDetalheResponse> 
     */
    public class func consultarFaturaUsingGET1WithRequestBuilder(dataVencimento dataVencimento: String, idConta: Int) -> RequestBuilder<FaturaDetalheResponse> {
        var path = "/api/faturas/{dataVencimento}"
        path = path.stringByReplacingOccurrencesOfString("{dataVencimento}", withString: "\(dataVencimento)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idConta": idConta
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<FaturaDetalheResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{fatura_conta_resource_consultar_lancamentos_futuros_fatura}}}
     
     - parameter id: (path) {{{fatura_conta_resource_consultar_lancamentos_futuros_fatura_param_id_conta}}} 
     - parameter dataVencimentoPadrao: (query) {{{plano_parcelamento_request_data_vencimento_padrao_value}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarLancamentosFuturosFaturaUsingGET1(id id: Int, dataVencimentoPadrao: String, sort: [String]?, page: Int?, limit: Int?, completion: ((data: PagePlanoParcelamentoResponse?, error: ErrorType?) -> Void)) {
        consultarLancamentosFuturosFaturaUsingGET1WithRequestBuilder(id: id, dataVencimentoPadrao: dataVencimentoPadrao, sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{fatura_conta_resource_consultar_lancamentos_futuros_fatura}}}
     
     - GET /api/contas/{id}/faturas/planos-parcelamento
     - {{{fatura_conta_resource_consultar_lancamentos_futuros_fatura_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "valorEntrada" : 1.3579000000000001069366817318950779736042022705078125,
    "idConta" : 123456789,
    "nomeCampanha" : "aeiou",
    "statusAdesao" : 123,
    "quantidadeParcelas" : 123,
    "dataVencimentoPadrao" : "yyyy-MM-dd",
    "idServicoTipo" : 123456789,
    "valorParcela" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTAC" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTotalRefinanciamento" : 1.3579000000000001069366817318950779736042022705078125,
    "dataFechamentoFatura" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "taxaRefinanciamento" : 1.3579000000000001069366817318950779736042022705078125,
    "dataInclusao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "id" : 123456789,
    "comEntrada" : false,
    "dataProcessamentoAdesao" : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
    "custoEfetivoTotal" : 1.3579000000000001069366817318950779736042022705078125,
    "descricaoServicoTipo" : "aeiou",
    "valorTotalFatura" : 1.3579000000000001069366817318950779736042022705078125,
    "valorIOF" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter id: (path) {{{fatura_conta_resource_consultar_lancamentos_futuros_fatura_param_id_conta}}} 
     - parameter dataVencimentoPadrao: (query) {{{plano_parcelamento_request_data_vencimento_padrao_value}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PagePlanoParcelamentoResponse> 
     */
    public class func consultarLancamentosFuturosFaturaUsingGET1WithRequestBuilder(id id: Int, dataVencimentoPadrao: String, sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PagePlanoParcelamentoResponse> {
        var path = "/api/contas/{id}/faturas/planos-parcelamento"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "dataVencimentoPadrao": dataVencimentoPadrao
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PagePlanoParcelamentoResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{fatura_conta_resource_enviar_fatura_email}}}
     
     - parameter id: (path) {{{fatura_conta_resource_enviar_fatura_email_param_id_conta}}} 
     - parameter dataVencimento: (path) {{{fatura_conta_resource_enviar_fatura_email_param_data_vencimento}}} 
     - parameter email: (query) {{{fatura_conta_resource_enviar_fatura_email_param_email}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func enviarFaturaEmailUsingPOST(id id: Int, dataVencimento: String, email: String?, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        enviarFaturaEmailUsingPOSTWithRequestBuilder(id: id, dataVencimento: dataVencimento, email: email).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{fatura_conta_resource_enviar_fatura_email}}}
     
     - POST /api/contas/{id}/faturas/{dataVencimento}/enviar-email
     - {{{fatura_conta_resource_enviar_fatura_email_notes}}}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) {{{fatura_conta_resource_enviar_fatura_email_param_id_conta}}} 
     - parameter dataVencimento: (path) {{{fatura_conta_resource_enviar_fatura_email_param_data_vencimento}}} 
     - parameter email: (query) {{{fatura_conta_resource_enviar_fatura_email_param_email}}} (optional)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func enviarFaturaEmailUsingPOSTWithRequestBuilder(id id: Int, dataVencimento: String, email: String?) -> RequestBuilder<AnyObject> {
        var path = "/api/contas/{id}/faturas/{dataVencimento}/enviar-email"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{dataVencimento}", withString: "\(dataVencimento)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "email": email
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{fatura_resource_listar_faturas}}}
     
     - parameter idConta: (query) {{{fatura_resource_listar_faturas_param_id_conta}}} 
     - parameter situacaoProcessamento: (query) {{{fatura_resource_listar_faturas_param_situacao_processamento}}} (optional, default to TODAS)
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarFaturasUsingGET1(idConta idConta: Int, situacaoProcessamento: String?, sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageFaturaResponse?, error: ErrorType?) -> Void)) {
        listarFaturasUsingGET1WithRequestBuilder(idConta: idConta, situacaoProcessamento: situacaoProcessamento, sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{fatura_resource_listar_faturas}}}
     
     - GET /api/faturas
     - {{{fatura_resource_listar_faturas_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "pagamentoEfetuado" : false,
    "idConta" : 123456789,
    "dataVencimentoFatura" : "yyyy-MM-dd",
    "valorPagamentoMinimo" : 1.3579000000000001069366817318950779736042022705078125,
    "saldoAnterior" : 1.3579000000000001069366817318950779736042022705078125,
    "valorTotal" : 1.3579000000000001069366817318950779736042022705078125,
    "situacaoProcessamento" : "aeiou",
    "dataFechamento" : "yyyy-MM-dd",
    "dataVencimentoReal" : "yyyy-MM-dd"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter idConta: (query) {{{fatura_resource_listar_faturas_param_id_conta}}} 
     - parameter situacaoProcessamento: (query) {{{fatura_resource_listar_faturas_param_situacao_processamento}}} (optional, default to TODAS)
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageFaturaResponse> 
     */
    public class func listarFaturasUsingGET1WithRequestBuilder(idConta idConta: Int, situacaoProcessamento: String?, sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageFaturaResponse> {
        let path = "/api/faturas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idConta": idConta,
            "situacaoProcessamento": situacaoProcessamento,
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageFaturaResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{fatura_conta_resource_visualizar_documento}}}
     
     - parameter id: (path) {{{fatura_conta_resource_visualizar_documento_param_id_conta}}} 
     - parameter dataVencimento: (path) {{{fatura_conta_resource_visualizar_documento_param_data_vencimento}}} 
     - parameter flagApenasDemostrativo: (query) {{{fatura_conta_resource_enviar_fatura_email_param_flag_apenas_demostrativo}}} (optional)
     - parameter flagRegistraBoleto: (query) {{{fatura_conta_resource_enviar_fatura_email_param_flag_registra_boleto}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func visualizarDocumentoUsingGET(id id: Int, dataVencimento: String, flagApenasDemostrativo: Bool?, flagRegistraBoleto: Bool?, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        visualizarDocumentoUsingGETWithRequestBuilder(id: id, dataVencimento: dataVencimento, flagApenasDemostrativo: flagApenasDemostrativo, flagRegistraBoleto: flagRegistraBoleto).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{fatura_conta_resource_visualizar_documento}}}
     
     - GET /api/contas/{id}/faturas/{dataVencimento}/arquivo.pdf
     - {{{fatura_conta_resource_visualizar_documento_notes}}}
     - examples: [{output=none}]
     
     - parameter id: (path) {{{fatura_conta_resource_visualizar_documento_param_id_conta}}} 
     - parameter dataVencimento: (path) {{{fatura_conta_resource_visualizar_documento_param_data_vencimento}}} 
     - parameter flagApenasDemostrativo: (query) {{{fatura_conta_resource_enviar_fatura_email_param_flag_apenas_demostrativo}}} (optional)
     - parameter flagRegistraBoleto: (query) {{{fatura_conta_resource_enviar_fatura_email_param_flag_registra_boleto}}} (optional)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func visualizarDocumentoUsingGETWithRequestBuilder(id id: Int, dataVencimento: String, flagApenasDemostrativo: Bool?, flagRegistraBoleto: Bool?) -> RequestBuilder<AnyObject> {
        var path = "/api/contas/{id}/faturas/{dataVencimento}/arquivo.pdf"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{dataVencimento}", withString: "\(dataVencimento)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "flagApenasDemostrativo": flagApenasDemostrativo,
            "flagRegistraBoleto": flagRegistraBoleto
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
