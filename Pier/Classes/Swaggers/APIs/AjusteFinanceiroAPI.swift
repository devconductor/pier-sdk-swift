//
// AjusteFinanceiroAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class AjusteFinanceiroAPI: APIBase {
    /**
     
     Lan\u00E7a um ajuste para a conta informada
     
     - parameter idTipoAjuste: (query) C\u00F3digo identificador do tipo de ajuste. 
     - parameter dataAjuste: (query) Data do ajuste no formato yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ. 
     - parameter valorAjuste: (query) Valor do ajuste 
     - parameter idConta: (query) C\u00F3digo identificador da conta. 
     - parameter identificadorExterno: (query) Codigo Hexadecimal (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func ajustarContaUsingPOST(idTipoAjuste idTipoAjuste: Int, dataAjuste: String, valorAjuste: Double, idConta: Int, identificadorExterno: String?, completion: ((data: AjusteFinanceiroResponse?, error: ErrorType?) -> Void)) {
        ajustarContaUsingPOSTWithRequestBuilder(idTipoAjuste: idTipoAjuste, dataAjuste: dataAjuste, valorAjuste: valorAjuste, idConta: idConta, identificadorExterno: identificadorExterno).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lan\u00E7a um ajuste para a conta informada
     
     - POST /api/ajustes-financeiros
     - Este recurso insere um ajuste para a conta do id informado
     - examples: [{contentType=application/json, example={
  "identificadorExterno" : "aeiou",
  "idConta" : 123456789,
  "dataAjuste" : "aeiou",
  "valor" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 123456789,
  "idTipoAjuste" : 123456789,
  "status" : 123456789
}}]
     
     - parameter idTipoAjuste: (query) C\u00F3digo identificador do tipo de ajuste. 
     - parameter dataAjuste: (query) Data do ajuste no formato yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ. 
     - parameter valorAjuste: (query) Valor do ajuste 
     - parameter idConta: (query) C\u00F3digo identificador da conta. 
     - parameter identificadorExterno: (query) Codigo Hexadecimal (optional)

     - returns: RequestBuilder<AjusteFinanceiroResponse> 
     */
    public class func ajustarContaUsingPOSTWithRequestBuilder(idTipoAjuste idTipoAjuste: Int, dataAjuste: String, valorAjuste: Double, idConta: Int, identificadorExterno: String?) -> RequestBuilder<AjusteFinanceiroResponse> {
        let path = "/api/ajustes-financeiros"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "idTipoAjuste": idTipoAjuste,
            "dataAjuste": dataAjuste,
            "valorAjuste": valorAjuste,
            "identificadorExterno": identificadorExterno,
            "idConta": idConta
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AjusteFinanceiroResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Apresenta dados de um determinado ajuste financeiro
     
     - parameter id: (path) C\u00F3digo de identifica\u00E7\u00E3o do ajuste (id). 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func consultarUsingGET2(id id: Int, completion: ((data: AjusteFinanceiroResponse?, error: ErrorType?) -> Void)) {
        consultarUsingGET2WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Apresenta dados de um determinado ajuste financeiro
     
     - GET /api/ajustes-financeiros/{id}
     - Este m\u00E9todo permite consultar dados de um determinado ajuste a partir de seu codigo de identifica\u00E7\u00E3o (id).
     - examples: [{contentType=application/json, example={
  "identificadorExterno" : "aeiou",
  "idConta" : 123456789,
  "dataAjuste" : "aeiou",
  "valor" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 123456789,
  "idTipoAjuste" : 123456789,
  "status" : 123456789
}}]
     
     - parameter id: (path) C\u00F3digo de identifica\u00E7\u00E3o do ajuste (id). 

     - returns: RequestBuilder<AjusteFinanceiroResponse> 
     */
    public class func consultarUsingGET2WithRequestBuilder(id id: Int) -> RequestBuilder<AjusteFinanceiroResponse> {
        var path = "/api/ajustes-financeiros/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AjusteFinanceiroResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Lista ajustes existentes na base de dados do Emissor
     
     - parameter sort: (query) Tipo de ordena\u00E7\u00E3o dos registros. (optional)
     - parameter page: (query) P\u00E1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50) (optional)
     - parameter idTipoAjuste: (query) C\u00F3digo identificador do tipo de ajuste. (optional)
     - parameter dataAjuste: (query) Data do ajuste no formato yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ. (optional)
     - parameter valorAjuste: (query) Valor do ajuste (optional)
     - parameter identificadorExterno: (query) Codigo Hexadecimal (optional)
     - parameter idConta: (query) C\u00F3digo identificador da conta. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarUsingGET2(sort sort: [String]?, page: Int?, limit: Int?, idTipoAjuste: Int?, dataAjuste: String?, valorAjuste: Double?, identificadorExterno: String?, idConta: Int?, completion: ((data: PageAjusteResponse?, error: ErrorType?) -> Void)) {
        listarUsingGET2WithRequestBuilder(sort: sort, page: page, limit: limit, idTipoAjuste: idTipoAjuste, dataAjuste: dataAjuste, valorAjuste: valorAjuste, identificadorExterno: identificadorExterno, idConta: idConta).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Lista ajustes existentes na base de dados do Emissor
     
     - GET /api/ajustes-financeiros
     - Este recurso permite listar ajustes existentes na base de dados do Emissor.
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "identificadorExterno" : "aeiou",
    "idConta" : 123456789,
    "dataAjuste" : "aeiou",
    "valor" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123456789,
    "idTipoAjuste" : 123456789,
    "status" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) Tipo de ordena\u00E7\u00E3o dos registros. (optional)
     - parameter page: (query) P\u00E1gina solicitada (Default = 0) (optional)
     - parameter limit: (query) Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50) (optional)
     - parameter idTipoAjuste: (query) C\u00F3digo identificador do tipo de ajuste. (optional)
     - parameter dataAjuste: (query) Data do ajuste no formato yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ. (optional)
     - parameter valorAjuste: (query) Valor do ajuste (optional)
     - parameter identificadorExterno: (query) Codigo Hexadecimal (optional)
     - parameter idConta: (query) C\u00F3digo identificador da conta. (optional)

     - returns: RequestBuilder<PageAjusteResponse> 
     */
    public class func listarUsingGET2WithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?, idTipoAjuste: Int?, dataAjuste: String?, valorAjuste: Double?, identificadorExterno: String?, idConta: Int?) -> RequestBuilder<PageAjusteResponse> {
        let path = "/api/ajustes-financeiros"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idTipoAjuste": idTipoAjuste,
            "dataAjuste": dataAjuste,
            "valorAjuste": valorAjuste,
            "identificadorExterno": identificadorExterno,
            "idConta": idConta
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageAjusteResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
