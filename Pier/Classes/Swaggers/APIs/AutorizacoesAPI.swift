//
// AutorizacoesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class AutorizacoesAPI: APIBase {
    /**
     
     Cancela Transa\u00C3\u00A7\u00C3\u00A3o financeira
     
     - parameter cancelamentoRequest: (body) cancelamentoRequest 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func cancelarUsingPOST(cancelamentoRequest cancelamentoRequest: CancelamentoTransacaoOnUsRequest, completion: ((data: TransacaoOnUsResponse?, error: ErrorType?) -> Void)) {
        cancelarUsingPOSTWithRequestBuilder(cancelamentoRequest: cancelamentoRequest).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Cancela Transa\u00C3\u00A7\u00C3\u00A3o financeira
     
     - POST /api/cancelar-transacao
     - Este m\u00C3\u00A9todo permite que seja cancelada uma transa\u00C3\u00A7\u00C3\u00A3o.
     - examples: [{contentType=application/json, example={
  "codigoAutorizacao" : "aeiou",
  "planoDeParcelamento" : [ { } ],
  "numeroMascaradoCartao" : "aeiou",
  "nsuOrigem" : "aeiou",
  "nomePortadorCartao" : "aeiou",
  "nsuAutorizacao" : "aeiou"
}}]
     
     - parameter cancelamentoRequest: (body) cancelamentoRequest 

     - returns: RequestBuilder<TransacaoOnUsResponse> 
     */
    public class func cancelarUsingPOSTWithRequestBuilder(cancelamentoRequest cancelamentoRequest: CancelamentoTransacaoOnUsRequest) -> RequestBuilder<TransacaoOnUsResponse> {
        let path = "/api/cancelar-transacao"
        let URLString = PierAPI.basePath + path
        
        let parameters = cancelamentoRequest.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TransacaoOnUsResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Autoriza transa\u00C3\u00A7\u00C3\u00A3o financeira
     
     - parameter autorizacaoOnUsRequest: (body) autorizacaoOnUsRequest 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desfazerUsingPOST(autorizacaoOnUsRequest autorizacaoOnUsRequest: AutorizacaoOnUsRequest, completion: ((data: TransacaoOnUsResponse?, error: ErrorType?) -> Void)) {
        desfazerUsingPOSTWithRequestBuilder(autorizacaoOnUsRequest: autorizacaoOnUsRequest).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Autoriza transa\u00C3\u00A7\u00C3\u00A3o financeira
     
     - POST /api/autorizar-transacao
     - Este m\u00C3\u00A9todo faz uma autoriza\u00C3\u00A7\u00C3\u00A3o de transa\u00C3\u00A7\u00C3\u00A3o financeira.
     - examples: [{contentType=application/json, example={
  "codigoAutorizacao" : "aeiou",
  "planoDeParcelamento" : [ { } ],
  "numeroMascaradoCartao" : "aeiou",
  "nsuOrigem" : "aeiou",
  "nomePortadorCartao" : "aeiou",
  "nsuAutorizacao" : "aeiou"
}}]
     
     - parameter autorizacaoOnUsRequest: (body) autorizacaoOnUsRequest 

     - returns: RequestBuilder<TransacaoOnUsResponse> 
     */
    public class func desfazerUsingPOSTWithRequestBuilder(autorizacaoOnUsRequest autorizacaoOnUsRequest: AutorizacaoOnUsRequest) -> RequestBuilder<TransacaoOnUsResponse> {
        let path = "/api/autorizar-transacao"
        let URLString = PierAPI.basePath + path
        
        let parameters = autorizacaoOnUsRequest.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TransacaoOnUsResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Desfazimento de Transa\u00C3\u00A7\u00C3\u00A3o
     
     - parameter desfazimentoRequest: (body) desfazimentoRequest 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desfazerUsingPOST1(desfazimentoRequest desfazimentoRequest: DesfazimentoTransacaoOnURequest, completion: ((data: TransacaoOnUsResponse?, error: ErrorType?) -> Void)) {
        desfazerUsingPOST1WithRequestBuilder(desfazimentoRequest: desfazimentoRequest).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Desfazimento de Transa\u00C3\u00A7\u00C3\u00A3o
     
     - POST /api/desfazer-transacao
     - Este m\u00C3\u00A9todo permite que seja desfeita uma transa\u00C3\u00A7\u00C3\u00A3o.
     - examples: [{contentType=application/json, example={
  "codigoAutorizacao" : "aeiou",
  "planoDeParcelamento" : [ { } ],
  "numeroMascaradoCartao" : "aeiou",
  "nsuOrigem" : "aeiou",
  "nomePortadorCartao" : "aeiou",
  "nsuAutorizacao" : "aeiou"
}}]
     
     - parameter desfazimentoRequest: (body) desfazimentoRequest 

     - returns: RequestBuilder<TransacaoOnUsResponse> 
     */
    public class func desfazerUsingPOST1WithRequestBuilder(desfazimentoRequest desfazimentoRequest: DesfazimentoTransacaoOnURequest) -> RequestBuilder<TransacaoOnUsResponse> {
        let path = "/api/desfazer-transacao"
        let URLString = PierAPI.basePath + path
        
        let parameters = desfazimentoRequest.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TransacaoOnUsResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Simula Compra Parcelada
     
     - parameter transacoesRequest: (body) transacoesRequest 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func simularUsingPOST(transacoesRequest transacoesRequest: TransacaoOnUsRequest, completion: ((data: TransacaoOnUsResponse?, error: ErrorType?) -> Void)) {
        simularUsingPOSTWithRequestBuilder(transacoesRequest: transacoesRequest).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Simula Compra Parcelada
     
     - POST /api/simular-transacao
     - Este m\u00C3\u00A9todo permite que seja simulada uma compra parcelada.
     - examples: [{contentType=application/json, example={
  "codigoAutorizacao" : "aeiou",
  "planoDeParcelamento" : [ { } ],
  "numeroMascaradoCartao" : "aeiou",
  "nsuOrigem" : "aeiou",
  "nomePortadorCartao" : "aeiou",
  "nsuAutorizacao" : "aeiou"
}}]
     
     - parameter transacoesRequest: (body) transacoesRequest 

     - returns: RequestBuilder<TransacaoOnUsResponse> 
     */
    public class func simularUsingPOSTWithRequestBuilder(transacoesRequest transacoesRequest: TransacaoOnUsRequest) -> RequestBuilder<TransacaoOnUsResponse> {
        let path = "/api/simular-transacao"
        let URLString = PierAPI.basePath + path
        
        let parameters = transacoesRequest.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<TransacaoOnUsResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
