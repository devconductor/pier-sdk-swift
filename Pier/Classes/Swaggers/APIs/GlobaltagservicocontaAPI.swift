//
// GlobaltagservicocontaAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GlobaltagservicocontaAPI: APIBase {
    /**
     
     {{{conta_resource_ativar_anuidade}}}
     
     - parameter id: (path) {{{conta_resource_ativar_anuidade_param_id}}} 
     - parameter idAnuidade: (query) {{{anuidade_request_id_anuidade_value}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter DDD: (query) {{{anuidade_request_d_d_d_value}}} (optional)
     - parameter celular: (query) {{{anuidade_request_celular_value}}} (optional)
     - parameter idOperadora: (query) {{{anuidade_request_id_operadora_value}}} (optional)
     - parameter idOrigemComercial: (query) {{{anuidade_request_id_origem_comercial_value}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func ativarAnuidadeUsingPOST(id id: Int, idAnuidade: Int, sort: [String]?, page: Int?, limit: Int?, DDD: String?, celular: String?, idOperadora: Int?, idOrigemComercial: Int?, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        ativarAnuidadeUsingPOSTWithRequestBuilder(id: id, idAnuidade: idAnuidade, sort: sort, page: page, limit: limit, DDD: DDD, celular: celular, idOperadora: idOperadora, idOrigemComercial: idOrigemComercial).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{conta_resource_ativar_anuidade}}}
     
     - POST /api/contas/{id}/atribuir-anuidade
     - {{{conta_resource_ativar_anuidade_notes}}}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) {{{conta_resource_ativar_anuidade_param_id}}} 
     - parameter idAnuidade: (query) {{{anuidade_request_id_anuidade_value}}} 
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter DDD: (query) {{{anuidade_request_d_d_d_value}}} (optional)
     - parameter celular: (query) {{{anuidade_request_celular_value}}} (optional)
     - parameter idOperadora: (query) {{{anuidade_request_id_operadora_value}}} (optional)
     - parameter idOrigemComercial: (query) {{{anuidade_request_id_origem_comercial_value}}} (optional)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func ativarAnuidadeUsingPOSTWithRequestBuilder(id id: Int, idAnuidade: Int, sort: [String]?, page: Int?, limit: Int?, DDD: String?, celular: String?, idOperadora: Int?, idOrigemComercial: Int?) -> RequestBuilder<AnyObject> {
        var path = "/api/contas/{id}/atribuir-anuidade"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit,
            "idAnuidade": idAnuidade,
            "DDD": DDD,
            "celular": celular,
            "idOperadora": idOperadora,
            "idOrigemComercial": idOrigemComercial
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{conta_resource_ativar_envio_fatura_email}}}
     
     - parameter id: (path) {{{conta_resource_ativar_envio_fatura_email_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func ativarEnvioFaturaEmailUsingPOST(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        ativarEnvioFaturaEmailUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{conta_resource_ativar_envio_fatura_email}}}
     
     - POST /api/contas/{id}/ativar-fatura-email
     - {{{conta_resource_ativar_envio_fatura_email_notes}}}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) {{{conta_resource_ativar_envio_fatura_email_param_id}}} 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func ativarEnvioFaturaEmailUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/contas/{id}/ativar-fatura-email"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{conta_resource_desativar_envio_fatura_email}}}
     
     - parameter id: (path) {{{conta_resource_desativar_envio_fatura_email_param_id}}} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func desativarEnvioFaturaEmailUsingPOST(id id: Int, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        desativarEnvioFaturaEmailUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{conta_resource_desativar_envio_fatura_email}}}
     
     - POST /api/contas/{id}/desativar-fatura-email
     - {{{conta_resource_desativar_envio_fatura_email_notes}}}
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) {{{conta_resource_desativar_envio_fatura_email_param_id}}} 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func desativarEnvioFaturaEmailUsingPOSTWithRequestBuilder(id id: Int) -> RequestBuilder<AnyObject> {
        var path = "/api/contas/{id}/desativar-fatura-email"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     {{{anuidade_resource_listar_anuidades}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarAnuidadesUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageAnuidadeResponse?, error: ErrorType?) -> Void)) {
        listarAnuidadesUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{anuidade_resource_listar_anuidades}}}
     
     - GET /api/anuidades
     - {{{anuidade_resource_listar_anuidades_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "flagAnuidadeBonificada" : false,
    "valor" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123456789,
    "descricao" : "aeiou"
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageAnuidadeResponse> 
     */
    public class func listarAnuidadesUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageAnuidadeResponse> {
        let path = "/api/anuidades"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageAnuidadeResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     {{{operadora_resource_listar_operadoras_telefonicas}}}
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listarOperadorasTelefonicasUsingGET(sort sort: [String]?, page: Int?, limit: Int?, completion: ((data: PageOperadoraResponse?, error: ErrorType?) -> Void)) {
        listarOperadorasTelefonicasUsingGETWithRequestBuilder(sort: sort, page: page, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     {{{operadora_resource_listar_operadoras_telefonicas}}}
     
     - GET /api/operadoras-telefonicas
     - {{{operadora_resource_listar_operadoras_telefonicas_notes}}}
     - examples: [{contentType=application/json, example={
  "previousPage" : 123,
  "last" : true,
  "hasContent" : true,
  "hasNextPage" : true,
  "nextPage" : 123,
  "content" : [ {
    "nome" : "aeiou",
    "id" : 123456789
  } ],
  "totalElements" : 123456789,
  "number" : 123,
  "firstPage" : true,
  "numberOfElements" : 123,
  "size" : 123,
  "totalPages" : 123,
  "hasPreviousPage" : true,
  "first" : true
}}]
     
     - parameter sort: (query) {{{global_menssagem_sort_sort}}} (optional)
     - parameter page: (query) {{{global_menssagem_sort_page_value}}} (optional)
     - parameter limit: (query) {{{global_menssagem_sort_limit}}} (optional)

     - returns: RequestBuilder<PageOperadoraResponse> 
     */
    public class func listarOperadorasTelefonicasUsingGETWithRequestBuilder(sort sort: [String]?, page: Int?, limit: Int?) -> RequestBuilder<PageOperadoraResponse> {
        let path = "/api/operadoras-telefonicas"
        let URLString = PierAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "sort": sort,
            "page": page,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PageOperadoraResponse>.Type = PierAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
