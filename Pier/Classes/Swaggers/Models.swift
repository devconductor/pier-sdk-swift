// Models.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

protocol JSONEncodable {
    func encodeToJSON() -> AnyObject
}

public class Response<T> {
    public let statusCode: Int
    public let header: [String: String]
    public let body: T

    public init(statusCode: Int, header: [String: String], body: T) {
        self.statusCode = statusCode
        self.header = header
        self.body = body
    }

    public convenience init(response: NSHTTPURLResponse, body: T) {
        let rawHeader = response.allHeaderFields
        var header = [String:String]()
        for (key, value) in rawHeader {
            header[key as! String] = value as? String
        }
        self.init(statusCode: response.statusCode, header: header, body: body)
    }
}

private var once = dispatch_once_t()
class Decoders {
    static private var decoders = Dictionary<String, ((AnyObject) -> AnyObject)>()
    
    static func addDecoder<T>(clazz clazz: T.Type, decoder: ((AnyObject) -> T)) {
        let key = "\(T.self)"
        decoders[key] = { decoder($0) as! AnyObject }
    }
    
    static func decode<T>(clazz clazz: [T].Type, source: AnyObject) -> [T] {
        let array = source as! [AnyObject]
        return array.map { Decoders.decode(clazz: T.self, source: $0) }
    }
    
    static func decode<T, Key: Hashable>(clazz clazz: [Key:T].Type, source: AnyObject) -> [Key:T] {
        let sourceDictinoary = source as! [Key: AnyObject]
        var dictionary = [Key:T]()
        for (key, value) in sourceDictinoary {
            dictionary[key] = Decoders.decode(clazz: T.self, source: value)
        }
        return dictionary
    }
    
    static func decode<T>(clazz clazz: T.Type, source: AnyObject) -> T {
        initialize()
        if source is T {
            return source as! T
        }
        
        let key = "\(T.self)"
        if let decoder = decoders[key] {
           return decoder(source) as! T
        } else {
            fatalError("Source \(source) is not convertible to type \(clazz): Maybe swagger file is insufficient")
        }
    }

    static func decodeOptional<T>(clazz clazz: T.Type, source: AnyObject?) -> T? {
        if source is NSNull {
            return nil
        }
        return source.map { (source: AnyObject) -> T in
            Decoders.decode(clazz: clazz, source: source)
        }
    }

    static func decodeOptional<T>(clazz clazz: [T].Type, source: AnyObject?) -> [T]? {
        if source is NSNull {
            return nil
        }
        return source.map { (someSource: AnyObject) -> [T] in
            Decoders.decode(clazz: clazz, source: someSource)
        }
    }

    static func decodeOptional<T, Key: Hashable>(clazz clazz: [Key:T].Type, source: AnyObject?) -> [Key:T]? {
        if source is NSNull {
            return nil
        }
        return source.map { (someSource: AnyObject) -> [Key:T] in
            Decoders.decode(clazz: clazz, source: someSource)
        }
    }
	
    static private func initialize() {
        dispatch_once(&once) {
            let formatters = [
                "yyyy-MM-dd",
                "yyyy-MM-dd'T'HH:mm:ssZZZZZ",
                "yyyy-MM-dd'T'HH:mm:ss.SSSZZZZZ",
                "yyyy-MM-dd'T'HH:mm:ss'Z'"
            ].map { (format: String) -> NSDateFormatter in
                let formatter = NSDateFormatter()
                formatter.dateFormat = format
                return formatter
            }
            // Decoder for NSDate
            Decoders.addDecoder(clazz: NSDate.self) { (source: AnyObject) -> NSDate in
               if let sourceString = source as? String {
                    for formatter in formatters {
                        if let date = formatter.dateFromString(sourceString) {
                            return date
                        }
                    }
                
                }
                if let sourceInt = source as? Int {
                    // treat as a java date
                    return NSDate(timeIntervalSince1970: Double(sourceInt / 1000) )
                }
                fatalError("formatter failed to parse \(source)")
            } 

			// Decoder for [AjusteResponse]
            Decoders.addDecoder(clazz: [AjusteResponse].self) { (source: AnyObject) -> [AjusteResponse] in
                return Decoders.decode(clazz: [AjusteResponse].self, source: source)
            }
			// Decoder for AjusteResponse
            Decoders.addDecoder(clazz: AjusteResponse.self) { (source: AnyObject) -> AjusteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AjusteResponse()
                instance.idAjuste = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAjuste"])
                return instance
            }
			

			// Decoder for [AntecipacaoResponse]
            Decoders.addDecoder(clazz: [AntecipacaoResponse].self) { (source: AnyObject) -> [AntecipacaoResponse] in
                return Decoders.decode(clazz: [AntecipacaoResponse].self, source: source)
            }
			// Decoder for AntecipacaoResponse
            Decoders.addDecoder(clazz: AntecipacaoResponse.self) { (source: AnyObject) -> AntecipacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AntecipacaoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idCompra = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCompra"])
                instance.quantidadeParcelasTotal = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeParcelasTotal"])
                instance.quantidadeParcelasAntecipadas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeParcelasAntecipadas"])
                instance.valorParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcelas"])
                return instance
            }
			

			// Decoder for [AntecipacaoSimuladaDetalhesResponse]
            Decoders.addDecoder(clazz: [AntecipacaoSimuladaDetalhesResponse].self) { (source: AnyObject) -> [AntecipacaoSimuladaDetalhesResponse] in
                return Decoders.decode(clazz: [AntecipacaoSimuladaDetalhesResponse].self, source: source)
            }
			// Decoder for AntecipacaoSimuladaDetalhesResponse
            Decoders.addDecoder(clazz: AntecipacaoSimuladaDetalhesResponse.self) { (source: AnyObject) -> AntecipacaoSimuladaDetalhesResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AntecipacaoSimuladaDetalhesResponse()
                instance.idSimulacaoDetalhe = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idSimulacaoDetalhe"])
                instance.quantidadeParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeParcelas"])
                instance.valorParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcelas"])
                instance.valorDesconto = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorDesconto"])
                instance.valorParcelasDesconto = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcelasDesconto"])
                return instance
            }
			

			// Decoder for [AntecipacaoSimuladaResponse]
            Decoders.addDecoder(clazz: [AntecipacaoSimuladaResponse].self) { (source: AnyObject) -> [AntecipacaoSimuladaResponse] in
                return Decoders.decode(clazz: [AntecipacaoSimuladaResponse].self, source: source)
            }
			// Decoder for AntecipacaoSimuladaResponse
            Decoders.addDecoder(clazz: AntecipacaoSimuladaResponse.self) { (source: AnyObject) -> AntecipacaoSimuladaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AntecipacaoSimuladaResponse()
                instance.idSimulacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idSimulacao"])
                instance.idCompra = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCompra"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.dataHoraSimulacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraSimulacao"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                return instance
            }
			

			// Decoder for [AplicacaoMobile]
            Decoders.addDecoder(clazz: [AplicacaoMobile].self) { (source: AnyObject) -> [AplicacaoMobile] in
                return Decoders.decode(clazz: [AplicacaoMobile].self, source: source)
            }
			// Decoder for AplicacaoMobile
            Decoders.addDecoder(clazz: AplicacaoMobile.self) { (source: AnyObject) -> AplicacaoMobile in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AplicacaoMobile()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idPlataformaMobile = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPlataformaMobile"])
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.cor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cor"])
                instance.som = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["som"])
                instance.icone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["icone"])
                instance.certificadoBase64 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["certificadoBase64"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                return instance
            }
			

			// Decoder for [AplicacaoMobilePersist]
            Decoders.addDecoder(clazz: [AplicacaoMobilePersist].self) { (source: AnyObject) -> [AplicacaoMobilePersist] in
                return Decoders.decode(clazz: [AplicacaoMobilePersist].self, source: source)
            }
			// Decoder for AplicacaoMobilePersist
            Decoders.addDecoder(clazz: AplicacaoMobilePersist.self) { (source: AnyObject) -> AplicacaoMobilePersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AplicacaoMobilePersist()
                instance.idPlataformaMobile = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPlataformaMobile"])
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.cor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cor"])
                instance.som = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["som"])
                instance.icone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["icone"])
                instance.certificadoBase64 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["certificadoBase64"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                return instance
            }
			

			// Decoder for [AplicacaoMobileUpdate]
            Decoders.addDecoder(clazz: [AplicacaoMobileUpdate].self) { (source: AnyObject) -> [AplicacaoMobileUpdate] in
                return Decoders.decode(clazz: [AplicacaoMobileUpdate].self, source: source)
            }
			// Decoder for AplicacaoMobileUpdate
            Decoders.addDecoder(clazz: AplicacaoMobileUpdate.self) { (source: AnyObject) -> AplicacaoMobileUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AplicacaoMobileUpdate()
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.cor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cor"])
                instance.som = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["som"])
                instance.icone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["icone"])
                instance.certificado = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["certificado"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                return instance
            }
			

			// Decoder for [AtendimentoCliente]
            Decoders.addDecoder(clazz: [AtendimentoCliente].self) { (source: AnyObject) -> [AtendimentoCliente] in
                return Decoders.decode(clazz: [AtendimentoCliente].self, source: source)
            }
			// Decoder for AtendimentoCliente
            Decoders.addDecoder(clazz: AtendimentoCliente.self) { (source: AnyObject) -> AtendimentoCliente in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AtendimentoCliente()
                instance.idAtendimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAtendimento"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idTipoAtendimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoAtendimento"])
                instance.descricaoTipoAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoAtendimento"])
                instance.conteudoAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudoAtendimento"])
                instance.detalhesAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["detalhesAtendimento"])
                instance.nomeAtendente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeAtendente"])
                instance.nomeSistema = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeSistema"])
                instance.dataHoraInicioAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraInicioAtendimento"])
                instance.dataHoraFimAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraFimAtendimento"])
                instance.dataAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAtendimento"])
                instance.dataAgendamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAgendamento"])
                instance.dataProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataProcessamento"])
                instance.flagProcessamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagProcessamento"])
                return instance
            }
			

			// Decoder for [AuthToken]
            Decoders.addDecoder(clazz: [AuthToken].self) { (source: AnyObject) -> [AuthToken] in
                return Decoders.decode(clazz: [AuthToken].self, source: source)
            }
			// Decoder for AuthToken
            Decoders.addDecoder(clazz: AuthToken.self) { (source: AnyObject) -> AuthToken in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AuthToken()
                instance.code = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["code"])
                instance.extraInfo = Decoders.decodeOptional(clazz: ExtraInfo.self, source: sourceDictionary["extraInfo"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.owner = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["owner"])
                instance.status = AuthToken.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [AutorizacaoOnUsRequest]
            Decoders.addDecoder(clazz: [AutorizacaoOnUsRequest].self) { (source: AnyObject) -> [AutorizacaoOnUsRequest] in
                return Decoders.decode(clazz: [AutorizacaoOnUsRequest].self, source: source)
            }
			// Decoder for AutorizacaoOnUsRequest
            Decoders.addDecoder(clazz: AutorizacaoOnUsRequest.self) { (source: AnyObject) -> AutorizacaoOnUsRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AutorizacaoOnUsRequest()
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.codigoSegurancaCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoSegurancaCartao"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroRealCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroRealCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.dataHoraTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTerminal"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                return instance
            }
			

			// Decoder for [Banco]
            Decoders.addDecoder(clazz: [Banco].self) { (source: AnyObject) -> [Banco] in
                return Decoders.decode(clazz: [Banco].self, source: source)
            }
			// Decoder for Banco
            Decoders.addDecoder(clazz: Banco.self) { (source: AnyObject) -> Banco in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Banco()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.digitoBanco = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoBanco"])
                return instance
            }
			

			// Decoder for [Base]
            Decoders.addDecoder(clazz: [Base].self) { (source: AnyObject) -> [Base] in
                return Decoders.decode(clazz: [Base].self, source: source)
            }
			// Decoder for Base
            Decoders.addDecoder(clazz: Base.self) { (source: AnyObject) -> Base in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Base()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.servidor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["servidor"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                instance.nomeBase = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeBase"])
                instance.senhaCriptografada = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["senhaCriptografada"])
                instance.domain = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["domain"])
                instance.nomeBaseControleAcesso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeBaseControleAcesso"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.servidorControleAcesso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["servidorControleAcesso"])
                return instance
            }
			

			// Decoder for [BodyAccessToken]
            Decoders.addDecoder(clazz: [BodyAccessToken].self) { (source: AnyObject) -> [BodyAccessToken] in
                return Decoders.decode(clazz: [BodyAccessToken].self, source: source)
            }
			// Decoder for BodyAccessToken
            Decoders.addDecoder(clazz: BodyAccessToken.self) { (source: AnyObject) -> BodyAccessToken in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BodyAccessToken()
                instance.authToken = Decoders.decodeOptional(clazz: AuthToken.self, source: sourceDictionary["AuthToken"])
                instance.action = BodyAccessToken.Action(rawValue: (sourceDictionary["action"] as? String) ?? "") 
                instance.user = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["user"])
                return instance
            }
			

			// Decoder for [BoletoDeFatura]
            Decoders.addDecoder(clazz: [BoletoDeFatura].self) { (source: AnyObject) -> [BoletoDeFatura] in
                return Decoders.decode(clazz: [BoletoDeFatura].self, source: source)
            }
			// Decoder for BoletoDeFatura
            Decoders.addDecoder(clazz: BoletoDeFatura.self) { (source: AnyObject) -> BoletoDeFatura in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BoletoDeFatura()
                instance.dataProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataProcessamento"])
                instance.dataDocumento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataDocumento"])
                instance.dataVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimento"])
                instance.valorBoleto = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorBoleto"])
                instance.numeroDoDocumento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroDoDocumento"])
                instance.nomeBeneficiario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeBeneficiario"])
                instance.agencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["agencia"])
                instance.codigoBeneficiario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoBeneficiario"])
                instance.digitoCodigoBeneficiario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoCodigoBeneficiario"])
                instance.numeroConvenio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroConvenio"])
                instance.carteira = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carteira"])
                instance.nossoNumero = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nossoNumero"])
                instance.banco = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["banco"])
                instance.digitoNossoNumero = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoNossoNumero"])
                instance.aceite = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["aceite"])
                instance.especieDoDocumento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["especieDoDocumento"])
                instance.especie = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["especie"])
                instance.instrucoes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["instrucoes"])
                instance.locaisDePagamento = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["locaisDePagamento"])
                instance.nomePagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePagador"])
                instance.documentoBeneficiario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["documentoBeneficiario"])
                instance.documentoPagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["documentoPagador"])
                instance.logradouroPagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["logradouroPagador"])
                instance.bairroPagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairroPagador"])
                instance.cepPagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cepPagador"])
                instance.cidadePagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidadePagador"])
                instance.ufPagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ufPagador"])
                instance.codigoDeBarras = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoDeBarras"])
                instance.linhaDigitavel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["linhaDigitavel"])
                return instance
            }
			

			// Decoder for [CampoCodificadoDescricaoResponse]
            Decoders.addDecoder(clazz: [CampoCodificadoDescricaoResponse].self) { (source: AnyObject) -> [CampoCodificadoDescricaoResponse] in
                return Decoders.decode(clazz: [CampoCodificadoDescricaoResponse].self, source: source)
            }
			// Decoder for CampoCodificadoDescricaoResponse
            Decoders.addDecoder(clazz: CampoCodificadoDescricaoResponse.self) { (source: AnyObject) -> CampoCodificadoDescricaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CampoCodificadoDescricaoResponse()
                instance.codigo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigo"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                return instance
            }
			

			// Decoder for [CancelamentoTransacaoOnUsRequest]
            Decoders.addDecoder(clazz: [CancelamentoTransacaoOnUsRequest].self) { (source: AnyObject) -> [CancelamentoTransacaoOnUsRequest] in
                return Decoders.decode(clazz: [CancelamentoTransacaoOnUsRequest].self, source: source)
            }
			// Decoder for CancelamentoTransacaoOnUsRequest
            Decoders.addDecoder(clazz: CancelamentoTransacaoOnUsRequest.self) { (source: AnyObject) -> CancelamentoTransacaoOnUsRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CancelamentoTransacaoOnUsRequest()
                instance.nsuAutorizacaoTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuAutorizacaoTransacaoCancelada"])
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.nsuOrigemTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigemTransacaoCancelada"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.dataHoraTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTransacaoCancelada"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroRealCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroRealCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.dataHoraTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTerminal"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                return instance
            }
			

			// Decoder for [Cartao]
            Decoders.addDecoder(clazz: [Cartao].self) { (source: AnyObject) -> [Cartao] in
                return Decoders.decode(clazz: [Cartao].self, source: source)
            }
			// Decoder for Cartao
            Decoders.addDecoder(clazz: Cartao.self) { (source: AnyObject) -> Cartao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Cartao()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idStatusCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusCartao"])
                instance.idEstagioCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstagioCartao"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.tipoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoPortador"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.dataGeracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataGeracao"])
                instance.dataStatusCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataStatusCartao"])
                instance.dataEstagioCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEstagioCartao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.dataImpressao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataImpressao"])
                instance.arquivoImpressao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["arquivoImpressao"])
                instance.flagImpressaoOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagImpressaoOrigemComercial"])
                instance.flagVirtual = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagVirtual"])
                instance.codigoDesbloqueio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoDesbloqueio"])
                instance.sequencialCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["sequencialCartao"])
                return instance
            }
			

			// Decoder for [CartaoDetalhado]
            Decoders.addDecoder(clazz: [CartaoDetalhado].self) { (source: AnyObject) -> [CartaoDetalhado] in
                return Decoders.decode(clazz: [CartaoDetalhado].self, source: source)
            }
			// Decoder for CartaoDetalhado
            Decoders.addDecoder(clazz: CartaoDetalhado.self) { (source: AnyObject) -> CartaoDetalhado in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoDetalhado()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idStatusCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusCartao"])
                instance.idEstagioCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstagioCartao"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.tipoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoPortador"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.dataGeracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataGeracao"])
                instance.dataStatusCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataStatusCartao"])
                instance.dataEstagioCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEstagioCartao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.dataImpressao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataImpressao"])
                instance.arquivoImpressao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["arquivoImpressao"])
                instance.flagImpressaoOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagImpressaoOrigemComercial"])
                instance.flagVirtual = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagVirtual"])
                instance.codigoDesbloqueio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoDesbloqueio"])
                instance.sequencialCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["sequencialCartao"])
                instance.descricaoTipoCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoCartao"])
                instance.tipoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["tipoCartao"])
                return instance
            }
			

			// Decoder for [CartaoImpressao]
            Decoders.addDecoder(clazz: [CartaoImpressao].self) { (source: AnyObject) -> [CartaoImpressao] in
                return Decoders.decode(clazz: [CartaoImpressao].self, source: source)
            }
			// Decoder for CartaoImpressao
            Decoders.addDecoder(clazz: CartaoImpressao.self) { (source: AnyObject) -> CartaoImpressao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoImpressao()
                instance.flagVirtual = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagVirtual"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idBandeira = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idBandeira"])
                instance.idTipoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoCartao"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.nomePlastico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePlastico"])
                instance.cvv2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cvv2"])
                instance.dataGeracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataGeracao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.nomeOrigemComercial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeOrigemComercial"])
                instance.nomeEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpresa"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorente"])
                instance.nomeEmpresaBeneficio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpresaBeneficio"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.tipoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoPortador"])
                instance.nomeEmpregador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpregador"])
                instance.trilha1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilha1"])
                instance.trilha2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilha2"])
                instance.trilhaCVV1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilhaCVV1"])
                instance.trilhaCVV2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilhaCVV2"])
                return instance
            }
			

			// Decoder for [CdtDetalheOportunidadeAUD]
            Decoders.addDecoder(clazz: [CdtDetalheOportunidadeAUD].self) { (source: AnyObject) -> [CdtDetalheOportunidadeAUD] in
                return Decoders.decode(clazz: [CdtDetalheOportunidadeAUD].self, source: source)
            }
			// Decoder for CdtDetalheOportunidadeAUD
            Decoders.addDecoder(clazz: CdtDetalheOportunidadeAUD.self) { (source: AnyObject) -> CdtDetalheOportunidadeAUD in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CdtDetalheOportunidadeAUD()
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOportunidade"])
                instance.nomeCampo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCampo"])
                instance.rev = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["rev"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.revOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revOportunidade"])
                instance.revType = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revType"])
                instance.revUser = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revUser"])
                return instance
            }
			

			// Decoder for [CompraResponse]
            Decoders.addDecoder(clazz: [CompraResponse].self) { (source: AnyObject) -> [CompraResponse] in
                return Decoders.decode(clazz: [CompraResponse].self, source: source)
            }
			// Decoder for CompraResponse
            Decoders.addDecoder(clazz: CompraResponse.self) { (source: AnyObject) -> CompraResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CompraResponse()
                instance.mcc = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["mcc"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.idCompra = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCompra"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.dataCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCompra"])
                instance.valorTotalCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalCompra"])
                instance.valorParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcela"])
                instance.primeiraParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["primeiraParcela"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.numeroParcelasAntecipaveis = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelasAntecipaveis"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                instance.tipoTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoTransacao"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                instance.latitude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["latitude"])
                instance.longitude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["longitude"])
                instance.idGrupoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idGrupoMCC"])
                instance.descricaoGrupoMCC = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoGrupoMCC"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.descricaoProduto = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoProduto"])
                instance.cartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cartao"])
                instance.nomePortadorCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePortadorCartao"])
                return instance
            }
			

			// Decoder for [ContaDetalheResponse]
            Decoders.addDecoder(clazz: [ContaDetalheResponse].self) { (source: AnyObject) -> [ContaDetalheResponse] in
                return Decoders.decode(clazz: [ContaDetalheResponse].self, source: source)
            }
			// Decoder for ContaDetalheResponse
            Decoders.addDecoder(clazz: ContaDetalheResponse.self) { (source: AnyObject) -> ContaDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ContaDetalheResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.nomeOrigemComercial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeOrigemComercial"])
                instance.idFantasiaBasica = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idFantasiaBasica"])
                instance.nomeFantasiaBasica = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasiaBasica"])
                instance.idStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusConta"])
                instance.statusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusConta"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.melhorDiaCompra = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["melhorDiaCompra"])
                instance.dataStatusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataStatusConta"])
                instance.valorRenda = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorRenda"])
                instance.dataCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastro"])
                instance.dataUltimaAlteracaoVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataUltimaAlteracaoVencimento"])
                instance.dataHoraUltimaCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraUltimaCompra"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.formaEnvioFatura = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["formaEnvioFatura"])
                instance.titular = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["titular"])
                instance.limiteGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobal"])
                instance.limiteSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaqueGlobal"])
                instance.saldoDisponivelGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelGlobal"])
                instance.saldoDisponivelSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaque"])
                instance.diasAtraso = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diasAtraso"])
                return instance
            }
			

			// Decoder for [ContaResponse]
            Decoders.addDecoder(clazz: [ContaResponse].self) { (source: AnyObject) -> [ContaResponse] in
                return Decoders.decode(clazz: [ContaResponse].self, source: source)
            }
			// Decoder for ContaResponse
            Decoders.addDecoder(clazz: ContaResponse.self) { (source: AnyObject) -> ContaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ContaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusConta"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.melhorDiaCompra = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["melhorDiaCompra"])
                instance.dataStatusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataStatusConta"])
                instance.dataCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastro"])
                instance.dataUltimaAlteracaoVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataUltimaAlteracaoVencimento"])
                instance.valorRenda = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorRenda"])
                return instance
            }
			

			// Decoder for [DadosCarto]
            Decoders.addDecoder(clazz: [DadosCarto].self) { (source: AnyObject) -> [DadosCarto] in
                return Decoders.decode(clazz: [DadosCarto].self, source: source)
            }
			// Decoder for DadosCarto
            Decoders.addDecoder(clazz: DadosCarto.self) { (source: AnyObject) -> DadosCarto in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DadosCarto()
                instance.flagVirtual = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagVirtual"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.cvv2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cvv2"])
                instance.nomePlastico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePlastico"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorente"])
                instance.idStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusConta"])
                instance.statusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusConta"])
                instance.idStatusCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusCartao"])
                instance.statusCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusCartao"])
                return instance
            }
			

			// Decoder for [DesfazimentoTransacaoOnURequest]
            Decoders.addDecoder(clazz: [DesfazimentoTransacaoOnURequest].self) { (source: AnyObject) -> [DesfazimentoTransacaoOnURequest] in
                return Decoders.decode(clazz: [DesfazimentoTransacaoOnURequest].self, source: source)
            }
			// Decoder for DesfazimentoTransacaoOnURequest
            Decoders.addDecoder(clazz: DesfazimentoTransacaoOnURequest.self) { (source: AnyObject) -> DesfazimentoTransacaoOnURequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DesfazimentoTransacaoOnURequest()
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.nsuOrigemTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigemTransacaoCancelada"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.dataHoraTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTransacaoCancelada"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroRealCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroRealCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.dataHoraTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTerminal"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                return instance
            }
			

			// Decoder for [DetalheOportunidadePersist]
            Decoders.addDecoder(clazz: [DetalheOportunidadePersist].self) { (source: AnyObject) -> [DetalheOportunidadePersist] in
                return Decoders.decode(clazz: [DetalheOportunidadePersist].self, source: source)
            }
			// Decoder for DetalheOportunidadePersist
            Decoders.addDecoder(clazz: DetalheOportunidadePersist.self) { (source: AnyObject) -> DetalheOportunidadePersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DetalheOportunidadePersist()
                instance.nomeCampo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCampo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                return instance
            }
			

			// Decoder for [DetalheOportunidadeResponse]
            Decoders.addDecoder(clazz: [DetalheOportunidadeResponse].self) { (source: AnyObject) -> [DetalheOportunidadeResponse] in
                return Decoders.decode(clazz: [DetalheOportunidadeResponse].self, source: source)
            }
			// Decoder for DetalheOportunidadeResponse
            Decoders.addDecoder(clazz: DetalheOportunidadeResponse.self) { (source: AnyObject) -> DetalheOportunidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DetalheOportunidadeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nomeCampo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCampo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                return instance
            }
			

			// Decoder for [DetalheOportunidadeUpdate]
            Decoders.addDecoder(clazz: [DetalheOportunidadeUpdate].self) { (source: AnyObject) -> [DetalheOportunidadeUpdate] in
                return Decoders.decode(clazz: [DetalheOportunidadeUpdate].self, source: source)
            }
			// Decoder for DetalheOportunidadeUpdate
            Decoders.addDecoder(clazz: DetalheOportunidadeUpdate.self) { (source: AnyObject) -> DetalheOportunidadeUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DetalheOportunidadeUpdate()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nomeCampo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCampo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                return instance
            }
			

			// Decoder for [DetalhesFaturaConsignadaResponse]
            Decoders.addDecoder(clazz: [DetalhesFaturaConsignadaResponse].self) { (source: AnyObject) -> [DetalhesFaturaConsignadaResponse] in
                return Decoders.decode(clazz: [DetalhesFaturaConsignadaResponse].self, source: source)
            }
			// Decoder for DetalhesFaturaConsignadaResponse
            Decoders.addDecoder(clazz: DetalhesFaturaConsignadaResponse.self) { (source: AnyObject) -> DetalhesFaturaConsignadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DetalhesFaturaConsignadaResponse()
                instance.faturaConsignadaResponse = Decoders.decodeOptional(clazz: FaturaConsignadaResponse.self, source: sourceDictionary["faturaConsignadaResponse"])
                instance.transacoes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["transacoes"])
                return instance
            }
			

			// Decoder for [DetalhesFaturaResponse]
            Decoders.addDecoder(clazz: [DetalhesFaturaResponse].self) { (source: AnyObject) -> [DetalhesFaturaResponse] in
                return Decoders.decode(clazz: [DetalhesFaturaResponse].self, source: source)
            }
			// Decoder for DetalhesFaturaResponse
            Decoders.addDecoder(clazz: DetalhesFaturaResponse.self) { (source: AnyObject) -> DetalhesFaturaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DetalhesFaturaResponse()
                instance.fatura = Decoders.decodeOptional(clazz: FaturaResponse.self, source: sourceDictionary["fatura"])
                instance.transacoes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["transacoes"])
                return instance
            }
			

			// Decoder for [Dispositivo]
            Decoders.addDecoder(clazz: [Dispositivo].self) { (source: AnyObject) -> [Dispositivo] in
                return Decoders.decode(clazz: [Dispositivo].self, source: source)
            }
			// Decoder for Dispositivo
            Decoders.addDecoder(clazz: Dispositivo.self) { (source: AnyObject) -> Dispositivo in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Dispositivo()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.idAplicacaoMobile = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAplicacaoMobile"])
                instance.idUsuario = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idUsuario"])
                return instance
            }
			

			// Decoder for [DispositivoPersist]
            Decoders.addDecoder(clazz: [DispositivoPersist].self) { (source: AnyObject) -> [DispositivoPersist] in
                return Decoders.decode(clazz: [DispositivoPersist].self, source: source)
            }
			// Decoder for DispositivoPersist
            Decoders.addDecoder(clazz: DispositivoPersist.self) { (source: AnyObject) -> DispositivoPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DispositivoPersist()
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.idAplicacaoMobile = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAplicacaoMobile"])
                instance.idUsuario = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idUsuario"])
                return instance
            }
			

			// Decoder for [DividaClienteResponse]
            Decoders.addDecoder(clazz: [DividaClienteResponse].self) { (source: AnyObject) -> [DividaClienteResponse] in
                return Decoders.decode(clazz: [DividaClienteResponse].self, source: source)
            }
			// Decoder for DividaClienteResponse
            Decoders.addDecoder(clazz: DividaClienteResponse.self) { (source: AnyObject) -> DividaClienteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DividaClienteResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.dataVencimentoFaturaAtraso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoFaturaAtraso"])
                instance.quantidadeDiasAtraso = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeDiasAtraso"])
                instance.dataVencimentoAcordo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoAcordo"])
                instance.quantidadeDiasAtrasoCorrigido = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeDiasAtrasoCorrigido"])
                instance.valorSaldoDevedor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorSaldoDevedor"])
                instance.taxaCorrecao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaCorrecao"])
                instance.valorCorrecao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorCorrecao"])
                instance.valorIOF = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorIOF"])
                instance.valorSaldoCorrigido = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorSaldoCorrigido"])
                instance.idStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusConta"])
                instance.descricaoStatusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoStatusConta"])
                instance.idStatusAcordo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusAcordo"])
                instance.descricaoStatusAcordo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoStatusAcordo"])
                instance.idEscritorioCobranca = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEscritorioCobranca"])
                instance.nomeEscritorioCobranca = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEscritorioCobranca"])
                instance.emailPessoaConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["emailPessoaConta"])
                return instance
            }
			

			// Decoder for [Endereco]
            Decoders.addDecoder(clazz: [Endereco].self) { (source: AnyObject) -> [Endereco] in
                return Decoders.decode(clazz: [Endereco].self, source: source)
            }
			// Decoder for Endereco
            Decoders.addDecoder(clazz: Endereco.self) { (source: AnyObject) -> Endereco in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Endereco()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idTipoEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoEndereco"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.logradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["logradouro"])
                instance.numero = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numero"])
                instance.complemento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento"])
                instance.pontoReferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pontoReferencia"])
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                instance.dataInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInclusao"])
                instance.dataUltimaAtualizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataUltimaAtualizacao"])
                return instance
            }
			

			// Decoder for [EnderecoAprovadoPersist]
            Decoders.addDecoder(clazz: [EnderecoAprovadoPersist].self) { (source: AnyObject) -> [EnderecoAprovadoPersist] in
                return Decoders.decode(clazz: [EnderecoAprovadoPersist].self, source: source)
            }
			// Decoder for EnderecoAprovadoPersist
            Decoders.addDecoder(clazz: EnderecoAprovadoPersist.self) { (source: AnyObject) -> EnderecoAprovadoPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EnderecoAprovadoPersist()
                instance.idTipoEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoEndereco"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.logradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["logradouro"])
                instance.numero = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numero"])
                instance.complemento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento"])
                instance.pontoReferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pontoReferencia"])
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                instance.enderecoCorrespondencia = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["enderecoCorrespondencia"])
                return instance
            }
			

			// Decoder for [EnderecoAprovadoResponse]
            Decoders.addDecoder(clazz: [EnderecoAprovadoResponse].self) { (source: AnyObject) -> [EnderecoAprovadoResponse] in
                return Decoders.decode(clazz: [EnderecoAprovadoResponse].self, source: source)
            }
			// Decoder for EnderecoAprovadoResponse
            Decoders.addDecoder(clazz: EnderecoAprovadoResponse.self) { (source: AnyObject) -> EnderecoAprovadoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EnderecoAprovadoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoEndereco"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.logradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["logradouro"])
                instance.numero = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numero"])
                instance.complemento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento"])
                instance.pontoReferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pontoReferencia"])
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                instance.enderecoCorrespondencia = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["enderecoCorrespondencia"])
                return instance
            }
			

			// Decoder for [Estabelecimento]
            Decoders.addDecoder(clazz: [Estabelecimento].self) { (source: AnyObject) -> [Estabelecimento] in
                return Decoders.decode(clazz: [Estabelecimento].self, source: source)
            }
			// Decoder for Estabelecimento
            Decoders.addDecoder(clazz: Estabelecimento.self) { (source: AnyObject) -> Estabelecimento in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Estabelecimento()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.nomeFantasia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasia"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.nomeLogradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeLogradouro"])
                instance.numeroEndereco = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroEndereco"])
                instance.complemento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento"])
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                instance.dataCadastramento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastramento"])
                instance.obs = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["obs"])
                instance.contato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["contato"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.flagArquivoSecrFazenda = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagArquivoSecrFazenda"])
                instance.flagCartaoDigitado = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCartaoDigitado"])
                instance.inativo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["inativo"])
                return instance
            }
			

			// Decoder for [EstagioCartao]
            Decoders.addDecoder(clazz: [EstagioCartao].self) { (source: AnyObject) -> [EstagioCartao] in
                return Decoders.decode(clazz: [EstagioCartao].self, source: source)
            }
			// Decoder for EstagioCartao
            Decoders.addDecoder(clazz: EstagioCartao.self) { (source: AnyObject) -> EstagioCartao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EstagioCartao()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [ExtraInfo]
            Decoders.addDecoder(clazz: [ExtraInfo].self) { (source: AnyObject) -> [ExtraInfo] in
                return Decoders.decode(clazz: [ExtraInfo].self, source: source)
            }
			// Decoder for ExtraInfo
            Decoders.addDecoder(clazz: ExtraInfo.self) { (source: AnyObject) -> ExtraInfo in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ExtraInfo()
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                return instance
            }
			

			// Decoder for [FAQ]
            Decoders.addDecoder(clazz: [FAQ].self) { (source: AnyObject) -> [FAQ] in
                return Decoders.decode(clazz: [FAQ].self, source: source)
            }
			// Decoder for FAQ
            Decoders.addDecoder(clazz: FAQ.self) { (source: AnyObject) -> FAQ in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FAQ()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.pergunta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pergunta"])
                instance.resposta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["resposta"])
                instance.relevancia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["relevancia"])
                instance.plataforma = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["plataforma"])
                instance.categoria = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["categoria"])
                instance.status = FAQ.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [FaturaConsignadaDetalheResponse]
            Decoders.addDecoder(clazz: [FaturaConsignadaDetalheResponse].self) { (source: AnyObject) -> [FaturaConsignadaDetalheResponse] in
                return Decoders.decode(clazz: [FaturaConsignadaDetalheResponse].self, source: source)
            }
			// Decoder for FaturaConsignadaDetalheResponse
            Decoders.addDecoder(clazz: FaturaConsignadaDetalheResponse.self) { (source: AnyObject) -> FaturaConsignadaDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FaturaConsignadaDetalheResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.limiteGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobal"])
                instance.flagEmiteFatura = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagEmiteFatura"])
                instance.limiteCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteCompra"])
                instance.dataVencimentoFatura = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoFatura"])
                instance.limiteParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelado"])
                instance.limiteParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelas"])
                instance.valorTotalFatura = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalFatura"])
                instance.valorFaturaAnterior = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorFaturaAnterior"])
                instance.valorPagamentoMinimo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoMinimo"])
                instance.valorPagamentoConsignado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoConsignado"])
                instance.limiteSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaqueGlobal"])
                instance.valorPagamentoComplementar = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoComplementar"])
                instance.limiteSaquePeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaquePeriodo"])
                instance.totalComprasNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalComprasNacionais"])
                instance.limiteConsignado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteConsignado"])
                instance.totalComprasInternacionas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalComprasInternacionas"])
                instance.limiteInternacionalCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalCompra"])
                instance.totalSaquesNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalSaquesNacionais"])
                instance.limiteInternacionalParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalParcelado"])
                instance.totalSaquesInternacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalSaquesInternacionais"])
                instance.limiteInternacionalParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalParcelas"])
                instance.totalDebitosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosNacionais"])
                instance.limiteInternacionalSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalSaqueGlobal"])
                instance.totalDebitosRecorrentes = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosRecorrentes"])
                instance.limiteInternacionalSaquePeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalSaquePeriodo"])
                instance.totalDebitosInternacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosInternacionais"])
                instance.saldoDisponivelGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelGlobal"])
                instance.totalDebitosDiversosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosDiversosNacionais"])
                instance.saldoDisponivelCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelCompra"])
                instance.totalDebitosOpcionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosOpcionais"])
                instance.saldoDisponivelParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelParcelado"])
                instance.totalPagamentos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalPagamentos"])
                instance.saldoDisponivelParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelParcelas"])
                instance.totalCreditosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalCreditosNacionais"])
                instance.totalAjustes = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalAjustes"])
                instance.totalTarifas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalTarifas"])
                instance.totalMulta = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalMulta"])
                instance.saldoDisponivelSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaque"])
                instance.totalJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalJuros"])
                instance.saldoPontosFidelidade = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoPontosFidelidade"])
                instance.taxaRotativo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaRotativo"])
                instance.saldoDisponivelCompraInternacional = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelCompraInternacional"])
                instance.taxaSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaSaque"])
                instance.saldoDisponivelSaqueInternacional = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaqueInternacional"])
                instance.taxaMaximaProximoPeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaMaximaProximoPeriodo"])
                instance.totalServicos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalServicos"])
                return instance
            }
			

			// Decoder for [FaturaConsignadaResponse]
            Decoders.addDecoder(clazz: [FaturaConsignadaResponse].self) { (source: AnyObject) -> [FaturaConsignadaResponse] in
                return Decoders.decode(clazz: [FaturaConsignadaResponse].self, source: source)
            }
			// Decoder for FaturaConsignadaResponse
            Decoders.addDecoder(clazz: FaturaConsignadaResponse.self) { (source: AnyObject) -> FaturaConsignadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FaturaConsignadaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.flagEmiteFatura = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagEmiteFatura"])
                instance.dataVencimentoFatura = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoFatura"])
                instance.valorTotalFatura = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalFatura"])
                instance.valorFaturaAnterior = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorFaturaAnterior"])
                instance.valorPagamentoMinimo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoMinimo"])
                instance.valorPagamentoConsignado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoConsignado"])
                instance.valorPagamentoComplementar = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoComplementar"])
                instance.totalComprasNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalComprasNacionais"])
                instance.totalComprasInternacionas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalComprasInternacionas"])
                instance.totalSaquesNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalSaquesNacionais"])
                instance.totalSaquesInternacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalSaquesInternacionais"])
                instance.totalDebitosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosNacionais"])
                instance.totalDebitosRecorrentes = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosRecorrentes"])
                instance.totalDebitosInternacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosInternacionais"])
                instance.totalDebitosDiversosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosDiversosNacionais"])
                instance.totalDebitosOpcionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosOpcionais"])
                instance.totalPagamentos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalPagamentos"])
                instance.totalCreditosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalCreditosNacionais"])
                instance.totalAjustes = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalAjustes"])
                instance.totalTarifas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalTarifas"])
                instance.totalMulta = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalMulta"])
                instance.totalJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalJuros"])
                instance.taxaRotativo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaRotativo"])
                instance.taxaSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaSaque"])
                instance.taxaMaximaProximoPeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaMaximaProximoPeriodo"])
                instance.totalServicos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalServicos"])
                return instance
            }
			

			// Decoder for [FaturaResponse]
            Decoders.addDecoder(clazz: [FaturaResponse].self) { (source: AnyObject) -> [FaturaResponse] in
                return Decoders.decode(clazz: [FaturaResponse].self, source: source)
            }
			// Decoder for FaturaResponse
            Decoders.addDecoder(clazz: FaturaResponse.self) { (source: AnyObject) -> FaturaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FaturaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.banco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["banco"])
                instance.faixaNossoNumero = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["faixaNossoNumero"])
                instance.minNossoNumero = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["minNossoNumero"])
                instance.maxNossoNumero = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["maxNossoNumero"])
                instance.tamNossoNumero = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["tamNossoNumero"])
                instance.ultimoNossoNumero = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["ultimoNossoNumero"])
                return instance
            }
			

			// Decoder for [HistoricoAtrasoFaturaResponse]
            Decoders.addDecoder(clazz: [HistoricoAtrasoFaturaResponse].self) { (source: AnyObject) -> [HistoricoAtrasoFaturaResponse] in
                return Decoders.decode(clazz: [HistoricoAtrasoFaturaResponse].self, source: source)
            }
			// Decoder for HistoricoAtrasoFaturaResponse
            Decoders.addDecoder(clazz: HistoricoAtrasoFaturaResponse.self) { (source: AnyObject) -> HistoricoAtrasoFaturaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = HistoricoAtrasoFaturaResponse()
                instance.dataVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimento"])
                instance.diasPagamentoAposVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diasPagamentoAposVencimento"])
                return instance
            }
			

			// Decoder for [HistoricoEventos]
            Decoders.addDecoder(clazz: [HistoricoEventos].self) { (source: AnyObject) -> [HistoricoEventos] in
                return Decoders.decode(clazz: [HistoricoEventos].self, source: source)
            }
			// Decoder for HistoricoEventos
            Decoders.addDecoder(clazz: HistoricoEventos.self) { (source: AnyObject) -> HistoricoEventos in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = HistoricoEventos()
                instance.idHistorico = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idHistorico"])
                instance.dataHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHistorico"])
                instance.tipoHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoHistorico"])
                instance.valorAnterior = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["valorAnterior"])
                instance.valorAtribuido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["valorAtribuido"])
                return instance
            }
			

			// Decoder for [HistoricoImpressaoCartao]
            Decoders.addDecoder(clazz: [HistoricoImpressaoCartao].self) { (source: AnyObject) -> [HistoricoImpressaoCartao] in
                return Decoders.decode(clazz: [HistoricoImpressaoCartao].self, source: source)
            }
			// Decoder for HistoricoImpressaoCartao
            Decoders.addDecoder(clazz: HistoricoImpressaoCartao.self) { (source: AnyObject) -> HistoricoImpressaoCartao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = HistoricoImpressaoCartao()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idStatusImpressaoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusImpressaoCartao"])
                instance.mensagemHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mensagemHistorico"])
                instance.dataHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHistorico"])
                return instance
            }
			

			// Decoder for [HistoricoTelefone]
            Decoders.addDecoder(clazz: [HistoricoTelefone].self) { (source: AnyObject) -> [HistoricoTelefone] in
                return Decoders.decode(clazz: [HistoricoTelefone].self, source: source)
            }
			// Decoder for HistoricoTelefone
            Decoders.addDecoder(clazz: HistoricoTelefone.self) { (source: AnyObject) -> HistoricoTelefone in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = HistoricoTelefone()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.idTipoTelefone = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTelefone"])
                instance.tipoTelefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoTelefone"])
                instance.dataModificacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataModificacao"])
                return instance
            }
			

			// Decoder for [Job]
            Decoders.addDecoder(clazz: [Job].self) { (source: AnyObject) -> [Job] in
                return Decoders.decode(clazz: [Job].self, source: source)
            }
			// Decoder for Job
            Decoders.addDecoder(clazz: Job.self) { (source: AnyObject) -> Job in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Job()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.groovy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["groovy"])
                instance.cron = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cron"])
                instance.status = Job.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [LimiteDisponibilidade]
            Decoders.addDecoder(clazz: [LimiteDisponibilidade].self) { (source: AnyObject) -> [LimiteDisponibilidade] in
                return Decoders.decode(clazz: [LimiteDisponibilidade].self, source: source)
            }
			// Decoder for LimiteDisponibilidade
            Decoders.addDecoder(clazz: LimiteDisponibilidade.self) { (source: AnyObject) -> LimiteDisponibilidade in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LimiteDisponibilidade()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.limiteGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobal"])
                instance.limiteCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteCompra"])
                instance.limiteParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelado"])
                instance.limiteParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelas"])
                instance.limiteSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaqueGlobal"])
                instance.limiteSaquePeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaquePeriodo"])
                instance.limiteConsignado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteConsignado"])
                instance.limiteInternacionalCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalCompra"])
                instance.limiteInternacionalParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalParcelado"])
                instance.limiteInternacionalParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalParcelas"])
                instance.limiteInternacionalSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalSaqueGlobal"])
                instance.limiteInternacionalSaquePeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalSaquePeriodo"])
                instance.saldoDisponivelGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelGlobal"])
                instance.saldoDisponivelCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelCompra"])
                instance.saldoDisponivelParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelParcelado"])
                instance.saldoDisponivelParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelParcelas"])
                instance.saldoDisponivelSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaque"])
                instance.saldoPontosFidelidade = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoPontosFidelidade"])
                instance.saldoDisponivelCompraInternacional = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelCompraInternacional"])
                instance.saldoDisponivelSaqueInternacional = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaqueInternacional"])
                return instance
            }
			

			// Decoder for [LinkHistoricoAssessoriaResponse]
            Decoders.addDecoder(clazz: [LinkHistoricoAssessoriaResponse].self) { (source: AnyObject) -> [LinkHistoricoAssessoriaResponse] in
                return Decoders.decode(clazz: [LinkHistoricoAssessoriaResponse].self, source: source)
            }
			// Decoder for LinkHistoricoAssessoriaResponse
            Decoders.addDecoder(clazz: LinkHistoricoAssessoriaResponse.self) { (source: AnyObject) -> LinkHistoricoAssessoriaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LinkHistoricoAssessoriaResponse()
                instance.dataHoraHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraHistorico"])
                instance.tipoHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoHistorico"])
                instance.nomeAssessoria = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeAssessoria"])
                return instance
            }
			

			// Decoder for [LinkPageHistoricoAssessoriaResponse]
            Decoders.addDecoder(clazz: [LinkPageHistoricoAssessoriaResponse].self) { (source: AnyObject) -> [LinkPageHistoricoAssessoriaResponse] in
                return Decoders.decode(clazz: [LinkPageHistoricoAssessoriaResponse].self, source: source)
            }
			// Decoder for LinkPageHistoricoAssessoriaResponse
            Decoders.addDecoder(clazz: LinkPageHistoricoAssessoriaResponse.self) { (source: AnyObject) -> LinkPageHistoricoAssessoriaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LinkPageHistoricoAssessoriaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [LinkPageTransferenciaBancariaResponse]
            Decoders.addDecoder(clazz: [LinkPageTransferenciaBancariaResponse].self) { (source: AnyObject) -> [LinkPageTransferenciaBancariaResponse] in
                return Decoders.decode(clazz: [LinkPageTransferenciaBancariaResponse].self, source: source)
            }
			// Decoder for LinkPageTransferenciaBancariaResponse
            Decoders.addDecoder(clazz: LinkPageTransferenciaBancariaResponse.self) { (source: AnyObject) -> LinkPageTransferenciaBancariaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LinkPageTransferenciaBancariaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [LinkTransferenciaBancariaResponse]
            Decoders.addDecoder(clazz: [LinkTransferenciaBancariaResponse].self) { (source: AnyObject) -> [LinkTransferenciaBancariaResponse] in
                return Decoders.decode(clazz: [LinkTransferenciaBancariaResponse].self, source: source)
            }
			// Decoder for LinkTransferenciaBancariaResponse
            Decoders.addDecoder(clazz: LinkTransferenciaBancariaResponse.self) { (source: AnyObject) -> LinkTransferenciaBancariaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LinkTransferenciaBancariaResponse()
                instance.nsuorigem = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nsuorigem"])
                instance.idAutorizacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAutorizacao"])
                instance.idTransferencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransferencia"])
                instance.codigoAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoAutorizacao"])
                instance.dataAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAutorizacao"])
                instance.origem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["origem"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.idOperacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOperacao"])
                instance.terminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminal"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.dataCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCompra"])
                instance.valorCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorCompra"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.valorParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcela"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.dataMovimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataMovimento"])
                instance.valorContrato = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorContrato"])
                instance.taxaJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaJuros"])
                instance.valorIOF = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorIOF"])
                instance.valorTAC = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTAC"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.valorEntrada = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorEntrada"])
                instance.dataVencimentoReal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoReal"])
                instance.dataVencimentoPadrao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoPadrao"])
                instance.idContaPortador = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idContaPortador"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                return instance
            }
			

			// Decoder for [ListaProdutos]
            Decoders.addDecoder(clazz: [ListaProdutos].self) { (source: AnyObject) -> [ListaProdutos] in
                return Decoders.decode(clazz: [ListaProdutos].self, source: source)
            }
			// Decoder for ListaProdutos
            Decoders.addDecoder(clazz: ListaProdutos.self) { (source: AnyObject) -> ListaProdutos in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ListaProdutos()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [LoteCartoesPrePagos]
            Decoders.addDecoder(clazz: [LoteCartoesPrePagos].self) { (source: AnyObject) -> [LoteCartoesPrePagos] in
                return Decoders.decode(clazz: [LoteCartoesPrePagos].self, source: source)
            }
			// Decoder for LoteCartoesPrePagos
            Decoders.addDecoder(clazz: LoteCartoesPrePagos.self) { (source: AnyObject) -> LoteCartoesPrePagos in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LoteCartoesPrePagos()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idTipoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoCartao"])
                instance.idImagem = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idImagem"])
                instance.idEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEndereco"])
                instance.quantidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidade"])
                instance.dataCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastro"])
                instance.usuarioCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuarioCadastro"])
                instance.statusProcessamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["statusProcessamento"])
                return instance
            }
			

			// Decoder for [MapOfstringAndstring]
            Decoders.addDecoder(clazz: [MapOfstringAndstring].self) { (source: AnyObject) -> [MapOfstringAndstring] in
                return Decoders.decode(clazz: [MapOfstringAndstring].self, source: source)
            }
			// Decoder for MapOfstringAndstring
            Decoders.addDecoder(clazz: MapOfstringAndstring.self) { (source: AnyObject) -> MapOfstringAndstring in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = MapOfstringAndstring()
                return instance
            }
			

			// Decoder for [NotificacaoPushResponse]
            Decoders.addDecoder(clazz: [NotificacaoPushResponse].self) { (source: AnyObject) -> [NotificacaoPushResponse] in
                return Decoders.decode(clazz: [NotificacaoPushResponse].self, source: source)
            }
			// Decoder for NotificacaoPushResponse
            Decoders.addDecoder(clazz: NotificacaoPushResponse.self) { (source: AnyObject) -> NotificacaoPushResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = NotificacaoPushResponse()
                instance.dataEnvio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEnvio"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.tipoEvento = NotificacaoPushResponse.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                instance.status = NotificacaoPushResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.tokenDispositivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tokenDispositivo"])
                instance.titulo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["titulo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.plataforma = NotificacaoPushResponse.Plataforma(rawValue: (sourceDictionary["plataforma"] as? String) ?? "") 
                instance.protocolo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["protocolo"])
                return instance
            }
			

			// Decoder for [NotificacaoSMSBody]
            Decoders.addDecoder(clazz: [NotificacaoSMSBody].self) { (source: AnyObject) -> [NotificacaoSMSBody] in
                return Decoders.decode(clazz: [NotificacaoSMSBody].self, source: source)
            }
			// Decoder for NotificacaoSMSBody
            Decoders.addDecoder(clazz: NotificacaoSMSBody.self) { (source: AnyObject) -> NotificacaoSMSBody in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = NotificacaoSMSBody()
                instance.nsu = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nsu"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.celular = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["celular"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.dataAgendamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAgendamento"])
                instance.tipoEvento = NotificacaoSMSBody.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [NotificacaoSMSResponse]
            Decoders.addDecoder(clazz: [NotificacaoSMSResponse].self) { (source: AnyObject) -> [NotificacaoSMSResponse] in
                return Decoders.decode(clazz: [NotificacaoSMSResponse].self, source: source)
            }
			// Decoder for NotificacaoSMSResponse
            Decoders.addDecoder(clazz: NotificacaoSMSResponse.self) { (source: AnyObject) -> NotificacaoSMSResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = NotificacaoSMSResponse()
                instance.protocolo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["protocolo"])
                instance.mensagem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mensagem"])
                return instance
            }
			

			// Decoder for [OportunidadeAUDResponse]
            Decoders.addDecoder(clazz: [OportunidadeAUDResponse].self) { (source: AnyObject) -> [OportunidadeAUDResponse] in
                return Decoders.decode(clazz: [OportunidadeAUDResponse].self, source: source)
            }
			// Decoder for OportunidadeAUDResponse
            Decoders.addDecoder(clazz: OportunidadeAUDResponse.self) { (source: AnyObject) -> OportunidadeAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OportunidadeAUDResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.idStatusOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusOportunidade"])
                instance.dataCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastro"])
                instance.dataAtualizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAtualizacao"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataInicioVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInicioVigencia"])
                instance.dataFimVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFimVigencia"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.revType = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revType"])
                return instance
            }
			

			// Decoder for [OportunidadePersist]
            Decoders.addDecoder(clazz: [OportunidadePersist].self) { (source: AnyObject) -> [OportunidadePersist] in
                return Decoders.decode(clazz: [OportunidadePersist].self, source: source)
            }
			// Decoder for OportunidadePersist
            Decoders.addDecoder(clazz: OportunidadePersist.self) { (source: AnyObject) -> OportunidadePersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OportunidadePersist()
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.idStatusOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusOportunidade"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataInicioVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInicioVigencia"])
                instance.dataFimVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFimVigencia"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                return instance
            }
			

			// Decoder for [OportunidadeResponse]
            Decoders.addDecoder(clazz: [OportunidadeResponse].self) { (source: AnyObject) -> [OportunidadeResponse] in
                return Decoders.decode(clazz: [OportunidadeResponse].self, source: source)
            }
			// Decoder for OportunidadeResponse
            Decoders.addDecoder(clazz: OportunidadeResponse.self) { (source: AnyObject) -> OportunidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OportunidadeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.idStatusOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusOportunidade"])
                instance.dataCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastro"])
                instance.dataAtualizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAtualizacao"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataInicioVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInicioVigencia"])
                instance.dataFimVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFimVigencia"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                return instance
            }
			

			// Decoder for [OportunidadeUpdate]
            Decoders.addDecoder(clazz: [OportunidadeUpdate].self) { (source: AnyObject) -> [OportunidadeUpdate] in
                return Decoders.decode(clazz: [OportunidadeUpdate].self, source: source)
            }
			// Decoder for OportunidadeUpdate
            Decoders.addDecoder(clazz: OportunidadeUpdate.self) { (source: AnyObject) -> OportunidadeUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OportunidadeUpdate()
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.idStatusOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusOportunidade"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataInicioVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInicioVigencia"])
                instance.dataFimVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFimVigencia"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                return instance
            }
			

			// Decoder for [OrigemComercial]
            Decoders.addDecoder(clazz: [OrigemComercial].self) { (source: AnyObject) -> [OrigemComercial] in
                return Decoders.decode(clazz: [OrigemComercial].self, source: source)
            }
			// Decoder for OrigemComercial
            Decoders.addDecoder(clazz: OrigemComercial.self) { (source: AnyObject) -> OrigemComercial in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrigemComercial()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [PageAplicacoesMobile]
            Decoders.addDecoder(clazz: [PageAplicacoesMobile].self) { (source: AnyObject) -> [PageAplicacoesMobile] in
                return Decoders.decode(clazz: [PageAplicacoesMobile].self, source: source)
            }
			// Decoder for PageAplicacoesMobile
            Decoders.addDecoder(clazz: PageAplicacoesMobile.self) { (source: AnyObject) -> PageAplicacoesMobile in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageAplicacoesMobile()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageAtendimentoClientes]
            Decoders.addDecoder(clazz: [PageAtendimentoClientes].self) { (source: AnyObject) -> [PageAtendimentoClientes] in
                return Decoders.decode(clazz: [PageAtendimentoClientes].self, source: source)
            }
			// Decoder for PageAtendimentoClientes
            Decoders.addDecoder(clazz: PageAtendimentoClientes.self) { (source: AnyObject) -> PageAtendimentoClientes in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageAtendimentoClientes()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageBancos]
            Decoders.addDecoder(clazz: [PageBancos].self) { (source: AnyObject) -> [PageBancos] in
                return Decoders.decode(clazz: [PageBancos].self, source: source)
            }
			// Decoder for PageBancos
            Decoders.addDecoder(clazz: PageBancos.self) { (source: AnyObject) -> PageBancos in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageBancos()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageBases]
            Decoders.addDecoder(clazz: [PageBases].self) { (source: AnyObject) -> [PageBases] in
                return Decoders.decode(clazz: [PageBases].self, source: source)
            }
			// Decoder for PageBases
            Decoders.addDecoder(clazz: PageBases.self) { (source: AnyObject) -> PageBases in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageBases()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageCampoCodificadoDescricao]
            Decoders.addDecoder(clazz: [PageCampoCodificadoDescricao].self) { (source: AnyObject) -> [PageCampoCodificadoDescricao] in
                return Decoders.decode(clazz: [PageCampoCodificadoDescricao].self, source: source)
            }
			// Decoder for PageCampoCodificadoDescricao
            Decoders.addDecoder(clazz: PageCampoCodificadoDescricao.self) { (source: AnyObject) -> PageCampoCodificadoDescricao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageCampoCodificadoDescricao()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageCartoes]
            Decoders.addDecoder(clazz: [PageCartoes].self) { (source: AnyObject) -> [PageCartoes] in
                return Decoders.decode(clazz: [PageCartoes].self, source: source)
            }
			// Decoder for PageCartoes
            Decoders.addDecoder(clazz: PageCartoes.self) { (source: AnyObject) -> PageCartoes in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageCartoes()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageCompras]
            Decoders.addDecoder(clazz: [PageCompras].self) { (source: AnyObject) -> [PageCompras] in
                return Decoders.decode(clazz: [PageCompras].self, source: source)
            }
			// Decoder for PageCompras
            Decoders.addDecoder(clazz: PageCompras.self) { (source: AnyObject) -> PageCompras in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageCompras()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageContas]
            Decoders.addDecoder(clazz: [PageContas].self) { (source: AnyObject) -> [PageContas] in
                return Decoders.decode(clazz: [PageContas].self, source: source)
            }
			// Decoder for PageContas
            Decoders.addDecoder(clazz: PageContas.self) { (source: AnyObject) -> PageContas in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageContas()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageContasDetalhe]
            Decoders.addDecoder(clazz: [PageContasDetalhe].self) { (source: AnyObject) -> [PageContasDetalhe] in
                return Decoders.decode(clazz: [PageContasDetalhe].self, source: source)
            }
			// Decoder for PageContasDetalhe
            Decoders.addDecoder(clazz: PageContasDetalhe.self) { (source: AnyObject) -> PageContasDetalhe in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageContasDetalhe()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageDispositivos]
            Decoders.addDecoder(clazz: [PageDispositivos].self) { (source: AnyObject) -> [PageDispositivos] in
                return Decoders.decode(clazz: [PageDispositivos].self, source: source)
            }
			// Decoder for PageDispositivos
            Decoders.addDecoder(clazz: PageDispositivos.self) { (source: AnyObject) -> PageDispositivos in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageDispositivos()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageEnderecos]
            Decoders.addDecoder(clazz: [PageEnderecos].self) { (source: AnyObject) -> [PageEnderecos] in
                return Decoders.decode(clazz: [PageEnderecos].self, source: source)
            }
			// Decoder for PageEnderecos
            Decoders.addDecoder(clazz: PageEnderecos.self) { (source: AnyObject) -> PageEnderecos in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageEnderecos()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageEstabelecimentos]
            Decoders.addDecoder(clazz: [PageEstabelecimentos].self) { (source: AnyObject) -> [PageEstabelecimentos] in
                return Decoders.decode(clazz: [PageEstabelecimentos].self, source: source)
            }
			// Decoder for PageEstabelecimentos
            Decoders.addDecoder(clazz: PageEstabelecimentos.self) { (source: AnyObject) -> PageEstabelecimentos in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageEstabelecimentos()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageEstagiosCartoes]
            Decoders.addDecoder(clazz: [PageEstagiosCartoes].self) { (source: AnyObject) -> [PageEstagiosCartoes] in
                return Decoders.decode(clazz: [PageEstagiosCartoes].self, source: source)
            }
			// Decoder for PageEstagiosCartoes
            Decoders.addDecoder(clazz: PageEstagiosCartoes.self) { (source: AnyObject) -> PageEstagiosCartoes in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageEstagiosCartoes()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageFaqs]
            Decoders.addDecoder(clazz: [PageFaqs].self) { (source: AnyObject) -> [PageFaqs] in
                return Decoders.decode(clazz: [PageFaqs].self, source: source)
            }
			// Decoder for PageFaqs
            Decoders.addDecoder(clazz: PageFaqs.self) { (source: AnyObject) -> PageFaqs in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageFaqs()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageFaturas]
            Decoders.addDecoder(clazz: [PageFaturas].self) { (source: AnyObject) -> [PageFaturas] in
                return Decoders.decode(clazz: [PageFaturas].self, source: source)
            }
			// Decoder for PageFaturas
            Decoders.addDecoder(clazz: PageFaturas.self) { (source: AnyObject) -> PageFaturas in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageFaturas()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageFaturasConsignadas]
            Decoders.addDecoder(clazz: [PageFaturasConsignadas].self) { (source: AnyObject) -> [PageFaturasConsignadas] in
                return Decoders.decode(clazz: [PageFaturasConsignadas].self, source: source)
            }
			// Decoder for PageFaturasConsignadas
            Decoders.addDecoder(clazz: PageFaturasConsignadas.self) { (source: AnyObject) -> PageFaturasConsignadas in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageFaturasConsignadas()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageHistoricoAtraso]
            Decoders.addDecoder(clazz: [PageHistoricoAtraso].self) { (source: AnyObject) -> [PageHistoricoAtraso] in
                return Decoders.decode(clazz: [PageHistoricoAtraso].self, source: source)
            }
			// Decoder for PageHistoricoAtraso
            Decoders.addDecoder(clazz: PageHistoricoAtraso.self) { (source: AnyObject) -> PageHistoricoAtraso in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageHistoricoAtraso()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageHistoricoEventos]
            Decoders.addDecoder(clazz: [PageHistoricoEventos].self) { (source: AnyObject) -> [PageHistoricoEventos] in
                return Decoders.decode(clazz: [PageHistoricoEventos].self, source: source)
            }
			// Decoder for PageHistoricoEventos
            Decoders.addDecoder(clazz: PageHistoricoEventos.self) { (source: AnyObject) -> PageHistoricoEventos in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageHistoricoEventos()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageJob]
            Decoders.addDecoder(clazz: [PageJob].self) { (source: AnyObject) -> [PageJob] in
                return Decoders.decode(clazz: [PageJob].self, source: source)
            }
			// Decoder for PageJob
            Decoders.addDecoder(clazz: PageJob.self) { (source: AnyObject) -> PageJob in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageJob()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageLoteCartoesPrePagosResponse]
            Decoders.addDecoder(clazz: [PageLoteCartoesPrePagosResponse].self) { (source: AnyObject) -> [PageLoteCartoesPrePagosResponse] in
                return Decoders.decode(clazz: [PageLoteCartoesPrePagosResponse].self, source: source)
            }
			// Decoder for PageLoteCartoesPrePagosResponse
            Decoders.addDecoder(clazz: PageLoteCartoesPrePagosResponse.self) { (source: AnyObject) -> PageLoteCartoesPrePagosResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageLoteCartoesPrePagosResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageOprtunidadeAUD]
            Decoders.addDecoder(clazz: [PageOprtunidadeAUD].self) { (source: AnyObject) -> [PageOprtunidadeAUD] in
                return Decoders.decode(clazz: [PageOprtunidadeAUD].self, source: source)
            }
			// Decoder for PageOprtunidadeAUD
            Decoders.addDecoder(clazz: PageOprtunidadeAUD.self) { (source: AnyObject) -> PageOprtunidadeAUD in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageOprtunidadeAUD()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageOprtunidadesResponse]
            Decoders.addDecoder(clazz: [PageOprtunidadesResponse].self) { (source: AnyObject) -> [PageOprtunidadesResponse] in
                return Decoders.decode(clazz: [PageOprtunidadesResponse].self, source: source)
            }
			// Decoder for PageOprtunidadesResponse
            Decoders.addDecoder(clazz: PageOprtunidadesResponse.self) { (source: AnyObject) -> PageOprtunidadesResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageOprtunidadesResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageOrigensComerciais]
            Decoders.addDecoder(clazz: [PageOrigensComerciais].self) { (source: AnyObject) -> [PageOrigensComerciais] in
                return Decoders.decode(clazz: [PageOrigensComerciais].self, source: source)
            }
			// Decoder for PageOrigensComerciais
            Decoders.addDecoder(clazz: PageOrigensComerciais.self) { (source: AnyObject) -> PageOrigensComerciais in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageOrigensComerciais()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePaisResponse]
            Decoders.addDecoder(clazz: [PagePaisResponse].self) { (source: AnyObject) -> [PagePaisResponse] in
                return Decoders.decode(clazz: [PagePaisResponse].self, source: source)
            }
			// Decoder for PagePaisResponse
            Decoders.addDecoder(clazz: PagePaisResponse.self) { (source: AnyObject) -> PagePaisResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePaisResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePessoas]
            Decoders.addDecoder(clazz: [PagePessoas].self) { (source: AnyObject) -> [PagePessoas] in
                return Decoders.decode(clazz: [PagePessoas].self, source: source)
            }
			// Decoder for PagePessoas
            Decoders.addDecoder(clazz: PagePessoas.self) { (source: AnyObject) -> PagePessoas in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePessoas()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePlataformasMobile]
            Decoders.addDecoder(clazz: [PagePlataformasMobile].self) { (source: AnyObject) -> [PagePlataformasMobile] in
                return Decoders.decode(clazz: [PagePlataformasMobile].self, source: source)
            }
			// Decoder for PagePlataformasMobile
            Decoders.addDecoder(clazz: PagePlataformasMobile.self) { (source: AnyObject) -> PagePlataformasMobile in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePlataformasMobile()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePortador]
            Decoders.addDecoder(clazz: [PagePortador].self) { (source: AnyObject) -> [PagePortador] in
                return Decoders.decode(clazz: [PagePortador].self, source: source)
            }
			// Decoder for PagePortador
            Decoders.addDecoder(clazz: PagePortador.self) { (source: AnyObject) -> PagePortador in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePortador()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePush]
            Decoders.addDecoder(clazz: [PagePush].self) { (source: AnyObject) -> [PagePush] in
                return Decoders.decode(clazz: [PagePush].self, source: source)
            }
			// Decoder for PagePush
            Decoders.addDecoder(clazz: PagePush.self) { (source: AnyObject) -> PagePush in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePush()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageSMS]
            Decoders.addDecoder(clazz: [PageSMS].self) { (source: AnyObject) -> [PageSMS] in
                return Decoders.decode(clazz: [PageSMS].self, source: source)
            }
			// Decoder for PageSMS
            Decoders.addDecoder(clazz: PageSMS.self) { (source: AnyObject) -> PageSMS in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageSMS()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageStatusCartoes]
            Decoders.addDecoder(clazz: [PageStatusCartoes].self) { (source: AnyObject) -> [PageStatusCartoes] in
                return Decoders.decode(clazz: [PageStatusCartoes].self, source: source)
            }
			// Decoder for PageStatusCartoes
            Decoders.addDecoder(clazz: PageStatusCartoes.self) { (source: AnyObject) -> PageStatusCartoes in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageStatusCartoes()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageStatusContas]
            Decoders.addDecoder(clazz: [PageStatusContas].self) { (source: AnyObject) -> [PageStatusContas] in
                return Decoders.decode(clazz: [PageStatusContas].self, source: source)
            }
			// Decoder for PageStatusContas
            Decoders.addDecoder(clazz: PageStatusContas.self) { (source: AnyObject) -> PageStatusContas in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageStatusContas()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageStatusImpressao]
            Decoders.addDecoder(clazz: [PageStatusImpressao].self) { (source: AnyObject) -> [PageStatusImpressao] in
                return Decoders.decode(clazz: [PageStatusImpressao].self, source: source)
            }
			// Decoder for PageStatusImpressao
            Decoders.addDecoder(clazz: PageStatusImpressao.self) { (source: AnyObject) -> PageStatusImpressao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageStatusImpressao()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageStatusOprtunidades]
            Decoders.addDecoder(clazz: [PageStatusOprtunidades].self) { (source: AnyObject) -> [PageStatusOprtunidades] in
                return Decoders.decode(clazz: [PageStatusOprtunidades].self, source: source)
            }
			// Decoder for PageStatusOprtunidades
            Decoders.addDecoder(clazz: PageStatusOprtunidades.self) { (source: AnyObject) -> PageStatusOprtunidades in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageStatusOprtunidades()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageStatusOprtunidadesAUD]
            Decoders.addDecoder(clazz: [PageStatusOprtunidadesAUD].self) { (source: AnyObject) -> [PageStatusOprtunidadesAUD] in
                return Decoders.decode(clazz: [PageStatusOprtunidadesAUD].self, source: source)
            }
			// Decoder for PageStatusOprtunidadesAUD
            Decoders.addDecoder(clazz: PageStatusOprtunidadesAUD.self) { (source: AnyObject) -> PageStatusOprtunidadesAUD in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageStatusOprtunidadesAUD()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTaxasRefinanciamento]
            Decoders.addDecoder(clazz: [PageTaxasRefinanciamento].self) { (source: AnyObject) -> [PageTaxasRefinanciamento] in
                return Decoders.decode(clazz: [PageTaxasRefinanciamento].self, source: source)
            }
			// Decoder for PageTaxasRefinanciamento
            Decoders.addDecoder(clazz: PageTaxasRefinanciamento.self) { (source: AnyObject) -> PageTaxasRefinanciamento in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTaxasRefinanciamento()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTelefones]
            Decoders.addDecoder(clazz: [PageTelefones].self) { (source: AnyObject) -> [PageTelefones] in
                return Decoders.decode(clazz: [PageTelefones].self, source: source)
            }
			// Decoder for PageTelefones
            Decoders.addDecoder(clazz: PageTelefones.self) { (source: AnyObject) -> PageTelefones in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTelefones()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTerminal]
            Decoders.addDecoder(clazz: [PageTerminal].self) { (source: AnyObject) -> [PageTerminal] in
                return Decoders.decode(clazz: [PageTerminal].self, source: source)
            }
			// Decoder for PageTerminal
            Decoders.addDecoder(clazz: PageTerminal.self) { (source: AnyObject) -> PageTerminal in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTerminal()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoAjuste]
            Decoders.addDecoder(clazz: [PageTipoAjuste].self) { (source: AnyObject) -> [PageTipoAjuste] in
                return Decoders.decode(clazz: [PageTipoAjuste].self, source: source)
            }
			// Decoder for PageTipoAjuste
            Decoders.addDecoder(clazz: PageTipoAjuste.self) { (source: AnyObject) -> PageTipoAjuste in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoAjuste()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoBoleto]
            Decoders.addDecoder(clazz: [PageTipoBoleto].self) { (source: AnyObject) -> [PageTipoBoleto] in
                return Decoders.decode(clazz: [PageTipoBoleto].self, source: source)
            }
			// Decoder for PageTipoBoleto
            Decoders.addDecoder(clazz: PageTipoBoleto.self) { (source: AnyObject) -> PageTipoBoleto in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoBoleto()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoOprtunidades]
            Decoders.addDecoder(clazz: [PageTipoOprtunidades].self) { (source: AnyObject) -> [PageTipoOprtunidades] in
                return Decoders.decode(clazz: [PageTipoOprtunidades].self, source: source)
            }
			// Decoder for PageTipoOprtunidades
            Decoders.addDecoder(clazz: PageTipoOprtunidades.self) { (source: AnyObject) -> PageTipoOprtunidades in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoOprtunidades()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoOprtunidadesAUD]
            Decoders.addDecoder(clazz: [PageTipoOprtunidadesAUD].self) { (source: AnyObject) -> [PageTipoOprtunidadesAUD] in
                return Decoders.decode(clazz: [PageTipoOprtunidadesAUD].self, source: source)
            }
			// Decoder for PageTipoOprtunidadesAUD
            Decoders.addDecoder(clazz: PageTipoOprtunidadesAUD.self) { (source: AnyObject) -> PageTipoOprtunidadesAUD in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoOprtunidadesAUD()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoTelefones]
            Decoders.addDecoder(clazz: [PageTipoTelefones].self) { (source: AnyObject) -> [PageTipoTelefones] in
                return Decoders.decode(clazz: [PageTipoTelefones].self, source: source)
            }
			// Decoder for PageTipoTelefones
            Decoders.addDecoder(clazz: PageTipoTelefones.self) { (source: AnyObject) -> PageTipoTelefones in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoTelefones()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTiposEndereco]
            Decoders.addDecoder(clazz: [PageTiposEndereco].self) { (source: AnyObject) -> [PageTiposEndereco] in
                return Decoders.decode(clazz: [PageTiposEndereco].self, source: source)
            }
			// Decoder for PageTiposEndereco
            Decoders.addDecoder(clazz: PageTiposEndereco.self) { (source: AnyObject) -> PageTiposEndereco in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTiposEndereco()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTransacaoResponse]
            Decoders.addDecoder(clazz: [PageTransacaoResponse].self) { (source: AnyObject) -> [PageTransacaoResponse] in
                return Decoders.decode(clazz: [PageTransacaoResponse].self, source: source)
            }
			// Decoder for PageTransacaoResponse
            Decoders.addDecoder(clazz: PageTransacaoResponse.self) { (source: AnyObject) -> PageTransacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTransacaoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTransacoesCorrentes]
            Decoders.addDecoder(clazz: [PageTransacoesCorrentes].self) { (source: AnyObject) -> [PageTransacoesCorrentes] in
                return Decoders.decode(clazz: [PageTransacoesCorrentes].self, source: source)
            }
			// Decoder for PageTransacoesCorrentes
            Decoders.addDecoder(clazz: PageTransacoesCorrentes.self) { (source: AnyObject) -> PageTransacoesCorrentes in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTransacoesCorrentes()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTransferencias]
            Decoders.addDecoder(clazz: [PageTransferencias].self) { (source: AnyObject) -> [PageTransferencias] in
                return Decoders.decode(clazz: [PageTransferencias].self, source: source)
            }
			// Decoder for PageTransferencias
            Decoders.addDecoder(clazz: PageTransferencias.self) { (source: AnyObject) -> PageTransferencias in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTransferencias()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageUsuarios]
            Decoders.addDecoder(clazz: [PageUsuarios].self) { (source: AnyObject) -> [PageUsuarios] in
                return Decoders.decode(clazz: [PageUsuarios].self, source: source)
            }
			// Decoder for PageUsuarios
            Decoders.addDecoder(clazz: PageUsuarios.self) { (source: AnyObject) -> PageUsuarios in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageUsuarios()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageWebHooks]
            Decoders.addDecoder(clazz: [PageWebHooks].self) { (source: AnyObject) -> [PageWebHooks] in
                return Decoders.decode(clazz: [PageWebHooks].self, source: source)
            }
			// Decoder for PageWebHooks
            Decoders.addDecoder(clazz: PageWebHooks.self) { (source: AnyObject) -> PageWebHooks in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageWebHooks()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PaisResponse]
            Decoders.addDecoder(clazz: [PaisResponse].self) { (source: AnyObject) -> [PaisResponse] in
                return Decoders.decode(clazz: [PaisResponse].self, source: source)
            }
			// Decoder for PaisResponse
            Decoders.addDecoder(clazz: PaisResponse.self) { (source: AnyObject) -> PaisResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PaisResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.codigo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigo"])
                instance.sigla = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sigla"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.continente = PaisResponse.Continente(rawValue: (sourceDictionary["continente"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [ParametroProdutoResponse]
            Decoders.addDecoder(clazz: [ParametroProdutoResponse].self) { (source: AnyObject) -> [ParametroProdutoResponse] in
                return Decoders.decode(clazz: [ParametroProdutoResponse].self, source: source)
            }
			// Decoder for ParametroProdutoResponse
            Decoders.addDecoder(clazz: ParametroProdutoResponse.self) { (source: AnyObject) -> ParametroProdutoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ParametroProdutoResponse()
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.tipoTransacao = ParametroProdutoResponse.TipoTransacao(rawValue: (sourceDictionary["tipoTransacao"] as? String) ?? "") 
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.valorParametro = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParametro"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                return instance
            }
			

			// Decoder for [Pessoa]
            Decoders.addDecoder(clazz: [Pessoa].self) { (source: AnyObject) -> [Pessoa] in
                return Decoders.decode(clazz: [Pessoa].self, source: source)
            }
			// Decoder for Pessoa
            Decoders.addDecoder(clazz: Pessoa.self) { (source: AnyObject) -> Pessoa in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Pessoa()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.tipo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipo"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.cnpj = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cnpj"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                return instance
            }
			

			// Decoder for [PessoaDetalheResponse]
            Decoders.addDecoder(clazz: [PessoaDetalheResponse].self) { (source: AnyObject) -> [PessoaDetalheResponse] in
                return Decoders.decode(clazz: [PessoaDetalheResponse].self, source: source)
            }
			// Decoder for PessoaDetalheResponse
            Decoders.addDecoder(clazz: PessoaDetalheResponse.self) { (source: AnyObject) -> PessoaDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaDetalheResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                instance.nomeMae = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeMae"])
                instance.idEstadoCivil = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstadoCivil"])
                instance.profissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["profissao"])
                instance.idNaturezaOcupacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNaturezaOcupacao"])
                instance.idNacionalidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNacionalidade"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.nomeEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpresa"])
                return instance
            }
			

			// Decoder for [PessoaFisicaAprovadaPersist]
            Decoders.addDecoder(clazz: [PessoaFisicaAprovadaPersist].self) { (source: AnyObject) -> [PessoaFisicaAprovadaPersist] in
                return Decoders.decode(clazz: [PessoaFisicaAprovadaPersist].self, source: source)
            }
			// Decoder for PessoaFisicaAprovadaPersist
            Decoders.addDecoder(clazz: PessoaFisicaAprovadaPersist.self) { (source: AnyObject) -> PessoaFisicaAprovadaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaFisicaAprovadaPersist()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.nomeMae = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeMae"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.idEstadoCivil = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstadoCivil"])
                instance.profissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["profissao"])
                instance.idNaturezaOcupacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNaturezaOcupacao"])
                instance.idNacionalidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNacionalidade"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.nomeEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpresa"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                instance.enderecos = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["enderecos"])
                return instance
            }
			

			// Decoder for [PessoaFisicaAprovadaResponse]
            Decoders.addDecoder(clazz: [PessoaFisicaAprovadaResponse].self) { (source: AnyObject) -> [PessoaFisicaAprovadaResponse] in
                return Decoders.decode(clazz: [PessoaFisicaAprovadaResponse].self, source: source)
            }
			// Decoder for PessoaFisicaAprovadaResponse
            Decoders.addDecoder(clazz: PessoaFisicaAprovadaResponse.self) { (source: AnyObject) -> PessoaFisicaAprovadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaFisicaAprovadaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.nomeMae = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeMae"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.idEstadoCivil = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstadoCivil"])
                instance.profissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["profissao"])
                instance.idNaturezaOcupacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNaturezaOcupacao"])
                instance.idNacionalidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNacionalidade"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.nomeEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpresa"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                instance.enderecos = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["enderecos"])
                return instance
            }
			

			// Decoder for [PessoaJuridicaAprovadaPersist]
            Decoders.addDecoder(clazz: [PessoaJuridicaAprovadaPersist].self) { (source: AnyObject) -> [PessoaJuridicaAprovadaPersist] in
                return Decoders.decode(clazz: [PessoaJuridicaAprovadaPersist].self, source: source)
            }
			// Decoder for PessoaJuridicaAprovadaPersist
            Decoders.addDecoder(clazz: PessoaJuridicaAprovadaPersist.self) { (source: AnyObject) -> PessoaJuridicaAprovadaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaJuridicaAprovadaPersist()
                instance.razaoSocial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["razaoSocial"])
                instance.nomeFantasia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasia"])
                instance.cnpj = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cnpj"])
                instance.inscricaoEstadual = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["inscricaoEstadual"])
                instance.dataAberturaEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAberturaEmpresa"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                instance.enderecos = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["enderecos"])
                instance.socios = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["socios"])
                return instance
            }
			

			// Decoder for [PessoaJuridicaAprovadaResponse]
            Decoders.addDecoder(clazz: [PessoaJuridicaAprovadaResponse].self) { (source: AnyObject) -> [PessoaJuridicaAprovadaResponse] in
                return Decoders.decode(clazz: [PessoaJuridicaAprovadaResponse].self, source: source)
            }
			// Decoder for PessoaJuridicaAprovadaResponse
            Decoders.addDecoder(clazz: PessoaJuridicaAprovadaResponse.self) { (source: AnyObject) -> PessoaJuridicaAprovadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaJuridicaAprovadaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.razaoSocial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["razaoSocial"])
                instance.nomeFantasia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasia"])
                instance.cnpj = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cnpj"])
                instance.inscricaoEstadual = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["inscricaoEstadual"])
                instance.dataAberturaEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAberturaEmpresa"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                instance.enderecos = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["enderecos"])
                instance.socios = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["socios"])
                return instance
            }
			

			// Decoder for [PessoaPersist]
            Decoders.addDecoder(clazz: [PessoaPersist].self) { (source: AnyObject) -> [PessoaPersist] in
                return Decoders.decode(clazz: [PessoaPersist].self, source: source)
            }
			// Decoder for PessoaPersist
            Decoders.addDecoder(clazz: PessoaPersist.self) { (source: AnyObject) -> PessoaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaPersist()
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.estadoCivil = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["estadoCivil"])
                instance.nacionalidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nacionalidade"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.profissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["profissao"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                return instance
            }
			

			// Decoder for [PlataformaMobile]
            Decoders.addDecoder(clazz: [PlataformaMobile].self) { (source: AnyObject) -> [PlataformaMobile] in
                return Decoders.decode(clazz: [PlataformaMobile].self, source: source)
            }
			// Decoder for PlataformaMobile
            Decoders.addDecoder(clazz: PlataformaMobile.self) { (source: AnyObject) -> PlataformaMobile in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlataformaMobile()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [PlataformaMobilePersist]
            Decoders.addDecoder(clazz: [PlataformaMobilePersist].self) { (source: AnyObject) -> [PlataformaMobilePersist] in
                return Decoders.decode(clazz: [PlataformaMobilePersist].self, source: source)
            }
			// Decoder for PlataformaMobilePersist
            Decoders.addDecoder(clazz: PlataformaMobilePersist.self) { (source: AnyObject) -> PlataformaMobilePersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlataformaMobilePersist()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [PlataformaMobileUpdate]
            Decoders.addDecoder(clazz: [PlataformaMobileUpdate].self) { (source: AnyObject) -> [PlataformaMobileUpdate] in
                return Decoders.decode(clazz: [PlataformaMobileUpdate].self, source: source)
            }
			// Decoder for PlataformaMobileUpdate
            Decoders.addDecoder(clazz: PlataformaMobileUpdate.self) { (source: AnyObject) -> PlataformaMobileUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlataformaMobileUpdate()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [Portador]
            Decoders.addDecoder(clazz: [Portador].self) { (source: AnyObject) -> [Portador] in
                return Decoders.decode(clazz: [Portador].self, source: source)
            }
			// Decoder for Portador
            Decoders.addDecoder(clazz: Portador.self) { (source: AnyObject) -> Portador in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Portador()
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idParentesco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idParentesco"])
                instance.tipoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoPortador"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.idTipoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoCartao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagAtivo"])
                instance.dataCadastroPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastroPortador"])
                instance.dataCancelamentoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCancelamentoPortador"])
                return instance
            }
			

			// Decoder for [ProdutoDetalhesResponse]
            Decoders.addDecoder(clazz: [ProdutoDetalhesResponse].self) { (source: AnyObject) -> [ProdutoDetalhesResponse] in
                return Decoders.decode(clazz: [ProdutoDetalhesResponse].self, source: source)
            }
			// Decoder for ProdutoDetalhesResponse
            Decoders.addDecoder(clazz: ProdutoDetalhesResponse.self) { (source: AnyObject) -> ProdutoDetalhesResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ProdutoDetalhesResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                instance.idFantasiaBasica = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idFantasiaBasica"])
                instance.fantasiaBasica = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fantasiaBasica"])
                instance.usoExterior = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["usoExterior"])
                return instance
            }
			

			// Decoder for [ProdutoResponse]
            Decoders.addDecoder(clazz: [ProdutoResponse].self) { (source: AnyObject) -> [ProdutoResponse] in
                return Decoders.decode(clazz: [ProdutoResponse].self, source: source)
            }
			// Decoder for ProdutoResponse
            Decoders.addDecoder(clazz: ProdutoResponse.self) { (source: AnyObject) -> ProdutoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ProdutoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                instance.idFantasiaBasica = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idFantasiaBasica"])
                return instance
            }
			

			// Decoder for [PushAPNS]
            Decoders.addDecoder(clazz: [PushAPNS].self) { (source: AnyObject) -> [PushAPNS] in
                return Decoders.decode(clazz: [PushAPNS].self, source: source)
            }
			// Decoder for PushAPNS
            Decoders.addDecoder(clazz: PushAPNS.self) { (source: AnyObject) -> PushAPNS in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PushAPNS()
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.tokenDispositivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tokenDispositivo"])
                instance.certificado = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["certificado"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                instance.titulo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["titulo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.tipoEvento = PushAPNS.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                instance.icone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["icone"])
                instance.som = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["som"])
                return instance
            }
			

			// Decoder for [PushFCMEGCM]
            Decoders.addDecoder(clazz: [PushFCMEGCM].self) { (source: AnyObject) -> [PushFCMEGCM] in
                return Decoders.decode(clazz: [PushFCMEGCM].self, source: source)
            }
			// Decoder for PushFCMEGCM
            Decoders.addDecoder(clazz: PushFCMEGCM.self) { (source: AnyObject) -> PushFCMEGCM in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PushFCMEGCM()
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.tokenDispositivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tokenDispositivo"])
                instance.tokenServidor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tokenServidor"])
                instance.titulo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["titulo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.tipoEvento = PushFCMEGCM.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                instance.icone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["icone"])
                instance.som = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["som"])
                instance.cor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cor"])
                return instance
            }
			

			// Decoder for [RiscoFraudeDetalhadoResponse]
            Decoders.addDecoder(clazz: [RiscoFraudeDetalhadoResponse].self) { (source: AnyObject) -> [RiscoFraudeDetalhadoResponse] in
                return Decoders.decode(clazz: [RiscoFraudeDetalhadoResponse].self, source: source)
            }
			// Decoder for RiscoFraudeDetalhadoResponse
            Decoders.addDecoder(clazz: RiscoFraudeDetalhadoResponse.self) { (source: AnyObject) -> RiscoFraudeDetalhadoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = RiscoFraudeDetalhadoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoResolucao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoResolucao"])
                instance.descricaoTipoResolucao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoResolucao"])
                instance.flagAltoRisco = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAltoRisco"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idTransacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransacao"])
                instance.dataTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataTransacao"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.codigoMoedaOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoedaOrigem"])
                instance.valorOrigem = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorOrigem"])
                instance.codigoMoedaDestino = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoedaDestino"])
                instance.valorDestino = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorDestino"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                instance.idPais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["idPais"])
                instance.codigoRespostaAutorizador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoRespostaAutorizador"])
                instance.descricaoRespostaAutorizador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRespostaAutorizador"])
                instance.codigoRespostaFraude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoRespostaFraude"])
                instance.descricaoRespostaFraude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRespostaFraude"])
                instance.origemTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["origemTransacao"])
                instance.codigoModoEntradaTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoModoEntradaTerminal"])
                instance.descricaoModoEntradaTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoModoEntradaTerminal"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.cnpj = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cnpj"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.tefefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["tefefones"])
                return instance
            }
			

			// Decoder for [RiscoFraudeResponse]
            Decoders.addDecoder(clazz: [RiscoFraudeResponse].self) { (source: AnyObject) -> [RiscoFraudeResponse] in
                return Decoders.decode(clazz: [RiscoFraudeResponse].self, source: source)
            }
			// Decoder for RiscoFraudeResponse
            Decoders.addDecoder(clazz: RiscoFraudeResponse.self) { (source: AnyObject) -> RiscoFraudeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = RiscoFraudeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoResolucao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoResolucao"])
                instance.descricaoTipoResolucao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoResolucao"])
                instance.flagAltoRisco = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAltoRisco"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idTransacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransacao"])
                instance.dataTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataTransacao"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                return instance
            }
			

			// Decoder for [RiscoFraudeResponsePage]
            Decoders.addDecoder(clazz: [RiscoFraudeResponsePage].self) { (source: AnyObject) -> [RiscoFraudeResponsePage] in
                return Decoders.decode(clazz: [RiscoFraudeResponsePage].self, source: source)
            }
			// Decoder for RiscoFraudeResponsePage
            Decoders.addDecoder(clazz: RiscoFraudeResponsePage.self) { (source: AnyObject) -> RiscoFraudeResponsePage in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = RiscoFraudeResponsePage()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [SMS]
            Decoders.addDecoder(clazz: [SMS].self) { (source: AnyObject) -> [SMS] in
                return Decoders.decode(clazz: [SMS].self, source: source)
            }
			// Decoder for SMS
            Decoders.addDecoder(clazz: SMS.self) { (source: AnyObject) -> SMS in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = SMS()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nsu = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nsu"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.tipoEvento = SMS.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                instance.status = SMS.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.descricaoStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoStatus"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.celular = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["celular"])
                instance.operadora = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["operadora"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.resposta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["resposta"])
                instance.dataAgendamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAgendamento"])
                instance.quantidadeTentativasEnvio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeTentativasEnvio"])
                instance.dataInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInclusao"])
                instance.dataAlteracaoStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAlteracaoStatus"])
                instance.protocolo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["protocolo"])
                return instance
            }
			

			// Decoder for [SocioAprovadoResponse]
            Decoders.addDecoder(clazz: [SocioAprovadoResponse].self) { (source: AnyObject) -> [SocioAprovadoResponse] in
                return Decoders.decode(clazz: [SocioAprovadoResponse].self, source: source)
            }
			// Decoder for SocioAprovadoResponse
            Decoders.addDecoder(clazz: SocioAprovadoResponse.self) { (source: AnyObject) -> SocioAprovadoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = SocioAprovadoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.estadoCivil = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["estadoCivil"])
                instance.profissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["profissao"])
                instance.nacionalidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nacionalidade"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                return instance
            }
			

			// Decoder for [StatusCartao]
            Decoders.addDecoder(clazz: [StatusCartao].self) { (source: AnyObject) -> [StatusCartao] in
                return Decoders.decode(clazz: [StatusCartao].self, source: source)
            }
			// Decoder for StatusCartao
            Decoders.addDecoder(clazz: StatusCartao.self) { (source: AnyObject) -> StatusCartao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusCartao()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.flagCancelaCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCancelaCartao"])
                instance.flagCancelaNoDesbloqueio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCancelaNoDesbloqueio"])
                instance.idStatusDestinoDesbloqueio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusDestinoDesbloqueio"])
                instance.idStatusDestinoConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusDestinoConta"])
                instance.flagCobraTarifa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCobraTarifa"])
                instance.flagPermiteNovaViaCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagPermiteNovaViaCartao"])
                return instance
            }
			

			// Decoder for [StatusConta]
            Decoders.addDecoder(clazz: [StatusConta].self) { (source: AnyObject) -> [StatusConta] in
                return Decoders.decode(clazz: [StatusConta].self, source: source)
            }
			// Decoder for StatusConta
            Decoders.addDecoder(clazz: StatusConta.self) { (source: AnyObject) -> StatusConta in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusConta()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.flagAlteraLimite = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagAlteraLimite"])
                instance.mensagemConsultaNegada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mensagemConsultaNegada"])
                instance.flagPermiteNovaViaCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagPermiteNovaViaCartao"])
                return instance
            }
			

			// Decoder for [StatusImpressao]
            Decoders.addDecoder(clazz: [StatusImpressao].self) { (source: AnyObject) -> [StatusImpressao] in
                return Decoders.decode(clazz: [StatusImpressao].self, source: source)
            }
			// Decoder for StatusImpressao
            Decoders.addDecoder(clazz: StatusImpressao.self) { (source: AnyObject) -> StatusImpressao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusImpressao()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [StatusOportunidade]
            Decoders.addDecoder(clazz: [StatusOportunidade].self) { (source: AnyObject) -> [StatusOportunidade] in
                return Decoders.decode(clazz: [StatusOportunidade].self, source: source)
            }
			// Decoder for StatusOportunidade
            Decoders.addDecoder(clazz: StatusOportunidade.self) { (source: AnyObject) -> StatusOportunidade in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusOportunidade()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [StatusOportunidadeAUDResponse]
            Decoders.addDecoder(clazz: [StatusOportunidadeAUDResponse].self) { (source: AnyObject) -> [StatusOportunidadeAUDResponse] in
                return Decoders.decode(clazz: [StatusOportunidadeAUDResponse].self, source: source)
            }
			// Decoder for StatusOportunidadeAUDResponse
            Decoders.addDecoder(clazz: StatusOportunidadeAUDResponse.self) { (source: AnyObject) -> StatusOportunidadeAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusOportunidadeAUDResponse()
                instance.rev = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["rev"])
                instance.revType = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revType"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [StatusOportunidadeResponse]
            Decoders.addDecoder(clazz: [StatusOportunidadeResponse].self) { (source: AnyObject) -> [StatusOportunidadeResponse] in
                return Decoders.decode(clazz: [StatusOportunidadeResponse].self, source: source)
            }
			// Decoder for StatusOportunidadeResponse
            Decoders.addDecoder(clazz: StatusOportunidadeResponse.self) { (source: AnyObject) -> StatusOportunidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusOportunidadeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [TaxaAntecipacaoRequest]
            Decoders.addDecoder(clazz: [TaxaAntecipacaoRequest].self) { (source: AnyObject) -> [TaxaAntecipacaoRequest] in
                return Decoders.decode(clazz: [TaxaAntecipacaoRequest].self, source: source)
            }
			// Decoder for TaxaAntecipacaoRequest
            Decoders.addDecoder(clazz: TaxaAntecipacaoRequest.self) { (source: AnyObject) -> TaxaAntecipacaoRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TaxaAntecipacaoRequest()
                instance.tipoTransacao = TaxaAntecipacaoRequest.TipoTransacao(rawValue: (sourceDictionary["tipoTransacao"] as? String) ?? "") 
                instance.valorTaxa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTaxa"])
                return instance
            }
			

			// Decoder for [TaxasRefinanciamento]
            Decoders.addDecoder(clazz: [TaxasRefinanciamento].self) { (source: AnyObject) -> [TaxasRefinanciamento] in
                return Decoders.decode(clazz: [TaxasRefinanciamento].self, source: source)
            }
			// Decoder for TaxasRefinanciamento
            Decoders.addDecoder(clazz: TaxasRefinanciamento.self) { (source: AnyObject) -> TaxasRefinanciamento in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TaxasRefinanciamento()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idPlanoConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPlanoConta"])
                instance.idPlanoPct = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPlanoPct"])
                instance.idPlanoCreditoTaxa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPlanoCreditoTaxa"])
                instance.dataEntrada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEntrada"])
                instance.vencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vencimento"])
                instance.recuperacaoEncargosFinanceiros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["recuperacaoEncargosFinanceiros"])
                instance.comissaoGarantia = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["comissaoGarantia"])
                instance.agenciamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["agenciamento"])
                instance.taxaMaximaProximoPeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaMaximaProximoPeriodo"])
                instance.taxaEncargosFinanciamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaEncargosFinanciamento"])
                instance.taxaMaximaSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaMaximaSaque"])
                instance.taxaSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaSaque"])
                instance.taxaMaximaCompraJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaMaximaCompraJuros"])
                instance.taxaCompraJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaCompraJuros"])
                instance.taxaPermanencia = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaPermanencia"])
                instance.taxaRefinanciamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaRefinanciamento"])
                instance.taxaRecuperacaoRefinanciamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaRecuperacaoRefinanciamento"])
                instance.taxaPercCalcPagamentoMinimo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaPercCalcPagamentoMinimo"])
                instance.planoTaxaDefault = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoTaxaDefault"])
                return instance
            }
			

			// Decoder for [Telefone]
            Decoders.addDecoder(clazz: [Telefone].self) { (source: AnyObject) -> [Telefone] in
                return Decoders.decode(clazz: [Telefone].self, source: source)
            }
			// Decoder for Telefone
            Decoders.addDecoder(clazz: Telefone.self) { (source: AnyObject) -> Telefone in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Telefone()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoTelefone = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTelefone"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.ramal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ramal"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [TelefonePessoaAprovadaPersist]
            Decoders.addDecoder(clazz: [TelefonePessoaAprovadaPersist].self) { (source: AnyObject) -> [TelefonePessoaAprovadaPersist] in
                return Decoders.decode(clazz: [TelefonePessoaAprovadaPersist].self, source: source)
            }
			// Decoder for TelefonePessoaAprovadaPersist
            Decoders.addDecoder(clazz: TelefonePessoaAprovadaPersist.self) { (source: AnyObject) -> TelefonePessoaAprovadaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TelefonePessoaAprovadaPersist()
                instance.idTipoTelefone = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTelefone"])
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.ramal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ramal"])
                return instance
            }
			

			// Decoder for [TelefonePessoaAprovadaResponse]
            Decoders.addDecoder(clazz: [TelefonePessoaAprovadaResponse].self) { (source: AnyObject) -> [TelefonePessoaAprovadaResponse] in
                return Decoders.decode(clazz: [TelefonePessoaAprovadaResponse].self, source: source)
            }
			// Decoder for TelefonePessoaAprovadaResponse
            Decoders.addDecoder(clazz: TelefonePessoaAprovadaResponse.self) { (source: AnyObject) -> TelefonePessoaAprovadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TelefonePessoaAprovadaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoTelefone = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTelefone"])
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.ramal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ramal"])
                return instance
            }
			

			// Decoder for [Terminal]
            Decoders.addDecoder(clazz: [Terminal].self) { (source: AnyObject) -> [Terminal] in
                return Decoders.decode(clazz: [Terminal].self, source: source)
            }
			// Decoder for Terminal
            Decoders.addDecoder(clazz: Terminal.self) { (source: AnyObject) -> Terminal in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Terminal()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.terminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminal"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                return instance
            }
			

			// Decoder for [TipoAjusteResponse]
            Decoders.addDecoder(clazz: [TipoAjusteResponse].self) { (source: AnyObject) -> [TipoAjusteResponse] in
                return Decoders.decode(clazz: [TipoAjusteResponse].self, source: source)
            }
			// Decoder for TipoAjusteResponse
            Decoders.addDecoder(clazz: TipoAjusteResponse.self) { (source: AnyObject) -> TipoAjusteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoAjusteResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                return instance
            }
			

			// Decoder for [TipoEndereco]
            Decoders.addDecoder(clazz: [TipoEndereco].self) { (source: AnyObject) -> [TipoEndereco] in
                return Decoders.decode(clazz: [TipoEndereco].self, source: source)
            }
			// Decoder for TipoEndereco
            Decoders.addDecoder(clazz: TipoEndereco.self) { (source: AnyObject) -> TipoEndereco in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoEndereco()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [TipoOportunidade]
            Decoders.addDecoder(clazz: [TipoOportunidade].self) { (source: AnyObject) -> [TipoOportunidade] in
                return Decoders.decode(clazz: [TipoOportunidade].self, source: source)
            }
			// Decoder for TipoOportunidade
            Decoders.addDecoder(clazz: TipoOportunidade.self) { (source: AnyObject) -> TipoOportunidade in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoOportunidade()
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [TipoOportunidadeAUDResponse]
            Decoders.addDecoder(clazz: [TipoOportunidadeAUDResponse].self) { (source: AnyObject) -> [TipoOportunidadeAUDResponse] in
                return Decoders.decode(clazz: [TipoOportunidadeAUDResponse].self, source: source)
            }
			// Decoder for TipoOportunidadeAUDResponse
            Decoders.addDecoder(clazz: TipoOportunidadeAUDResponse.self) { (source: AnyObject) -> TipoOportunidadeAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoOportunidadeAUDResponse()
                instance.rev = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["rev"])
                instance.revType = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revType"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [TipoOportunidadeResponse]
            Decoders.addDecoder(clazz: [TipoOportunidadeResponse].self) { (source: AnyObject) -> [TipoOportunidadeResponse] in
                return Decoders.decode(clazz: [TipoOportunidadeResponse].self, source: source)
            }
			// Decoder for TipoOportunidadeResponse
            Decoders.addDecoder(clazz: TipoOportunidadeResponse.self) { (source: AnyObject) -> TipoOportunidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoOportunidadeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [TipoTelefone]
            Decoders.addDecoder(clazz: [TipoTelefone].self) { (source: AnyObject) -> [TipoTelefone] in
                return Decoders.decode(clazz: [TipoTelefone].self, source: source)
            }
			// Decoder for TipoTelefone
            Decoders.addDecoder(clazz: TipoTelefone.self) { (source: AnyObject) -> TipoTelefone in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoTelefone()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [Token]
            Decoders.addDecoder(clazz: [Token].self) { (source: AnyObject) -> [Token] in
                return Decoders.decode(clazz: [Token].self, source: source)
            }
			// Decoder for Token
            Decoders.addDecoder(clazz: Token.self) { (source: AnyObject) -> Token in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Token()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.base = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["base"])
                instance.owner = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["owner"])
                instance.status = Token.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.criadoPor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["criadoPor"])
                instance.dataCriacao = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataCriacao"])
                instance.alteradoPor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alteradoPor"])
                instance.dataModificacao = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataModificacao"])
                return instance
            }
			

			// Decoder for [TransacaoCorrenteResponse]
            Decoders.addDecoder(clazz: [TransacaoCorrenteResponse].self) { (source: AnyObject) -> [TransacaoCorrenteResponse] in
                return Decoders.decode(clazz: [TransacaoCorrenteResponse].self, source: source)
            }
			// Decoder for TransacaoCorrenteResponse
            Decoders.addDecoder(clazz: TransacaoCorrenteResponse.self) { (source: AnyObject) -> TransacaoCorrenteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacaoCorrenteResponse()
                instance.ultimaParcelaLancada = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["ultimaParcelaLancada"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idTipoRegistro = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoRegistro"])
                instance.ordem = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["ordem"])
                instance.idTransacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransacao"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                instance.descricaoStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoStatus"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.valorDolar = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorDolar"])
                instance.quantidadeParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeParcelas"])
                instance.valorParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcela"])
                instance.dataEvento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEvento"])
                instance.estabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["estabelecimento"])
                instance.flagCredito = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCredito"])
                instance.tipoEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoEstabelecimento"])
                instance.idGrupoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idGrupoMCC"])
                instance.flagSolicitouContestacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagSolicitouContestacao"])
                return instance
            }
			

			// Decoder for [TransacaoOnUsRequest]
            Decoders.addDecoder(clazz: [TransacaoOnUsRequest].self) { (source: AnyObject) -> [TransacaoOnUsRequest] in
                return Decoders.decode(clazz: [TransacaoOnUsRequest].self, source: source)
            }
			// Decoder for TransacaoOnUsRequest
            Decoders.addDecoder(clazz: TransacaoOnUsRequest.self) { (source: AnyObject) -> TransacaoOnUsRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacaoOnUsRequest()
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroRealCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroRealCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.dataHoraTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTerminal"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                return instance
            }
			

			// Decoder for [TransacaoOnUsResponse]
            Decoders.addDecoder(clazz: [TransacaoOnUsResponse].self) { (source: AnyObject) -> [TransacaoOnUsResponse] in
                return Decoders.decode(clazz: [TransacaoOnUsResponse].self, source: source)
            }
			// Decoder for TransacaoOnUsResponse
            Decoders.addDecoder(clazz: TransacaoOnUsResponse.self) { (source: AnyObject) -> TransacaoOnUsResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacaoOnUsResponse()
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.nsuAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuAutorizacao"])
                instance.planoDeParcelamento = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["planoDeParcelamento"])
                instance.codigoAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoAutorizacao"])
                instance.numeroMascaradoCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroMascaradoCartao"])
                instance.nomePortadorCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePortadorCartao"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                return instance
            }
			

			// Decoder for [TransacoesCorrentes]
            Decoders.addDecoder(clazz: [TransacoesCorrentes].self) { (source: AnyObject) -> [TransacoesCorrentes] in
                return Decoders.decode(clazz: [TransacoesCorrentes].self, source: source)
            }
			// Decoder for TransacoesCorrentes
            Decoders.addDecoder(clazz: TransacoesCorrentes.self) { (source: AnyObject) -> TransacoesCorrentes in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacoesCorrentes()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.tipoTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoTransacao"])
                instance.statusTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusTransacao"])
                instance.idEvento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEvento"])
                instance.tipoEvento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoEvento"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.cartaoMascarado = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cartaoMascarado"])
                instance.nomePortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePortador"])
                instance.dataTransacaoUTC = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataTransacaoUTC"])
                instance.dataFaturamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFaturamento"])
                instance.dataVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimento"])
                instance.modoEntradaTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["modoEntradaTransacao"])
                instance.valorTaxaEmbarque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTaxaEmbarque"])
                instance.valorEntrada = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorEntrada"])
                instance.valorBRL = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorBRL"])
                instance.valorUSD = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorUSD"])
                instance.cotacaoUSD = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cotacaoUSD"])
                instance.dataCotacaoUSD = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCotacaoUSD"])
                instance.codigoMoedaOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoedaOrigem"])
                instance.codigoMoedaDestino = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoedaDestino"])
                instance.codigoAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoAutorizacao"])
                instance.codigoReferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoReferencia"])
                instance.codigoTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoTerminal"])
                instance.codigoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoMCC"])
                instance.grupoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["grupoMCC"])
                instance.grupoDescricaoMCC = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["grupoDescricaoMCC"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                instance.localidadeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["localidadeEstabelecimento"])
                instance.planoParcelamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoParcelamento"])
                instance.numeroParcela = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcela"])
                instance.detalhesTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["detalhesTransacao"])
                instance.flagCredito = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCredito"])
                instance.flagFaturado = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagFaturado"])
                instance.flagEstorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagEstorno"])
                instance.idTransacaoEstorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransacaoEstorno"])
                return instance
            }
			

			// Decoder for [Transferencia]
            Decoders.addDecoder(clazz: [Transferencia].self) { (source: AnyObject) -> [Transferencia] in
                return Decoders.decode(clazz: [Transferencia].self, source: source)
            }
			// Decoder for Transferencia
            Decoders.addDecoder(clazz: Transferencia.self) { (source: AnyObject) -> Transferencia in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Transferencia()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.dataTransferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataTransferencia"])
                instance.idContaOrigem = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idContaOrigem"])
                instance.nomePessoaOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePessoaOrigem"])
                instance.idContaDestino = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idContaDestino"])
                instance.nomePessoaDestino = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePessoaDestino"])
                instance.valorTransferencia = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransferencia"])
                instance.valorTarifa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTarifa"])
                return instance
            }
			

			// Decoder for [TransferenciaBancariaPersist]
            Decoders.addDecoder(clazz: [TransferenciaBancariaPersist].self) { (source: AnyObject) -> [TransferenciaBancariaPersist] in
                return Decoders.decode(clazz: [TransferenciaBancariaPersist].self, source: source)
            }
			// Decoder for TransferenciaBancariaPersist
            Decoders.addDecoder(clazz: TransferenciaBancariaPersist.self) { (source: AnyObject) -> TransferenciaBancariaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransferenciaBancariaPersist()
                instance.dataCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCompra"])
                instance.proximoVencimentoPadrao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["proximoVencimentoPadrao"])
                instance.proximoVencimentoReal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["proximoVencimentoReal"])
                instance.valorCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorCompra"])
                instance.nomeFavorecido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFavorecido"])
                instance.documentoFavorecido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["documentoFavorecido"])
                instance.banco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["banco"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroAgencia"])
                instance.digitoAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoAgencia"])
                instance.numeroConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroConta"])
                instance.digitoConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoConta"])
                instance.flagContaPoupanca = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagContaPoupanca"])
                return instance
            }
			

			// Decoder for [UsuarioPersist]
            Decoders.addDecoder(clazz: [UsuarioPersist].self) { (source: AnyObject) -> [UsuarioPersist] in
                return Decoders.decode(clazz: [UsuarioPersist].self, source: source)
            }
			// Decoder for UsuarioPersist
            Decoders.addDecoder(clazz: UsuarioPersist.self) { (source: AnyObject) -> UsuarioPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = UsuarioPersist()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.login = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["login"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                return instance
            }
			

			// Decoder for [UsuarioResponse]
            Decoders.addDecoder(clazz: [UsuarioResponse].self) { (source: AnyObject) -> [UsuarioResponse] in
                return Decoders.decode(clazz: [UsuarioResponse].self, source: source)
            }
			// Decoder for UsuarioResponse
            Decoders.addDecoder(clazz: UsuarioResponse.self) { (source: AnyObject) -> UsuarioResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = UsuarioResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.login = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["login"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.status = UsuarioResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.dataCriacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCriacao"])
                instance.dataModificacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataModificacao"])
                instance.tentativasIncorretas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["tentativasIncorretas"])
                return instance
            }
			

			// Decoder for [UsuarioUpdate]
            Decoders.addDecoder(clazz: [UsuarioUpdate].self) { (source: AnyObject) -> [UsuarioUpdate] in
                return Decoders.decode(clazz: [UsuarioUpdate].self, source: source)
            }
			// Decoder for UsuarioUpdate
            Decoders.addDecoder(clazz: UsuarioUpdate.self) { (source: AnyObject) -> UsuarioUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = UsuarioUpdate()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.login = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["login"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [ValidaCartao]
            Decoders.addDecoder(clazz: [ValidaCartao].self) { (source: AnyObject) -> [ValidaCartao] in
                return Decoders.decode(clazz: [ValidaCartao].self, source: source)
            }
			// Decoder for ValidaCartao
            Decoders.addDecoder(clazz: ValidaCartao.self) { (source: AnyObject) -> ValidaCartao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ValidaCartao()
                instance.idStatusCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusCartao"])
                instance.statusCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusCartao"])
                instance.idStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusConta"])
                instance.statusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusConta"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.criptogramaResposta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["criptogramaResposta"])
                return instance
            }
			

			// Decoder for [ValidaSenhaCartao]
            Decoders.addDecoder(clazz: [ValidaSenhaCartao].self) { (source: AnyObject) -> [ValidaSenhaCartao] in
                return Decoders.decode(clazz: [ValidaSenhaCartao].self, source: source)
            }
			// Decoder for ValidaSenhaCartao
            Decoders.addDecoder(clazz: ValidaSenhaCartao.self) { (source: AnyObject) -> ValidaSenhaCartao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ValidaSenhaCartao()
                instance.mensagem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mensagem"])
                instance.idStatusCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusCartao"])
                instance.statusCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusCartao"])
                instance.quantidadeTentativas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeTentativas"])
                instance.quantidadeMaximaTentativas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeMaximaTentativas"])
                return instance
            }
			

			// Decoder for [WebHook]
            Decoders.addDecoder(clazz: [WebHook].self) { (source: AnyObject) -> [WebHook] in
                return Decoders.decode(clazz: [WebHook].self, source: source)
            }
			// Decoder for WebHook
            Decoders.addDecoder(clazz: WebHook.self) { (source: AnyObject) -> WebHook in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = WebHook()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.tipoEvento = WebHook.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                instance.metodo = WebHook.Metodo(rawValue: (sourceDictionary["metodo"] as? String) ?? "") 
                instance.url = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["url"])
                return instance
            }
			
        }
    }
}
