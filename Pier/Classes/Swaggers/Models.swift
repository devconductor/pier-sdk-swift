// Models.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

protocol JSONEncodable {
    func encodeToJSON() -> AnyObject
}

public class Response<T> {
    public let statusCode: Int
    public let header: [String: String]
    public let body: T

    public init(statusCode: Int, header: [String: String], body: T) {
        self.statusCode = statusCode
        self.header = header
        self.body = body
    }

    public convenience init(response: NSHTTPURLResponse, body: T) {
        let rawHeader = response.allHeaderFields
        var header = [String:String]()
        for (key, value) in rawHeader {
            header[key as! String] = value as? String
        }
        self.init(statusCode: response.statusCode, header: header, body: body)
    }
}

private var once = dispatch_once_t()
class Decoders {
    static private var decoders = Dictionary<String, ((AnyObject) -> AnyObject)>()
    
    static func addDecoder<T>(clazz clazz: T.Type, decoder: ((AnyObject) -> T)) {
        let key = "\(T.self)"
        decoders[key] = { decoder($0) as! AnyObject }
    }
    
    static func decode<T>(clazz clazz: [T].Type, source: AnyObject) -> [T] {
        let array = source as! [AnyObject]
        return array.map { Decoders.decode(clazz: T.self, source: $0) }
    }
    
    static func decode<T, Key: Hashable>(clazz clazz: [Key:T].Type, source: AnyObject) -> [Key:T] {
        let sourceDictinoary = source as! [Key: AnyObject]
        var dictionary = [Key:T]()
        for (key, value) in sourceDictinoary {
            dictionary[key] = Decoders.decode(clazz: T.self, source: value)
        }
        return dictionary
    }
    
    static func decode<T>(clazz clazz: T.Type, source: AnyObject) -> T {
        initialize()
        if source is T {
            return source as! T
        }
        
        let key = "\(T.self)"
        if let decoder = decoders[key] {
           return decoder(source) as! T
        } else {
            fatalError("Source \(source) is not convertible to type \(clazz): Maybe swagger file is insufficient")
        }
    }

    static func decodeOptional<T>(clazz clazz: T.Type, source: AnyObject?) -> T? {
        if source is NSNull {
            return nil
        }
        return source.map { (source: AnyObject) -> T in
            Decoders.decode(clazz: clazz, source: source)
        }
    }

    static func decodeOptional<T>(clazz clazz: [T].Type, source: AnyObject?) -> [T]? {
        if source is NSNull {
            return nil
        }
        return source.map { (someSource: AnyObject) -> [T] in
            Decoders.decode(clazz: clazz, source: someSource)
        }
    }

    static func decodeOptional<T, Key: Hashable>(clazz clazz: [Key:T].Type, source: AnyObject?) -> [Key:T]? {
        if source is NSNull {
            return nil
        }
        return source.map { (someSource: AnyObject) -> [Key:T] in
            Decoders.decode(clazz: clazz, source: someSource)
        }
    }
	
    static private func initialize() {
        dispatch_once(&once) {
            let formatters = [
                "yyyy-MM-dd",
                "yyyy-MM-dd'T'HH:mm:ssZZZZZ",
                "yyyy-MM-dd'T'HH:mm:ss.SSSZZZZZ",
                "yyyy-MM-dd'T'HH:mm:ss'Z'"
            ].map { (format: String) -> NSDateFormatter in
                let formatter = NSDateFormatter()
                formatter.dateFormat = format
                return formatter
            }
            // Decoder for NSDate
            Decoders.addDecoder(clazz: NSDate.self) { (source: AnyObject) -> NSDate in
               if let sourceString = source as? String {
                    for formatter in formatters {
                        if let date = formatter.dateFromString(sourceString) {
                            return date
                        }
                    }
                
                }
                if let sourceInt = source as? Int {
                    // treat as a java date
                    return NSDate(timeIntervalSince1970: Double(sourceInt / 1000) )
                }
                fatalError("formatter failed to parse \(source)")
            } 

			// Decoder for [AuthToken]
            Decoders.addDecoder(clazz: [AuthToken].self) { (source: AnyObject) -> [AuthToken] in
                return Decoders.decode(clazz: [AuthToken].self, source: source)
            }
			// Decoder for AuthToken
            Decoders.addDecoder(clazz: AuthToken.self) { (source: AnyObject) -> AuthToken in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AuthToken()
                instance.code = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["code"])
                instance.extraInfo = Decoders.decodeOptional(clazz: ExtraInfo.self, source: sourceDictionary["extraInfo"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.owner = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["owner"])
                instance.status = AuthToken.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [BodyAccessToken]
            Decoders.addDecoder(clazz: [BodyAccessToken].self) { (source: AnyObject) -> [BodyAccessToken] in
                return Decoders.decode(clazz: [BodyAccessToken].self, source: source)
            }
			// Decoder for BodyAccessToken
            Decoders.addDecoder(clazz: BodyAccessToken.self) { (source: AnyObject) -> BodyAccessToken in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BodyAccessToken()
                instance.authToken = Decoders.decodeOptional(clazz: AuthToken.self, source: sourceDictionary["AuthToken"])
                instance.action = BodyAccessToken.Action(rawValue: (sourceDictionary["action"] as? String) ?? "") 
                instance.user = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["user"])
                return instance
            }
			

			// Decoder for [CancelarCartaoResponse]
            Decoders.addDecoder(clazz: [CancelarCartaoResponse].self) { (source: AnyObject) -> [CancelarCartaoResponse] in
                return Decoders.decode(clazz: [CancelarCartaoResponse].self, source: source)
            }
			// Decoder for CancelarCartaoResponse
            Decoders.addDecoder(clazz: CancelarCartaoResponse.self) { (source: AnyObject) -> CancelarCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CancelarCartaoResponse()
                instance.codigoRetorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoRetorno"])
                instance.descricaoRetorno = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRetorno"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                return instance
            }
			

			// Decoder for [Cartao]
            Decoders.addDecoder(clazz: [Cartao].self) { (source: AnyObject) -> [Cartao] in
                return Decoders.decode(clazz: [Cartao].self, source: source)
            }
			// Decoder for Cartao
            Decoders.addDecoder(clazz: Cartao.self) { (source: AnyObject) -> Cartao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Cartao()
                instance.arquivoImpressao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["arquivoImpressao"])
                instance.codigoDesbloqueio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoDesbloqueio"])
                instance.dataEstagioCartao = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataEstagioCartao"])
                instance.dataGeracao = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataGeracao"])
                instance.dataImpressao = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataImpressao"])
                instance.dataStatusCartao = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataStatusCartao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataValidade"])
                instance.flagImpressaoOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagImpressaoOrigemComercial"])
                instance.flagProvisorio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagProvisorio"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idEstagioCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstagioCartao"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idStatusCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusCartao"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.tipoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoPortador"])
                return instance
            }
			

			// Decoder for [CartaoResponseOld]
            Decoders.addDecoder(clazz: [CartaoResponseOld].self) { (source: AnyObject) -> [CartaoResponseOld] in
                return Decoders.decode(clazz: [CartaoResponseOld].self, source: source)
            }
			// Decoder for CartaoResponseOld
            Decoders.addDecoder(clazz: CartaoResponseOld.self) { (source: AnyObject) -> CartaoResponseOld in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoResponseOld()
                instance.bin = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["bin"])
                instance.codRetorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codRetorno"])
                instance.codigoDesbloqueio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoDesbloqueio"])
                instance.criptografiaHSM = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["criptografiaHSM"])
                instance.dataEmissao = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataEmissao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataValidade"])
                instance.dataVencimentoPadrao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoPadrao"])
                instance.descricaoRetorno = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRetorno"])
                instance.estagioCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["estagioCartao"])
                instance.estagioData = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["estagioData"])
                instance.flagReversao = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagReversao"])
                instance.flagSenha = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagSenha"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.idLog = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["idLog"])
                instance.idPessoaFisica = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoaFisica"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.nomePlastico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePlastico"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.numeroCartaoReal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartaoReal"])
                instance.statusCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["statusCartao"])
                instance.statusData = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["statusData"])
                return instance
            }
			

			// Decoder for [ConsultarCartaoResponse]
            Decoders.addDecoder(clazz: [ConsultarCartaoResponse].self) { (source: AnyObject) -> [ConsultarCartaoResponse] in
                return Decoders.decode(clazz: [ConsultarCartaoResponse].self, source: source)
            }
			// Decoder for ConsultarCartaoResponse
            Decoders.addDecoder(clazz: ConsultarCartaoResponse.self) { (source: AnyObject) -> ConsultarCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConsultarCartaoResponse()
                instance.cartoes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["cartoes"])
                instance.codigoRetorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoRetorno"])
                instance.descricaoRetorno = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRetorno"])
                return instance
            }
			

			// Decoder for [ConsultarContaCartaoResponse]
            Decoders.addDecoder(clazz: [ConsultarContaCartaoResponse].self) { (source: AnyObject) -> [ConsultarContaCartaoResponse] in
                return Decoders.decode(clazz: [ConsultarContaCartaoResponse].self, source: source)
            }
			// Decoder for ConsultarContaCartaoResponse
            Decoders.addDecoder(clazz: ConsultarContaCartaoResponse.self) { (source: AnyObject) -> ConsultarContaCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConsultarContaCartaoResponse()
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.descricaoEstagio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoEstagio"])
                instance.descricaoStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoStatus"])
                instance.estagio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["estagio"])
                instance.flagCancelamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCancelamento"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.portador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["portador"])
                instance.portadorId = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["portadorId"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                instance.statusData = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["statusData"])
                return instance
            }
			

			// Decoder for [ConsultarContaResponse]
            Decoders.addDecoder(clazz: [ConsultarContaResponse].self) { (source: AnyObject) -> [ConsultarContaResponse] in
                return Decoders.decode(clazz: [ConsultarContaResponse].self, source: source)
            }
			// Decoder for ConsultarContaResponse
            Decoders.addDecoder(clazz: ConsultarContaResponse.self) { (source: AnyObject) -> ConsultarContaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConsultarContaResponse()
                instance.codRetorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codRetorno"])
                instance.codigoRetorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoRetorno"])
                instance.contas = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["contas"])
                instance.descricaoRetorno = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRetorno"])
                return instance
            }
			

			// Decoder for [ConsultarExtratoContaResponse]
            Decoders.addDecoder(clazz: [ConsultarExtratoContaResponse].self) { (source: AnyObject) -> [ConsultarExtratoContaResponse] in
                return Decoders.decode(clazz: [ConsultarExtratoContaResponse].self, source: source)
            }
			// Decoder for ConsultarExtratoContaResponse
            Decoders.addDecoder(clazz: ConsultarExtratoContaResponse.self) { (source: AnyObject) -> ConsultarExtratoContaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConsultarExtratoContaResponse()
                instance.codigoRetorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoRetorno"])
                instance.comprasNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["comprasNacionais"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.creditosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["creditosNacionais"])
                instance.dataVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimento"])
                instance.debitosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["debitosNacionais"])
                instance.descricaoRetorno = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRetorno"])
                instance.extrato = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["extrato"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.multa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["multa"])
                instance.pagamentos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["pagamentos"])
                instance.saldoAtualFinal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoAtualFinal"])
                instance.saldoExtratoAnterior = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoExtratoAnterior"])
                instance.tarifasNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["tarifasNacionais"])
                instance.valorMinimoExtrato = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorMinimoExtrato"])
                return instance
            }
			

			// Decoder for [ConsultarSaldoLimitesResponse]
            Decoders.addDecoder(clazz: [ConsultarSaldoLimitesResponse].self) { (source: AnyObject) -> [ConsultarSaldoLimitesResponse] in
                return Decoders.decode(clazz: [ConsultarSaldoLimitesResponse].self, source: source)
            }
			// Decoder for ConsultarSaldoLimitesResponse
            Decoders.addDecoder(clazz: ConsultarSaldoLimitesResponse.self) { (source: AnyObject) -> ConsultarSaldoLimitesResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConsultarSaldoLimitesResponse()
                instance.codRetorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codRetorno"])
                instance.codigoRetorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoRetorno"])
                instance.descricaoRetorno = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRetorno"])
                instance.disponibCompraNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["disponibCompraNac"])
                instance.disponibGlobalCredito = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["disponibGlobalCredito"])
                instance.disponibParceladoNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["disponibParceladoNac"])
                instance.disponibParcelasNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["disponibParcelasNac"])
                instance.disponibSaqueNacGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["disponibSaqueNacGlobal"])
                instance.limiteCompraNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteCompraNac"])
                instance.limiteGlobalCredito = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobalCredito"])
                instance.limiteParceladoNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParceladoNac"])
                instance.limiteParcelasNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelasNac"])
                instance.limiteSaqueNacGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaqueNacGlobal"])
                instance.limiteSaqueNacPeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaqueNacPeriodo"])
                instance.rendaComprovada = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["rendaComprovada"])
                instance.solicitacaoPendente = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["solicitacaoPendente"])
                return instance
            }
			

			// Decoder for [ContaCartaoResponse]
            Decoders.addDecoder(clazz: [ContaCartaoResponse].self) { (source: AnyObject) -> [ContaCartaoResponse] in
                return Decoders.decode(clazz: [ContaCartaoResponse].self, source: source)
            }
			// Decoder for ContaCartaoResponse
            Decoders.addDecoder(clazz: ContaCartaoResponse.self) { (source: AnyObject) -> ContaCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ContaCartaoResponse()
                instance.cnpjLoja = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cnpjLoja"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.dataCadastroConta = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataCadastroConta"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataNascimento"])
                instance.dddCelular = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dddCelular"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.numeroCelular = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCelular"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoIdentidade"])
                instance.possuiCompraAprovada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["possuiCompraAprovada"])
                instance.statusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["statusConta"])
                instance.ufIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ufIdentidade"])
                return instance
            }
			

			// Decoder for [ContaResponse]
            Decoders.addDecoder(clazz: [ContaResponse].self) { (source: AnyObject) -> [ContaResponse] in
                return Decoders.decode(clazz: [ContaResponse].self, source: source)
            }
			// Decoder for ContaResponse
            Decoders.addDecoder(clazz: ContaResponse.self) { (source: AnyObject) -> ContaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ContaResponse()
                instance.bin = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["bin"])
                instance.cartao = Decoders.decodeOptional(clazz: ConsultarContaCartaoResponse.self, source: sourceDictionary["cartao"])
                instance.dataCadastramento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastramento"])
                instance.dataUltimoPagamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataUltimoPagamento"])
                instance.dataVencCobranca = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencCobranca"])
                instance.dddcelularSMS = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dddcelularSMS"])
                instance.descricaoStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoStatus"])
                instance.diasEmAtraso = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diasEmAtraso"])
                instance.emissor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["emissor"])
                instance.flagCancelamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCancelamento"])
                instance.formaEnvioFatura = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["formaEnvioFatura"])
                instance.idBandeira = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idBandeira"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.idEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEndereco"])
                instance.idFantasiaBasica = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idFantasiaBasica"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idProposta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProposta"])
                instance.melhorDia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["melhorDia"])
                instance.nomeCredor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCredor"])
                instance.nomeProduto = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeProduto"])
                instance.numCelularSMS = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numCelularSMS"])
                instance.pagamentos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["pagamentos"])
                instance.permiteRefinanciamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["permiteRefinanciamento"])
                instance.pessoaFisica = Decoders.decodeOptional(clazz: PessoaFisicaResponse.self, source: sourceDictionary["pessoaFisica"])
                instance.quantidadePagamentos = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadePagamentos"])
                instance.saldoLimite = Decoders.decodeOptional(clazz: SaldoLimiteResponse.self, source: sourceDictionary["saldoLimite"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                instance.statusData = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["statusData"])
                instance.taxaRefinanciamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["taxaRefinanciamento"])
                instance.vcto = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vcto"])
                instance.vencimento1 = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["vencimento1"])
                instance.vinculoOrigemUsuario = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["vinculoOrigemUsuario"])
                return instance
            }
			

			// Decoder for [DesbloquearCartaoResponse]
            Decoders.addDecoder(clazz: [DesbloquearCartaoResponse].self) { (source: AnyObject) -> [DesbloquearCartaoResponse] in
                return Decoders.decode(clazz: [DesbloquearCartaoResponse].self, source: source)
            }
			// Decoder for DesbloquearCartaoResponse
            Decoders.addDecoder(clazz: DesbloquearCartaoResponse.self) { (source: AnyObject) -> DesbloquearCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DesbloquearCartaoResponse()
                instance.codigoRetorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoRetorno"])
                instance.descricaoRetorno = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRetorno"])
                return instance
            }
			

			// Decoder for [EmbossadoCartaoResponse]
            Decoders.addDecoder(clazz: [EmbossadoCartaoResponse].self) { (source: AnyObject) -> [EmbossadoCartaoResponse] in
                return Decoders.decode(clazz: [EmbossadoCartaoResponse].self, source: source)
            }
			// Decoder for EmbossadoCartaoResponse
            Decoders.addDecoder(clazz: EmbossadoCartaoResponse.self) { (source: AnyObject) -> EmbossadoCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EmbossadoCartaoResponse()
                instance.codigoRetorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoRetorno"])
                instance.descricaoRetorno = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRetorno"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                return instance
            }
			

			// Decoder for [EstagioCartao]
            Decoders.addDecoder(clazz: [EstagioCartao].self) { (source: AnyObject) -> [EstagioCartao] in
                return Decoders.decode(clazz: [EstagioCartao].self, source: source)
            }
			// Decoder for EstagioCartao
            Decoders.addDecoder(clazz: EstagioCartao.self) { (source: AnyObject) -> EstagioCartao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EstagioCartao()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [ExtraInfo]
            Decoders.addDecoder(clazz: [ExtraInfo].self) { (source: AnyObject) -> [ExtraInfo] in
                return Decoders.decode(clazz: [ExtraInfo].self, source: source)
            }
			// Decoder for ExtraInfo
            Decoders.addDecoder(clazz: ExtraInfo.self) { (source: AnyObject) -> ExtraInfo in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ExtraInfo()
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                return instance
            }
			

			// Decoder for [ExtratoResponse]
            Decoders.addDecoder(clazz: [ExtratoResponse].self) { (source: AnyObject) -> [ExtratoResponse] in
                return Decoders.decode(clazz: [ExtratoResponse].self, source: source)
            }
			// Decoder for ExtratoResponse
            Decoders.addDecoder(clazz: ExtratoResponse.self) { (source: AnyObject) -> ExtratoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ExtratoResponse()
                instance.cartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cartao"])
                instance.chip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chip"])
                instance.cidadeUFPais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidadeUFPais"])
                instance.codigoAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoAutorizacao"])
                instance.codigoMoeda = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoeda"])
                instance.codigoMoedaDestino = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoedaDestino"])
                instance.cotacaoDolar = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cotacaoDolar"])
                instance.credito = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["credito"])
                instance.dataCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCompra"])
                instance.dataCotacaoDolar = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataCotacaoDolar"])
                instance.dataEntradaCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEntradaCompra"])
                instance.dataTransacaoUTC = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataTransacaoUTC"])
                instance.debito = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["debito"])
                instance.descricaoModoEntrada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoModoEntrada"])
                instance.descricaoTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTransacao"])
                instance.encargosFinanceiros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["encargosFinanceiros"])
                instance.historico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["historico"])
                instance.idEventoExterno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEventoExterno"])
                instance.idTipoTransacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTransacao"])
                instance.idTransacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransacao"])
                instance.mcc = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["mcc"])
                instance.nomeEstabVisa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabVisa"])
                instance.nomePlastico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePlastico"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.origem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["origem"])
                instance.taxaEmbarque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaEmbarque"])
                instance.tipoEvento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoEvento"])
                instance.valorDolar = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorDolar"])
                return instance
            }
			

			// Decoder for [Limites]
            Decoders.addDecoder(clazz: [Limites].self) { (source: AnyObject) -> [Limites] in
                return Decoders.decode(clazz: [Limites].self, source: source)
            }
			// Decoder for Limites
            Decoders.addDecoder(clazz: Limites.self) { (source: AnyObject) -> Limites in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Limites()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.limiteCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteCompra"])
                instance.limiteConsignado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteConsignado"])
                instance.limiteExterno = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteExterno"])
                instance.limiteExtra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteExtra"])
                instance.limiteGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobal"])
                instance.limiteInternacionalCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalCompra"])
                instance.limiteInternacionalParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalParcelado"])
                instance.limiteInternacionalParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalParcelas"])
                instance.limiteInternacionalSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalSaqueGlobal"])
                instance.limiteInternacionalSaquePeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalSaquePeriodo"])
                instance.limiteMensal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteMensal"])
                instance.limiteParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelado"])
                instance.limiteParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelas"])
                instance.limiteSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaqueGlobal"])
                instance.limiteSaquePeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaquePeriodo"])
                return instance
            }
			

			// Decoder for [ListaProdutos]
            Decoders.addDecoder(clazz: [ListaProdutos].self) { (source: AnyObject) -> [ListaProdutos] in
                return Decoders.decode(clazz: [ListaProdutos].self, source: source)
            }
			// Decoder for ListaProdutos
            Decoders.addDecoder(clazz: ListaProdutos.self) { (source: AnyObject) -> ListaProdutos in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ListaProdutos()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [OrigemComercial]
            Decoders.addDecoder(clazz: [OrigemComercial].self) { (source: AnyObject) -> [OrigemComercial] in
                return Decoders.decode(clazz: [OrigemComercial].self, source: source)
            }
			// Decoder for OrigemComercial
            Decoders.addDecoder(clazz: OrigemComercial.self) { (source: AnyObject) -> OrigemComercial in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrigemComercial()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [PageCartoes]
            Decoders.addDecoder(clazz: [PageCartoes].self) { (source: AnyObject) -> [PageCartoes] in
                return Decoders.decode(clazz: [PageCartoes].self, source: source)
            }
			// Decoder for PageCartoes
            Decoders.addDecoder(clazz: PageCartoes.self) { (source: AnyObject) -> PageCartoes in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageCartoes()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageEstagiosCartoes]
            Decoders.addDecoder(clazz: [PageEstagiosCartoes].self) { (source: AnyObject) -> [PageEstagiosCartoes] in
                return Decoders.decode(clazz: [PageEstagiosCartoes].self, source: source)
            }
			// Decoder for PageEstagiosCartoes
            Decoders.addDecoder(clazz: PageEstagiosCartoes.self) { (source: AnyObject) -> PageEstagiosCartoes in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageEstagiosCartoes()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageOrigensComerciais]
            Decoders.addDecoder(clazz: [PageOrigensComerciais].self) { (source: AnyObject) -> [PageOrigensComerciais] in
                return Decoders.decode(clazz: [PageOrigensComerciais].self, source: source)
            }
			// Decoder for PageOrigensComerciais
            Decoders.addDecoder(clazz: PageOrigensComerciais.self) { (source: AnyObject) -> PageOrigensComerciais in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageOrigensComerciais()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePessoas]
            Decoders.addDecoder(clazz: [PagePessoas].self) { (source: AnyObject) -> [PagePessoas] in
                return Decoders.decode(clazz: [PagePessoas].self, source: source)
            }
			// Decoder for PagePessoas
            Decoders.addDecoder(clazz: PagePessoas.self) { (source: AnyObject) -> PagePessoas in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePessoas()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageStatusCartoes]
            Decoders.addDecoder(clazz: [PageStatusCartoes].self) { (source: AnyObject) -> [PageStatusCartoes] in
                return Decoders.decode(clazz: [PageStatusCartoes].self, source: source)
            }
			// Decoder for PageStatusCartoes
            Decoders.addDecoder(clazz: PageStatusCartoes.self) { (source: AnyObject) -> PageStatusCartoes in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageStatusCartoes()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [Pessoa]
            Decoders.addDecoder(clazz: [Pessoa].self) { (source: AnyObject) -> [Pessoa] in
                return Decoders.decode(clazz: [Pessoa].self, source: source)
            }
			// Decoder for Pessoa
            Decoders.addDecoder(clazz: Pessoa.self) { (source: AnyObject) -> Pessoa in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Pessoa()
                instance.cnpj = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cnpj"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataNascimento"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.tipo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipo"])
                return instance
            }
			

			// Decoder for [PessoaFisicaResponse]
            Decoders.addDecoder(clazz: [PessoaFisicaResponse].self) { (source: AnyObject) -> [PessoaFisicaResponse] in
                return Decoders.decode(clazz: [PessoaFisicaResponse].self, source: source)
            }
			// Decoder for PessoaFisicaResponse
            Decoders.addDecoder(clazz: PessoaFisicaResponse.self) { (source: AnyObject) -> PessoaFisicaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaFisicaResponse()
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.complementoLogradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complementoLogradouro"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.dddcelular = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dddcelular"])
                instance.dddtelefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dddtelefone"])
                instance.endereco = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["endereco"])
                instance.idPessoaFisica = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoaFisica"])
                instance.identidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["identidade"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.numeroCelular = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCelular"])
                instance.numeroLogradouro = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroLogradouro"])
                instance.numeroTelefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroTelefone"])
                instance.orgaoEmissor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoEmissor"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                return instance
            }
			

			// Decoder for [Portador]
            Decoders.addDecoder(clazz: [Portador].self) { (source: AnyObject) -> [Portador] in
                return Decoders.decode(clazz: [Portador].self, source: source)
            }
			// Decoder for Portador
            Decoders.addDecoder(clazz: Portador.self) { (source: AnyObject) -> Portador in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Portador()
                instance.dataCadastroPortador = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataCadastroPortador"])
                instance.dataCancelamentoPortador = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataCancelamentoPortador"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagAtivo"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idParentesco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idParentesco"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.tipoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoPortador"])
                return instance
            }
			

			// Decoder for [Produto]
            Decoders.addDecoder(clazz: [Produto].self) { (source: AnyObject) -> [Produto] in
                return Decoders.decode(clazz: [Produto].self, source: source)
            }
			// Decoder for Produto
            Decoders.addDecoder(clazz: Produto.self) { (source: AnyObject) -> Produto in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Produto()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [SaldoLimiteResponse]
            Decoders.addDecoder(clazz: [SaldoLimiteResponse].self) { (source: AnyObject) -> [SaldoLimiteResponse] in
                return Decoders.decode(clazz: [SaldoLimiteResponse].self, source: source)
            }
			// Decoder for SaldoLimiteResponse
            Decoders.addDecoder(clazz: SaldoLimiteResponse.self) { (source: AnyObject) -> SaldoLimiteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = SaldoLimiteResponse()
                instance.disponibCompraNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["disponibCompraNac"])
                instance.disponibGlobalCredito = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["disponibGlobalCredito"])
                instance.disponibParceladoNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["disponibParceladoNac"])
                instance.disponibParcelasNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["disponibParcelasNac"])
                instance.disponibSaqueNacGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["disponibSaqueNacGlobal"])
                instance.flagAntecipacao = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAntecipacao"])
                instance.limiteCompraNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteCompraNac"])
                instance.limiteCreditoConcedido = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteCreditoConcedido"])
                instance.limiteCreditoDisponivel = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteCreditoDisponivel"])
                instance.limiteGlobalCredito = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobalCredito"])
                instance.limiteParceladoNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParceladoNac"])
                instance.limiteParcelasNac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelasNac"])
                instance.limitePontuacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limitePontuacao"])
                instance.limiteSaqueNacGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaqueNacGlobal"])
                instance.numeroCiclo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroCiclo"])
                instance.pontosConcedidos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["pontosConcedidos"])
                instance.pontosRemanescentes = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["pontosRemanescentes"])
                instance.proximoVencimentoPadrao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["proximoVencimentoPadrao"])
                instance.proximoVencimentoReal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["proximoVencimentoReal"])
                instance.saldoAtualFinal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoAtualFinal"])
                instance.saldoCredor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoCredor"])
                instance.saldoDevedor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDevedor"])
                instance.saldoDevedorOneroso = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDevedorOneroso"])
                instance.saldoDevedorTotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDevedorTotal"])
                instance.saltaExtratoAnterior = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saltaExtratoAnterior"])
                instance.totalDisponivelUtilizacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDisponivelUtilizacao"])
                instance.totalFuturo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalFuturo"])
                instance.valorMinimoExtrato = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorMinimoExtrato"])
                instance.valorMinimoExtratoOriginal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorMinimoExtratoOriginal"])
                instance.vencimentoPadraoAnterior = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vencimentoPadraoAnterior"])
                instance.vencimentoPosProx = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vencimentoPosProx"])
                instance.vencimentoRealAnterior = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vencimentoRealAnterior"])
                return instance
            }
			

			// Decoder for [Saldos]
            Decoders.addDecoder(clazz: [Saldos].self) { (source: AnyObject) -> [Saldos] in
                return Decoders.decode(clazz: [Saldos].self, source: source)
            }
			// Decoder for Saldos
            Decoders.addDecoder(clazz: Saldos.self) { (source: AnyObject) -> Saldos in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Saldos()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.saldoDisponivelCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelCompra"])
                instance.saldoDisponivelCompraInternacional = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelCompraInternacional"])
                instance.saldoDisponivelExterno = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelExterno"])
                instance.saldoDisponivelExtra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelExtra"])
                instance.saldoDisponivelGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelGlobal"])
                instance.saldoDisponivelMensal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelMensal"])
                instance.saldoDisponivelParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelParcelado"])
                instance.saldoDisponivelParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelParcelas"])
                instance.saldoDisponivelSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaque"])
                instance.saldoDisponivelSaqueInternacional = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaqueInternacional"])
                instance.saldoPontosFidelidade = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoPontosFidelidade"])
                return instance
            }
			

			// Decoder for [StatusCartao]
            Decoders.addDecoder(clazz: [StatusCartao].self) { (source: AnyObject) -> [StatusCartao] in
                return Decoders.decode(clazz: [StatusCartao].self, source: source)
            }
			// Decoder for StatusCartao
            Decoders.addDecoder(clazz: StatusCartao.self) { (source: AnyObject) -> StatusCartao in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusCartao()
                instance.flagAlteraStatus = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagAlteraStatus"])
                instance.flagCadastroNovaSenha = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCadastroNovaSenha"])
                instance.flagCancelaConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCancelaConta"])
                instance.flagCancelaNoDesbloqueio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCancelaNoDesbloqueio"])
                instance.flagCobraTarifa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCobraTarifa"])
                instance.flagDestinoTransferencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagDestinoTransferencia"])
                instance.flagEmiteProvisorio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagEmiteProvisorio"])
                instance.flagExcecaoBandeira = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagExcecaoBandeira"])
                instance.flagOrigemTransferencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagOrigemTransferencia"])
                instance.flagReemiteCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagReemiteCartao"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idStatusDestinoConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusDestinoConta"])
                instance.idStatusDestinoDesbloqueio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusDestinoDesbloqueio"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			
        }
    }
}
