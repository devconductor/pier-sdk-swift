// Models.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

protocol JSONEncodable {
    func encodeToJSON() -> AnyObject
}

public class Response<T> {
    public let statusCode: Int
    public let header: [String: String]
    public let body: T

    public init(statusCode: Int, header: [String: String], body: T) {
        self.statusCode = statusCode
        self.header = header
        self.body = body
    }

    public convenience init(response: NSHTTPURLResponse, body: T) {
        let rawHeader = response.allHeaderFields
        var header = [String:String]()
        for (key, value) in rawHeader {
            header[key as! String] = value as? String
        }
        self.init(statusCode: response.statusCode, header: header, body: body)
    }
}

private var once = dispatch_once_t()
class Decoders {
    static private var decoders = Dictionary<String, ((AnyObject) -> AnyObject)>()
    
    static func addDecoder<T>(clazz clazz: T.Type, decoder: ((AnyObject) -> T)) {
        let key = "\(T.self)"
        decoders[key] = { decoder($0) as! AnyObject }
    }
    
    static func decode<T>(clazz clazz: [T].Type, source: AnyObject) -> [T] {
        let array = source as! [AnyObject]
        return array.map { Decoders.decode(clazz: T.self, source: $0) }
    }
    
    static func decode<T, Key: Hashable>(clazz clazz: [Key:T].Type, source: AnyObject) -> [Key:T] {
        let sourceDictinoary = source as! [Key: AnyObject]
        var dictionary = [Key:T]()
        for (key, value) in sourceDictinoary {
            dictionary[key] = Decoders.decode(clazz: T.self, source: value)
        }
        return dictionary
    }
    
    static func decode<T>(clazz clazz: T.Type, source: AnyObject) -> T {
        initialize()
        if source is T {
            return source as! T
        }
        
        let key = "\(T.self)"
        if let decoder = decoders[key] {
           return decoder(source) as! T
        } else {
            fatalError("Source \(source) is not convertible to type \(clazz): Maybe swagger file is insufficient")
        }
    }

    static func decodeOptional<T>(clazz clazz: T.Type, source: AnyObject?) -> T? {
        if source is NSNull {
            return nil
        }
        return source.map { (source: AnyObject) -> T in
            Decoders.decode(clazz: clazz, source: source)
        }
    }

    static func decodeOptional<T>(clazz clazz: [T].Type, source: AnyObject?) -> [T]? {
        if source is NSNull {
            return nil
        }
        return source.map { (someSource: AnyObject) -> [T] in
            Decoders.decode(clazz: clazz, source: someSource)
        }
    }

    static func decodeOptional<T, Key: Hashable>(clazz clazz: [Key:T].Type, source: AnyObject?) -> [Key:T]? {
        if source is NSNull {
            return nil
        }
        return source.map { (someSource: AnyObject) -> [Key:T] in
            Decoders.decode(clazz: clazz, source: someSource)
        }
    }
	
    static private func initialize() {
        dispatch_once(&once) {
            let formatters = [
                "yyyy-MM-dd",
                "yyyy-MM-dd'T'HH:mm:ssZZZZZ",
                "yyyy-MM-dd'T'HH:mm:ss.SSSZZZZZ",
                "yyyy-MM-dd'T'HH:mm:ss'Z'"
            ].map { (format: String) -> NSDateFormatter in
                let formatter = NSDateFormatter()
                formatter.dateFormat = format
                return formatter
            }
            // Decoder for NSDate
            Decoders.addDecoder(clazz: NSDate.self) { (source: AnyObject) -> NSDate in
               if let sourceString = source as? String {
                    for formatter in formatters {
                        if let date = formatter.dateFromString(sourceString) {
                            return date
                        }
                    }
                
                }
                if let sourceInt = source as? Int {
                    // treat as a java date
                    return NSDate(timeIntervalSince1970: Double(sourceInt / 1000) )
                }
                fatalError("formatter failed to parse \(source)")
            } 

			// Decoder for [AdicionalDetalheResponse]
            Decoders.addDecoder(clazz: [AdicionalDetalheResponse].self) { (source: AnyObject) -> [AdicionalDetalheResponse] in
                return Decoders.decode(clazz: [AdicionalDetalheResponse].self, source: source)
            }
			// Decoder for AdicionalDetalheResponse
            Decoders.addDecoder(clazz: AdicionalDetalheResponse.self) { (source: AnyObject) -> AdicionalDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AdicionalDetalheResponse()
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.idEstadoCivil = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstadoCivil"])
                instance.idProfissao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProfissao"])
                instance.idNacionalidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNacionalidade"])
                instance.idParentesco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idParentesco"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagAtivo"])
                instance.dataCadastroPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastroPortador"])
                instance.dataCancelamentoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCancelamentoPortador"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                return instance
            }
			

			// Decoder for [AdicionalPersist]
            Decoders.addDecoder(clazz: [AdicionalPersist].self) { (source: AnyObject) -> [AdicionalPersist] in
                return Decoders.decode(clazz: [AdicionalPersist].self, source: source)
            }
			// Decoder for AdicionalPersist
            Decoders.addDecoder(clazz: AdicionalPersist.self) { (source: AnyObject) -> AdicionalPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AdicionalPersist()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.idEstadoCivil = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstadoCivil"])
                instance.idProfissao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProfissao"])
                instance.idNacionalidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNacionalidade"])
                instance.idParentesco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idParentesco"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                return instance
            }
			

			// Decoder for [AdicionalResponse]
            Decoders.addDecoder(clazz: [AdicionalResponse].self) { (source: AnyObject) -> [AdicionalResponse] in
                return Decoders.decode(clazz: [AdicionalResponse].self, source: source)
            }
			// Decoder for AdicionalResponse
            Decoders.addDecoder(clazz: AdicionalResponse.self) { (source: AnyObject) -> AdicionalResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AdicionalResponse()
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.idParentesco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idParentesco"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagAtivo"])
                instance.dataCadastroPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastroPortador"])
                instance.dataCancelamentoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCancelamentoPortador"])
                return instance
            }
			

			// Decoder for [AdicionalUpdate]
            Decoders.addDecoder(clazz: [AdicionalUpdate].self) { (source: AnyObject) -> [AdicionalUpdate] in
                return Decoders.decode(clazz: [AdicionalUpdate].self, source: source)
            }
			// Decoder for AdicionalUpdate
            Decoders.addDecoder(clazz: AdicionalUpdate.self) { (source: AnyObject) -> AdicionalUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AdicionalUpdate()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.idParentesco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idParentesco"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                return instance
            }
			

			// Decoder for [AjusteFinanceiroResponse]
            Decoders.addDecoder(clazz: [AjusteFinanceiroResponse].self) { (source: AnyObject) -> [AjusteFinanceiroResponse] in
                return Decoders.decode(clazz: [AjusteFinanceiroResponse].self, source: source)
            }
			// Decoder for AjusteFinanceiroResponse
            Decoders.addDecoder(clazz: AjusteFinanceiroResponse.self) { (source: AnyObject) -> AjusteFinanceiroResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AjusteFinanceiroResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoAjuste = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoAjuste"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.dataAjuste = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAjuste"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.identificadorExterno = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["identificadorExterno"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [AlterarProdutoRequest]
            Decoders.addDecoder(clazz: [AlterarProdutoRequest].self) { (source: AnyObject) -> [AlterarProdutoRequest] in
                return Decoders.decode(clazz: [AlterarProdutoRequest].self, source: source)
            }
			// Decoder for AlterarProdutoRequest
            Decoders.addDecoder(clazz: AlterarProdutoRequest.self) { (source: AnyObject) -> AlterarProdutoRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AlterarProdutoRequest()
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.idPromotor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPromotor"])
                return instance
            }
			

			// Decoder for [AnexoNotificacaoEmailRequest]
            Decoders.addDecoder(clazz: [AnexoNotificacaoEmailRequest].self) { (source: AnyObject) -> [AnexoNotificacaoEmailRequest] in
                return Decoders.decode(clazz: [AnexoNotificacaoEmailRequest].self, source: source)
            }
			// Decoder for AnexoNotificacaoEmailRequest
            Decoders.addDecoder(clazz: AnexoNotificacaoEmailRequest.self) { (source: AnyObject) -> AnexoNotificacaoEmailRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AnexoNotificacaoEmailRequest()
                instance.idDocumento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idDocumento"])
                return instance
            }
			

			// Decoder for [AntecipacaoResponse]
            Decoders.addDecoder(clazz: [AntecipacaoResponse].self) { (source: AnyObject) -> [AntecipacaoResponse] in
                return Decoders.decode(clazz: [AntecipacaoResponse].self, source: source)
            }
			// Decoder for AntecipacaoResponse
            Decoders.addDecoder(clazz: AntecipacaoResponse.self) { (source: AnyObject) -> AntecipacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AntecipacaoResponse()
                instance.mcc = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["mcc"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idCompra = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCompra"])
                instance.quantidadeParcelasTotal = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeParcelasTotal"])
                instance.quantidadeParcelasAntecipadas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeParcelasAntecipadas"])
                instance.valorParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcela"])
                instance.valorDescontoTotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorDescontoTotal"])
                instance.valorTotalComDesconto = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalComDesconto"])
                instance.taxaDesconto = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaDesconto"])
                instance.dataCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCompra"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                instance.tipoOrigemTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoOrigemTransacao"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                instance.latitude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["latitude"])
                instance.longitude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["longitude"])
                instance.idGrupoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idGrupoMCC"])
                instance.descricaoGrupoMCC = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoGrupoMCC"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.descricaoProduto = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoProduto"])
                instance.descricaoEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoEstabelecimento"])
                instance.nomeFantasiaEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasiaEstabelecimento"])
                return instance
            }
			

			// Decoder for [AntecipacaoSimuladaDetalhesResponse]
            Decoders.addDecoder(clazz: [AntecipacaoSimuladaDetalhesResponse].self) { (source: AnyObject) -> [AntecipacaoSimuladaDetalhesResponse] in
                return Decoders.decode(clazz: [AntecipacaoSimuladaDetalhesResponse].self, source: source)
            }
			// Decoder for AntecipacaoSimuladaDetalhesResponse
            Decoders.addDecoder(clazz: AntecipacaoSimuladaDetalhesResponse.self) { (source: AnyObject) -> AntecipacaoSimuladaDetalhesResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AntecipacaoSimuladaDetalhesResponse()
                instance.quantidadeParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeParcelas"])
                instance.valorParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcelas"])
                instance.valorDesconto = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorDesconto"])
                instance.valorParcelasDesconto = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcelasDesconto"])
                return instance
            }
			

			// Decoder for [AntecipacaoSimuladaLoteResponse]
            Decoders.addDecoder(clazz: [AntecipacaoSimuladaLoteResponse].self) { (source: AnyObject) -> [AntecipacaoSimuladaLoteResponse] in
                return Decoders.decode(clazz: [AntecipacaoSimuladaLoteResponse].self, source: source)
            }
			// Decoder for AntecipacaoSimuladaLoteResponse
            Decoders.addDecoder(clazz: AntecipacaoSimuladaLoteResponse.self) { (source: AnyObject) -> AntecipacaoSimuladaLoteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AntecipacaoSimuladaLoteResponse()
                instance.valorTotalAntecipado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalAntecipado"])
                instance.valorTotalDesconto = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalDesconto"])
                instance.valorTotalComDesconto = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalComDesconto"])
                instance.antecipacoesSimuladas = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["antecipacoesSimuladas"])
                return instance
            }
			

			// Decoder for [AntecipacaoSimuladaResponse]
            Decoders.addDecoder(clazz: [AntecipacaoSimuladaResponse].self) { (source: AnyObject) -> [AntecipacaoSimuladaResponse] in
                return Decoders.decode(clazz: [AntecipacaoSimuladaResponse].self, source: source)
            }
			// Decoder for AntecipacaoSimuladaResponse
            Decoders.addDecoder(clazz: AntecipacaoSimuladaResponse.self) { (source: AnyObject) -> AntecipacaoSimuladaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AntecipacaoSimuladaResponse()
                instance.mcc = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["mcc"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.idAntecipacaoSimulada = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAntecipacaoSimulada"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idCompra = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCompra"])
                instance.idTipoTransacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTransacao"])
                instance.quantidadeParcelasAntecipaveis = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeParcelasAntecipaveis"])
                instance.valorParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcela"])
                instance.dataHoraSimulacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraSimulacao"])
                instance.taxaAntecipacaoAno = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaAntecipacaoAno"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.dataCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCompra"])
                instance.tipoOrigemTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoOrigemTransacao"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                instance.latitude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["latitude"])
                instance.longitude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["longitude"])
                instance.idGrupoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idGrupoMCC"])
                instance.descricaoGrupoMCC = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoGrupoMCC"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.descricaoProduto = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoProduto"])
                instance.descricaoEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoEstabelecimento"])
                instance.nomeFantasiaEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasiaEstabelecimento"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                return instance
            }
			

			// Decoder for [AnuidadeResponse]
            Decoders.addDecoder(clazz: [AnuidadeResponse].self) { (source: AnyObject) -> [AnuidadeResponse] in
                return Decoders.decode(clazz: [AnuidadeResponse].self, source: source)
            }
			// Decoder for AnuidadeResponse
            Decoders.addDecoder(clazz: AnuidadeResponse.self) { (source: AnyObject) -> AnuidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AnuidadeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.flagAnuidadeBonificada = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAnuidadeBonificada"])
                return instance
            }
			

			// Decoder for [AplicacaoMobilePersist]
            Decoders.addDecoder(clazz: [AplicacaoMobilePersist].self) { (source: AnyObject) -> [AplicacaoMobilePersist] in
                return Decoders.decode(clazz: [AplicacaoMobilePersist].self, source: source)
            }
			// Decoder for AplicacaoMobilePersist
            Decoders.addDecoder(clazz: AplicacaoMobilePersist.self) { (source: AnyObject) -> AplicacaoMobilePersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AplicacaoMobilePersist()
                instance.idPlataformaMobile = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPlataformaMobile"])
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.cor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cor"])
                instance.som = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["som"])
                instance.icone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["icone"])
                instance.certificadoBase64 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["certificadoBase64"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                return instance
            }
			

			// Decoder for [AplicacaoMobileResponse]
            Decoders.addDecoder(clazz: [AplicacaoMobileResponse].self) { (source: AnyObject) -> [AplicacaoMobileResponse] in
                return Decoders.decode(clazz: [AplicacaoMobileResponse].self, source: source)
            }
			// Decoder for AplicacaoMobileResponse
            Decoders.addDecoder(clazz: AplicacaoMobileResponse.self) { (source: AnyObject) -> AplicacaoMobileResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AplicacaoMobileResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idPlataformaMobile = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPlataformaMobile"])
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.cor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cor"])
                instance.som = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["som"])
                instance.icone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["icone"])
                instance.certificadoBase64 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["certificadoBase64"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                return instance
            }
			

			// Decoder for [AplicacaoMobileUpdate]
            Decoders.addDecoder(clazz: [AplicacaoMobileUpdate].self) { (source: AnyObject) -> [AplicacaoMobileUpdate] in
                return Decoders.decode(clazz: [AplicacaoMobileUpdate].self, source: source)
            }
			// Decoder for AplicacaoMobileUpdate
            Decoders.addDecoder(clazz: AplicacaoMobileUpdate.self) { (source: AnyObject) -> AplicacaoMobileUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AplicacaoMobileUpdate()
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.cor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cor"])
                instance.som = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["som"])
                instance.icone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["icone"])
                instance.certificado = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["certificado"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                return instance
            }
			

			// Decoder for [ArquivoAUDResponse]
            Decoders.addDecoder(clazz: [ArquivoAUDResponse].self) { (source: AnyObject) -> [ArquivoAUDResponse] in
                return Decoders.decode(clazz: [ArquivoAUDResponse].self, source: source)
            }
			// Decoder for ArquivoAUDResponse
            Decoders.addDecoder(clazz: ArquivoAUDResponse.self) { (source: AnyObject) -> ArquivoAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ArquivoAUDResponse()
                instance.rev = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["rev"])
                instance.revType = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revType"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.idRespostaAcessoDigital = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["idRespostaAcessoDigital"])
                instance.dataHoraRespostaAcessoDigital = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraRespostaAcessoDigital"])
                instance.idRespostaNeurotech = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["idRespostaNeurotech"])
                instance.dataHoraRespostaNeurotech = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraRespostaNeurotech"])
                instance.uri = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uri"])
                instance.dataHoraInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraInclusao"])
                instance.dataHoraAlteracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraAlteracao"])
                instance.extensao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extensao"])
                instance.parametros = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["parametros"])
                return instance
            }
			

			// Decoder for [ArquivoDetalheResponse]
            Decoders.addDecoder(clazz: [ArquivoDetalheResponse].self) { (source: AnyObject) -> [ArquivoDetalheResponse] in
                return Decoders.decode(clazz: [ArquivoDetalheResponse].self, source: source)
            }
			// Decoder for ArquivoDetalheResponse
            Decoders.addDecoder(clazz: ArquivoDetalheResponse.self) { (source: AnyObject) -> ArquivoDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ArquivoDetalheResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoArquivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoArquivo"])
                instance.nomeTipoArquivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeTipoArquivo"])
                instance.arquivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["arquivo"])
                instance.idStatusArquivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusArquivo"])
                instance.nomeStatusArquivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeStatusArquivo"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.extensao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extensao"])
                instance.dataInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInclusao"])
                instance.dataAlteracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAlteracao"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                return instance
            }
			

			// Decoder for [ArquivoDetalhesPersist]
            Decoders.addDecoder(clazz: [ArquivoDetalhesPersist].self) { (source: AnyObject) -> [ArquivoDetalhesPersist] in
                return Decoders.decode(clazz: [ArquivoDetalhesPersist].self, source: source)
            }
			// Decoder for ArquivoDetalhesPersist
            Decoders.addDecoder(clazz: ArquivoDetalhesPersist.self) { (source: AnyObject) -> ArquivoDetalhesPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ArquivoDetalhesPersist()
                instance.nomeCampo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCampo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                return instance
            }
			

			// Decoder for [ArquivoParametroAUDResponse]
            Decoders.addDecoder(clazz: [ArquivoParametroAUDResponse].self) { (source: AnyObject) -> [ArquivoParametroAUDResponse] in
                return Decoders.decode(clazz: [ArquivoParametroAUDResponse].self, source: source)
            }
			// Decoder for ArquivoParametroAUDResponse
            Decoders.addDecoder(clazz: ArquivoParametroAUDResponse.self) { (source: AnyObject) -> ArquivoParametroAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ArquivoParametroAUDResponse()
                instance.rev = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["rev"])
                instance.revType = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revType"])
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.parametro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["parametro"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.dataHoraInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraInclusao"])
                instance.dataHoraAlteracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraAlteracao"])
                return instance
            }
			

			// Decoder for [ArquivoParametroResponse]
            Decoders.addDecoder(clazz: [ArquivoParametroResponse].self) { (source: AnyObject) -> [ArquivoParametroResponse] in
                return Decoders.decode(clazz: [ArquivoParametroResponse].self, source: source)
            }
			// Decoder for ArquivoParametroResponse
            Decoders.addDecoder(clazz: ArquivoParametroResponse.self) { (source: AnyObject) -> ArquivoParametroResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ArquivoParametroResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nomeCampo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCampo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                return instance
            }
			

			// Decoder for [ArquivoPersist]
            Decoders.addDecoder(clazz: [ArquivoPersist].self) { (source: AnyObject) -> [ArquivoPersist] in
                return Decoders.decode(clazz: [ArquivoPersist].self, source: source)
            }
			// Decoder for ArquivoPersist
            Decoders.addDecoder(clazz: ArquivoPersist.self) { (source: AnyObject) -> ArquivoPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ArquivoPersist()
                instance.idTipoArquivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoArquivo"])
                instance.arquivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["arquivo"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.extensao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extensao"])
                instance.tipoComunicacao = ArquivoPersist.TipoComunicacao(rawValue: (sourceDictionary["tipoComunicacao"] as? String) ?? "") 
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                return instance
            }
			

			// Decoder for [ArquivoResponse]
            Decoders.addDecoder(clazz: [ArquivoResponse].self) { (source: AnyObject) -> [ArquivoResponse] in
                return Decoders.decode(clazz: [ArquivoResponse].self, source: source)
            }
			// Decoder for ArquivoResponse
            Decoders.addDecoder(clazz: ArquivoResponse.self) { (source: AnyObject) -> ArquivoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ArquivoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoArquivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoArquivo"])
                instance.nomeTipoArquivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeTipoArquivo"])
                instance.idStatusArquivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusArquivo"])
                instance.nomeStatusArquivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeStatusArquivo"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.extensao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extensao"])
                instance.dataInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInclusao"])
                instance.dataAlteracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAlteracao"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                return instance
            }
			

			// Decoder for [AtendimentoClienteResponse]
            Decoders.addDecoder(clazz: [AtendimentoClienteResponse].self) { (source: AnyObject) -> [AtendimentoClienteResponse] in
                return Decoders.decode(clazz: [AtendimentoClienteResponse].self, source: source)
            }
			// Decoder for AtendimentoClienteResponse
            Decoders.addDecoder(clazz: AtendimentoClienteResponse.self) { (source: AnyObject) -> AtendimentoClienteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AtendimentoClienteResponse()
                instance.idAtendimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAtendimento"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idTipoAtendimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoAtendimento"])
                instance.descricaoTipoAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoAtendimento"])
                instance.conteudoAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudoAtendimento"])
                instance.detalhesAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["detalhesAtendimento"])
                instance.nomeAtendente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeAtendente"])
                instance.nomeSistema = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeSistema"])
                instance.dataHoraInicioAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraInicioAtendimento"])
                instance.dataHoraFimAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraFimAtendimento"])
                instance.dataAtendimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAtendimento"])
                instance.dataAgendamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAgendamento"])
                instance.dataProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataProcessamento"])
                instance.flagProcessamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagProcessamento"])
                return instance
            }
			

			// Decoder for [AtribuirAssinaturaClientePersist]
            Decoders.addDecoder(clazz: [AtribuirAssinaturaClientePersist].self) { (source: AnyObject) -> [AtribuirAssinaturaClientePersist] in
                return Decoders.decode(clazz: [AtribuirAssinaturaClientePersist].self, source: source)
            }
			// Decoder for AtribuirAssinaturaClientePersist
            Decoders.addDecoder(clazz: AtribuirAssinaturaClientePersist.self) { (source: AnyObject) -> AtribuirAssinaturaClientePersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AtribuirAssinaturaClientePersist()
                instance.idArquivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idArquivo"])
                return instance
            }
			

			// Decoder for [AuthToken]
            Decoders.addDecoder(clazz: [AuthToken].self) { (source: AnyObject) -> [AuthToken] in
                return Decoders.decode(clazz: [AuthToken].self, source: source)
            }
			// Decoder for AuthToken
            Decoders.addDecoder(clazz: AuthToken.self) { (source: AnyObject) -> AuthToken in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AuthToken()
                instance.code = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["code"])
                instance.extraInfo = Decoders.decodeOptional(clazz: ExtraInfo.self, source: sourceDictionary["extraInfo"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.owner = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["owner"])
                instance.status = AuthToken.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [AutorizacaoOnUsRequest]
            Decoders.addDecoder(clazz: [AutorizacaoOnUsRequest].self) { (source: AnyObject) -> [AutorizacaoOnUsRequest] in
                return Decoders.decode(clazz: [AutorizacaoOnUsRequest].self, source: source)
            }
			// Decoder for AutorizacaoOnUsRequest
            Decoders.addDecoder(clazz: AutorizacaoOnUsRequest.self) { (source: AnyObject) -> AutorizacaoOnUsRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AutorizacaoOnUsRequest()
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.codigoSegurancaCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoSegurancaCartao"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroRealCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroRealCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.dataHoraTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTerminal"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                return instance
            }
			

			// Decoder for [AvisoViagemResponse]
            Decoders.addDecoder(clazz: [AvisoViagemResponse].self) { (source: AnyObject) -> [AvisoViagemResponse] in
                return Decoders.decode(clazz: [AvisoViagemResponse].self, source: source)
            }
			// Decoder for AvisoViagemResponse
            Decoders.addDecoder(clazz: AvisoViagemResponse.self) { (source: AnyObject) -> AvisoViagemResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = AvisoViagemResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.codigoPais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoPais"])
                instance.dataInicio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInicio"])
                instance.dataFim = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFim"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [BancoResponse]
            Decoders.addDecoder(clazz: [BancoResponse].self) { (source: AnyObject) -> [BancoResponse] in
                return Decoders.decode(clazz: [BancoResponse].self, source: source)
            }
			// Decoder for BancoResponse
            Decoders.addDecoder(clazz: BancoResponse.self) { (source: AnyObject) -> BancoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BancoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.digitoBanco = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoBanco"])
                return instance
            }
			

			// Decoder for [BaseResponse]
            Decoders.addDecoder(clazz: [BaseResponse].self) { (source: AnyObject) -> [BaseResponse] in
                return Decoders.decode(clazz: [BaseResponse].self, source: source)
            }
			// Decoder for BaseResponse
            Decoders.addDecoder(clazz: BaseResponse.self) { (source: AnyObject) -> BaseResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BaseResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.servidor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["servidor"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                instance.nomeBase = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeBase"])
                instance.senhaCriptografada = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["senhaCriptografada"])
                instance.domain = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["domain"])
                instance.nomeBaseControleAcesso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeBaseControleAcesso"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.servidorControleAcesso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["servidorControleAcesso"])
                return instance
            }
			

			// Decoder for [BeneficioPagamentoAtrasoResponse]
            Decoders.addDecoder(clazz: [BeneficioPagamentoAtrasoResponse].self) { (source: AnyObject) -> [BeneficioPagamentoAtrasoResponse] in
                return Decoders.decode(clazz: [BeneficioPagamentoAtrasoResponse].self, source: source)
            }
			// Decoder for BeneficioPagamentoAtrasoResponse
            Decoders.addDecoder(clazz: BeneficioPagamentoAtrasoResponse.self) { (source: AnyObject) -> BeneficioPagamentoAtrasoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BeneficioPagamentoAtrasoResponse()
                instance.dataBeneficio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataBeneficio"])
                return instance
            }
			

			// Decoder for [BodyAccessToken]
            Decoders.addDecoder(clazz: [BodyAccessToken].self) { (source: AnyObject) -> [BodyAccessToken] in
                return Decoders.decode(clazz: [BodyAccessToken].self, source: source)
            }
			// Decoder for BodyAccessToken
            Decoders.addDecoder(clazz: BodyAccessToken.self) { (source: AnyObject) -> BodyAccessToken in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BodyAccessToken()
                instance.authToken = Decoders.decodeOptional(clazz: AuthToken.self, source: sourceDictionary["AuthToken"])
                instance.action = BodyAccessToken.Action(rawValue: (sourceDictionary["action"] as? String) ?? "") 
                instance.user = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["user"])
                return instance
            }
			

			// Decoder for [BoletoResponse]
            Decoders.addDecoder(clazz: [BoletoResponse].self) { (source: AnyObject) -> [BoletoResponse] in
                return Decoders.decode(clazz: [BoletoResponse].self, source: source)
            }
			// Decoder for BoletoResponse
            Decoders.addDecoder(clazz: BoletoResponse.self) { (source: AnyObject) -> BoletoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BoletoResponse()
                instance.numeroDoDocumento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroDoDocumento"])
                instance.dataProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataProcessamento"])
                instance.dataDocumento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataDocumento"])
                instance.dataVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimento"])
                instance.dataFechamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFechamento"])
                instance.valorBoleto = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorBoleto"])
                instance.nomeBeneficiario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeBeneficiario"])
                instance.documentoBeneficiario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["documentoBeneficiario"])
                instance.agencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["agencia"])
                instance.codigoBeneficiario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoBeneficiario"])
                instance.numeroConvenio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroConvenio"])
                instance.digitoCodigoBeneficiario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoCodigoBeneficiario"])
                instance.carteira = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carteira"])
                instance.nossoNumero = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nossoNumero"])
                instance.digitoNossoNumero = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoNossoNumero"])
                instance.banco = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["banco"])
                instance.aceite = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["aceite"])
                instance.especieDoDocumento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["especieDoDocumento"])
                instance.especie = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["especie"])
                instance.instrucoes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["instrucoes"])
                instance.locaisDePagamento = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["locaisDePagamento"])
                instance.nomePagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePagador"])
                instance.documentoPagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["documentoPagador"])
                instance.logradouroPagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["logradouroPagador"])
                instance.bairroPagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairroPagador"])
                instance.cepPagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cepPagador"])
                instance.cidadePagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidadePagador"])
                instance.ufPagador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ufPagador"])
                instance.codigoDeBarras = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoDeBarras"])
                instance.linhaDigitavel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["linhaDigitavel"])
                return instance
            }
			

			// Decoder for [CampanhaPersist]
            Decoders.addDecoder(clazz: [CampanhaPersist].self) { (source: AnyObject) -> [CampanhaPersist] in
                return Decoders.decode(clazz: [CampanhaPersist].self, source: source)
            }
			// Decoder for CampanhaPersist
            Decoders.addDecoder(clazz: CampanhaPersist.self) { (source: AnyObject) -> CampanhaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CampanhaPersist()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.idTipoCampanha = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoCampanha"])
                instance.planosCampanhas = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["planosCampanhas"])
                return instance
            }
			

			// Decoder for [CampanhaResponse]
            Decoders.addDecoder(clazz: [CampanhaResponse].self) { (source: AnyObject) -> [CampanhaResponse] in
                return Decoders.decode(clazz: [CampanhaResponse].self, source: source)
            }
			// Decoder for CampanhaResponse
            Decoders.addDecoder(clazz: CampanhaResponse.self) { (source: AnyObject) -> CampanhaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CampanhaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.idTipoCampanha = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoCampanha"])
                instance.planosCampanhas = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["planosCampanhas"])
                return instance
            }
			

			// Decoder for [CampanhaUpdate]
            Decoders.addDecoder(clazz: [CampanhaUpdate].self) { (source: AnyObject) -> [CampanhaUpdate] in
                return Decoders.decode(clazz: [CampanhaUpdate].self, source: source)
            }
			// Decoder for CampanhaUpdate
            Decoders.addDecoder(clazz: CampanhaUpdate.self) { (source: AnyObject) -> CampanhaUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CampanhaUpdate()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.idTipoCampanha = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoCampanha"])
                instance.planosCampanhas = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["planosCampanhas"])
                return instance
            }
			

			// Decoder for [CampoCodificadoDescricaoResponse]
            Decoders.addDecoder(clazz: [CampoCodificadoDescricaoResponse].self) { (source: AnyObject) -> [CampoCodificadoDescricaoResponse] in
                return Decoders.decode(clazz: [CampoCodificadoDescricaoResponse].self, source: source)
            }
			// Decoder for CampoCodificadoDescricaoResponse
            Decoders.addDecoder(clazz: CampoCodificadoDescricaoResponse.self) { (source: AnyObject) -> CampoCodificadoDescricaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CampoCodificadoDescricaoResponse()
                instance.codigo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigo"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                return instance
            }
			

			// Decoder for [CancelamentoTransacaoOnUsRequest]
            Decoders.addDecoder(clazz: [CancelamentoTransacaoOnUsRequest].self) { (source: AnyObject) -> [CancelamentoTransacaoOnUsRequest] in
                return Decoders.decode(clazz: [CancelamentoTransacaoOnUsRequest].self, source: source)
            }
			// Decoder for CancelamentoTransacaoOnUsRequest
            Decoders.addDecoder(clazz: CancelamentoTransacaoOnUsRequest.self) { (source: AnyObject) -> CancelamentoTransacaoOnUsRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CancelamentoTransacaoOnUsRequest()
                instance.nsuAutorizacaoTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuAutorizacaoTransacaoCancelada"])
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.nsuOrigemTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigemTransacaoCancelada"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.dataHoraTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTransacaoCancelada"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroRealCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroRealCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.dataHoraTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTerminal"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                return instance
            }
			

			// Decoder for [CancelamentoTransacaoPorIdCartaoRequest]
            Decoders.addDecoder(clazz: [CancelamentoTransacaoPorIdCartaoRequest].self) { (source: AnyObject) -> [CancelamentoTransacaoPorIdCartaoRequest] in
                return Decoders.decode(clazz: [CancelamentoTransacaoPorIdCartaoRequest].self, source: source)
            }
			// Decoder for CancelamentoTransacaoPorIdCartaoRequest
            Decoders.addDecoder(clazz: CancelamentoTransacaoPorIdCartaoRequest.self) { (source: AnyObject) -> CancelamentoTransacaoPorIdCartaoRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CancelamentoTransacaoPorIdCartaoRequest()
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.nsuOrigemTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigemTransacaoCancelada"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.dataHoraTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTransacaoCancelada"])
                instance.nsuAutorizacaoTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuAutorizacaoTransacaoCancelada"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.dataHoraTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTerminal"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                return instance
            }
			

			// Decoder for [CartaoDetalheResponse]
            Decoders.addDecoder(clazz: [CartaoDetalheResponse].self) { (source: AnyObject) -> [CartaoDetalheResponse] in
                return Decoders.decode(clazz: [CartaoDetalheResponse].self, source: source)
            }
			// Decoder for CartaoDetalheResponse
            Decoders.addDecoder(clazz: CartaoDetalheResponse.self) { (source: AnyObject) -> CartaoDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoDetalheResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.flagTitular = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagTitular"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.sequencialCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["sequencialCartao"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idStatus = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatus"])
                instance.dataStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataStatus"])
                instance.idEstagio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstagio"])
                instance.dataEstagio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEstagio"])
                instance.numeroBin = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroBin"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.numeroCartaoHash = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroCartaoHash"])
                instance.numeroCartaoCriptografado = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartaoCriptografado"])
                instance.dataEmissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.cartaoVirtual = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["cartaoVirtual"])
                instance.impressaoAvulsa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["impressaoAvulsa"])
                instance.dataImpressao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataImpressao"])
                instance.nomeArquivoImpressao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeArquivoImpressao"])
                instance.descricaoTipoCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoCartao"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.tipoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["tipoCartao"])
                instance.codigoDesbloqueio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoDesbloqueio"])
                return instance
            }
			

			// Decoder for [CartaoEmbossingRequest]
            Decoders.addDecoder(clazz: [CartaoEmbossingRequest].self) { (source: AnyObject) -> [CartaoEmbossingRequest] in
                return Decoders.decode(clazz: [CartaoEmbossingRequest].self, source: source)
            }
			// Decoder for CartaoEmbossingRequest
            Decoders.addDecoder(clazz: CartaoEmbossingRequest.self) { (source: AnyObject) -> CartaoEmbossingRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoEmbossingRequest()
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id_pessoa"])
                instance.idTipoPlastico = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id_tipo_plastico"])
                return instance
            }
			

			// Decoder for [CartaoEmbossingResponse]
            Decoders.addDecoder(clazz: [CartaoEmbossingResponse].self) { (source: AnyObject) -> [CartaoEmbossingResponse] in
                return Decoders.decode(clazz: [CartaoEmbossingResponse].self, source: source)
            }
			// Decoder for CartaoEmbossingResponse
            Decoders.addDecoder(clazz: CartaoEmbossingResponse.self) { (source: AnyObject) -> CartaoEmbossingResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoEmbossingResponse()
                instance.flagVirtual = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagVirtual"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idBandeira = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idBandeira"])
                instance.idTipoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoCartao"])
                instance.dataGeracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataGeracao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.nomeOrigemComercial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeOrigemComercial"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                return instance
            }
			

			// Decoder for [CartaoImpressaoProvisorioResponse]
            Decoders.addDecoder(clazz: [CartaoImpressaoProvisorioResponse].self) { (source: AnyObject) -> [CartaoImpressaoProvisorioResponse] in
                return Decoders.decode(clazz: [CartaoImpressaoProvisorioResponse].self, source: source)
            }
			// Decoder for CartaoImpressaoProvisorioResponse
            Decoders.addDecoder(clazz: CartaoImpressaoProvisorioResponse.self) { (source: AnyObject) -> CartaoImpressaoProvisorioResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoImpressaoProvisorioResponse()
                instance.flagVirtual = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagVirtual"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.nomePlastico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePlastico"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                return instance
            }
			

			// Decoder for [CartaoImpressaoResponse]
            Decoders.addDecoder(clazz: [CartaoImpressaoResponse].self) { (source: AnyObject) -> [CartaoImpressaoResponse] in
                return Decoders.decode(clazz: [CartaoImpressaoResponse].self, source: source)
            }
			// Decoder for CartaoImpressaoResponse
            Decoders.addDecoder(clazz: CartaoImpressaoResponse.self) { (source: AnyObject) -> CartaoImpressaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoImpressaoResponse()
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idBandeira = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idBandeira"])
                instance.idTipoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoCartao"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.nomePlastico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePlastico"])
                instance.cvv2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cvv2"])
                instance.dataGeracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataGeracao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.nomeOrigemComercial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeOrigemComercial"])
                instance.nomeEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpresa"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorente"])
                instance.nomeEmpresaBeneficio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpresaBeneficio"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.tipoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoPortador"])
                instance.nomeEmpregador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpregador"])
                instance.trilha1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilha1"])
                instance.trilha2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilha2"])
                instance.trilhaCVV1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilhaCVV1"])
                instance.trilhaCVV2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilhaCVV2"])
                instance.flagVirtual = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagVirtual"])
                instance.numeroCartaoHash = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroCartaoHash"])
                return instance
            }
			

			// Decoder for [CartaoPayAtualizarChaveResponse]
            Decoders.addDecoder(clazz: [CartaoPayAtualizarChaveResponse].self) { (source: AnyObject) -> [CartaoPayAtualizarChaveResponse] in
                return Decoders.decode(clazz: [CartaoPayAtualizarChaveResponse].self, source: source)
            }
			// Decoder for CartaoPayAtualizarChaveResponse
            Decoders.addDecoder(clazz: CartaoPayAtualizarChaveResponse.self) { (source: AnyObject) -> CartaoPayAtualizarChaveResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoPayAtualizarChaveResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.idEntidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEntidade"])
                instance.nomeEntidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEntidade"])
                instance.status = CartaoPayAtualizarChaveResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.chaveCriptograma = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chaveCriptograma"])
                return instance
            }
			

			// Decoder for [CartaoPayCadastroResponse]
            Decoders.addDecoder(clazz: [CartaoPayCadastroResponse].self) { (source: AnyObject) -> [CartaoPayCadastroResponse] in
                return Decoders.decode(clazz: [CartaoPayCadastroResponse].self, source: source)
            }
			// Decoder for CartaoPayCadastroResponse
            Decoders.addDecoder(clazz: CartaoPayCadastroResponse.self) { (source: AnyObject) -> CartaoPayCadastroResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoPayCadastroResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.idEntidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEntidade"])
                instance.nomeEntidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEntidade"])
                instance.status = CartaoPayCadastroResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.dataValidadeChaveCriptograma = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeChaveCriptograma"])
                instance.cvv = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cvv"])
                instance.chaveCriptograma = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chaveCriptograma"])
                return instance
            }
			

			// Decoder for [CartaoPayConfirmarChaveResponse]
            Decoders.addDecoder(clazz: [CartaoPayConfirmarChaveResponse].self) { (source: AnyObject) -> [CartaoPayConfirmarChaveResponse] in
                return Decoders.decode(clazz: [CartaoPayConfirmarChaveResponse].self, source: source)
            }
			// Decoder for CartaoPayConfirmarChaveResponse
            Decoders.addDecoder(clazz: CartaoPayConfirmarChaveResponse.self) { (source: AnyObject) -> CartaoPayConfirmarChaveResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoPayConfirmarChaveResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.idEntidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEntidade"])
                instance.nomeEntidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEntidade"])
                instance.status = CartaoPayConfirmarChaveResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.dataValidadeChaveCriptograma = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeChaveCriptograma"])
                instance.chaveCriptograma = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chaveCriptograma"])
                return instance
            }
			

			// Decoder for [CartaoPayDetalheResponse]
            Decoders.addDecoder(clazz: [CartaoPayDetalheResponse].self) { (source: AnyObject) -> [CartaoPayDetalheResponse] in
                return Decoders.decode(clazz: [CartaoPayDetalheResponse].self, source: source)
            }
			// Decoder for CartaoPayDetalheResponse
            Decoders.addDecoder(clazz: CartaoPayDetalheResponse.self) { (source: AnyObject) -> CartaoPayDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoPayDetalheResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.idEntidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEntidade"])
                instance.nomeEntidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEntidade"])
                instance.status = CartaoPayDetalheResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.cvv = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cvv"])
                instance.dataValidadeChaveCriptograma = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeChaveCriptograma"])
                return instance
            }
			

			// Decoder for [CartaoPayKeyUpdate]
            Decoders.addDecoder(clazz: [CartaoPayKeyUpdate].self) { (source: AnyObject) -> [CartaoPayKeyUpdate] in
                return Decoders.decode(clazz: [CartaoPayKeyUpdate].self, source: source)
            }
			// Decoder for CartaoPayKeyUpdate
            Decoders.addDecoder(clazz: CartaoPayKeyUpdate.self) { (source: AnyObject) -> CartaoPayKeyUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoPayKeyUpdate()
                instance.chaveCriptograma = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chaveCriptograma"])
                return instance
            }
			

			// Decoder for [CartaoPayPersist]
            Decoders.addDecoder(clazz: [CartaoPayPersist].self) { (source: AnyObject) -> [CartaoPayPersist] in
                return Decoders.decode(clazz: [CartaoPayPersist].self, source: source)
            }
			// Decoder for CartaoPayPersist
            Decoders.addDecoder(clazz: CartaoPayPersist.self) { (source: AnyObject) -> CartaoPayPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoPayPersist()
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.cvv = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cvv"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.chavePublicaDevice = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chavePublicaDevice"])
                return instance
            }
			

			// Decoder for [CartaoPayResponse]
            Decoders.addDecoder(clazz: [CartaoPayResponse].self) { (source: AnyObject) -> [CartaoPayResponse] in
                return Decoders.decode(clazz: [CartaoPayResponse].self, source: source)
            }
			// Decoder for CartaoPayResponse
            Decoders.addDecoder(clazz: CartaoPayResponse.self) { (source: AnyObject) -> CartaoPayResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoPayResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.idEntidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEntidade"])
                instance.nomeEntidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEntidade"])
                instance.status = CartaoPayResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.dataValidadeChaveCriptograma = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeChaveCriptograma"])
                return instance
            }
			

			// Decoder for [CartaoPayUpdate]
            Decoders.addDecoder(clazz: [CartaoPayUpdate].self) { (source: AnyObject) -> [CartaoPayUpdate] in
                return Decoders.decode(clazz: [CartaoPayUpdate].self, source: source)
            }
			// Decoder for CartaoPayUpdate
            Decoders.addDecoder(clazz: CartaoPayUpdate.self) { (source: AnyObject) -> CartaoPayUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoPayUpdate()
                instance.status = CartaoPayUpdate.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [CartaoResponse]
            Decoders.addDecoder(clazz: [CartaoResponse].self) { (source: AnyObject) -> [CartaoResponse] in
                return Decoders.decode(clazz: [CartaoResponse].self, source: source)
            }
			// Decoder for CartaoResponse
            Decoders.addDecoder(clazz: CartaoResponse.self) { (source: AnyObject) -> CartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartaoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.flagTitular = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagTitular"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.sequencialCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["sequencialCartao"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idStatus = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatus"])
                instance.dataStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataStatus"])
                instance.idEstagio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstagio"])
                instance.dataEstagio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEstagio"])
                instance.numeroBin = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroBin"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.numeroCartaoHash = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroCartaoHash"])
                instance.numeroCartaoCriptografado = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartaoCriptografado"])
                instance.dataEmissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.cartaoVirtual = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["cartaoVirtual"])
                instance.impressaoAvulsa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["impressaoAvulsa"])
                instance.dataImpressao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataImpressao"])
                instance.nomeArquivoImpressao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeArquivoImpressao"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.codigoDesbloqueio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoDesbloqueio"])
                return instance
            }
			

			// Decoder for [CdtDetalheOportunidadeAUD]
            Decoders.addDecoder(clazz: [CdtDetalheOportunidadeAUD].self) { (source: AnyObject) -> [CdtDetalheOportunidadeAUD] in
                return Decoders.decode(clazz: [CdtDetalheOportunidadeAUD].self, source: source)
            }
			// Decoder for CdtDetalheOportunidadeAUD
            Decoders.addDecoder(clazz: CdtDetalheOportunidadeAUD.self) { (source: AnyObject) -> CdtDetalheOportunidadeAUD in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CdtDetalheOportunidadeAUD()
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOportunidade"])
                instance.nomeCampo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCampo"])
                instance.rev = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["rev"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.revOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revOportunidade"])
                instance.revType = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revType"])
                instance.revUser = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revUser"])
                return instance
            }
			

			// Decoder for [CodigoSegurancaEMAILPersist]
            Decoders.addDecoder(clazz: [CodigoSegurancaEMAILPersist].self) { (source: AnyObject) -> [CodigoSegurancaEMAILPersist] in
                return Decoders.decode(clazz: [CodigoSegurancaEMAILPersist].self, source: source)
            }
			// Decoder for CodigoSegurancaEMAILPersist
            Decoders.addDecoder(clazz: CodigoSegurancaEMAILPersist.self) { (source: AnyObject) -> CodigoSegurancaEMAILPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CodigoSegurancaEMAILPersist()
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.codigoSeguranca = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoSeguranca"])
                return instance
            }
			

			// Decoder for [CodigoSegurancaResponse]
            Decoders.addDecoder(clazz: [CodigoSegurancaResponse].self) { (source: AnyObject) -> [CodigoSegurancaResponse] in
                return Decoders.decode(clazz: [CodigoSegurancaResponse].self, source: source)
            }
			// Decoder for CodigoSegurancaResponse
            Decoders.addDecoder(clazz: CodigoSegurancaResponse.self) { (source: AnyObject) -> CodigoSegurancaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CodigoSegurancaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.modoEnvio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["modoEnvio"])
                instance.contato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["contato"])
                instance.ativo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["ativo"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                return instance
            }
			

			// Decoder for [CodigoSegurancaSMSPersist]
            Decoders.addDecoder(clazz: [CodigoSegurancaSMSPersist].self) { (source: AnyObject) -> [CodigoSegurancaSMSPersist] in
                return Decoders.decode(clazz: [CodigoSegurancaSMSPersist].self, source: source)
            }
			// Decoder for CodigoSegurancaSMSPersist
            Decoders.addDecoder(clazz: CodigoSegurancaSMSPersist.self) { (source: AnyObject) -> CodigoSegurancaSMSPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CodigoSegurancaSMSPersist()
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                return instance
            }
			

			// Decoder for [CodigoSegurancaSMSRequest]
            Decoders.addDecoder(clazz: [CodigoSegurancaSMSRequest].self) { (source: AnyObject) -> [CodigoSegurancaSMSRequest] in
                return Decoders.decode(clazz: [CodigoSegurancaSMSRequest].self, source: source)
            }
			// Decoder for CodigoSegurancaSMSRequest
            Decoders.addDecoder(clazz: CodigoSegurancaSMSRequest.self) { (source: AnyObject) -> CodigoSegurancaSMSRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CodigoSegurancaSMSRequest()
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.codigoSeguranca = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoSeguranca"])
                return instance
            }
			

			// Decoder for [CompraResponse]
            Decoders.addDecoder(clazz: [CompraResponse].self) { (source: AnyObject) -> [CompraResponse] in
                return Decoders.decode(clazz: [CompraResponse].self, source: source)
            }
			// Decoder for CompraResponse
            Decoders.addDecoder(clazz: CompraResponse.self) { (source: AnyObject) -> CompraResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CompraResponse()
                instance.mcc = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["mcc"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.idCompra = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCompra"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.dataCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCompra"])
                instance.valorTotalCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalCompra"])
                instance.valorParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcela"])
                instance.primeiraParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["primeiraParcela"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.numeroParcelasAntecipaveis = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelasAntecipaveis"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                instance.tipoOrigemTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoOrigemTransacao"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                instance.latitude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["latitude"])
                instance.longitude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["longitude"])
                instance.idGrupoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idGrupoMCC"])
                instance.descricaoGrupoMCC = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoGrupoMCC"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.descricaoProduto = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoProduto"])
                instance.cartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cartao"])
                instance.nomePortadorCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePortadorCartao"])
                return instance
            }
			

			// Decoder for [ConfiguracaoEmailPersist]
            Decoders.addDecoder(clazz: [ConfiguracaoEmailPersist].self) { (source: AnyObject) -> [ConfiguracaoEmailPersist] in
                return Decoders.decode(clazz: [ConfiguracaoEmailPersist].self, source: source)
            }
			// Decoder for ConfiguracaoEmailPersist
            Decoders.addDecoder(clazz: ConfiguracaoEmailPersist.self) { (source: AnyObject) -> ConfiguracaoEmailPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConfiguracaoEmailPersist()
                instance.host = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["host"])
                instance.port = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["port"])
                instance.portTLSSTARTTLS = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["portTLSSTARTTLS"])
                instance.portSSL = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["portSSL"])
                instance.protocolo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["protocolo"])
                instance.requerAutenticacao = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["requerAutenticacao"])
                instance.requerSSL = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["requerSSL"])
                instance.requerTLS = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["requerTLS"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                return instance
            }
			

			// Decoder for [ConfiguracaoEmailResponse]
            Decoders.addDecoder(clazz: [ConfiguracaoEmailResponse].self) { (source: AnyObject) -> [ConfiguracaoEmailResponse] in
                return Decoders.decode(clazz: [ConfiguracaoEmailResponse].self, source: source)
            }
			// Decoder for ConfiguracaoEmailResponse
            Decoders.addDecoder(clazz: ConfiguracaoEmailResponse.self) { (source: AnyObject) -> ConfiguracaoEmailResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConfiguracaoEmailResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.host = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["host"])
                instance.port = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["port"])
                instance.portTLSSTARTTLS = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["portTLSSTARTTLS"])
                instance.portSSL = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["portSSL"])
                instance.protocolo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["protocolo"])
                instance.requerAutenticacao = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["requerAutenticacao"])
                instance.requerSSL = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["requerSSL"])
                instance.requerTLS = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["requerTLS"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                instance.dataInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInclusao"])
                instance.dataAlteracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAlteracao"])
                return instance
            }
			

			// Decoder for [ConfiguracaoRegistroCobrancaPersist]
            Decoders.addDecoder(clazz: [ConfiguracaoRegistroCobrancaPersist].self) { (source: AnyObject) -> [ConfiguracaoRegistroCobrancaPersist] in
                return Decoders.decode(clazz: [ConfiguracaoRegistroCobrancaPersist].self, source: source)
            }
			// Decoder for ConfiguracaoRegistroCobrancaPersist
            Decoders.addDecoder(clazz: ConfiguracaoRegistroCobrancaPersist.self) { (source: AnyObject) -> ConfiguracaoRegistroCobrancaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConfiguracaoRegistroCobrancaPersist()
                instance.codigoBanco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoBanco"])
                instance.uri = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uri"])
                instance.keyStoreName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["keyStoreName"])
                instance.keyStorePassword = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["keyStorePassword"])
                instance.keystoreAlias = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["keystoreAlias"])
                instance.keyStorePrivateKeyPassword = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["keyStorePrivateKeyPassword"])
                instance.typeKeystore = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["typeKeystore"])
                instance.trustStoreName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trustStoreName"])
                instance.trustStorePassword = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trustStorePassword"])
                instance.truststoreAlias = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["truststoreAlias"])
                instance.typeTruststore = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["typeTruststore"])
                instance.uriAdicional = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uriAdicional"])
                instance.status = ConfiguracaoRegistroCobrancaPersist.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [ConfiguracaoRegistroCobrancaResponse]
            Decoders.addDecoder(clazz: [ConfiguracaoRegistroCobrancaResponse].self) { (source: AnyObject) -> [ConfiguracaoRegistroCobrancaResponse] in
                return Decoders.decode(clazz: [ConfiguracaoRegistroCobrancaResponse].self, source: source)
            }
			// Decoder for ConfiguracaoRegistroCobrancaResponse
            Decoders.addDecoder(clazz: ConfiguracaoRegistroCobrancaResponse.self) { (source: AnyObject) -> ConfiguracaoRegistroCobrancaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConfiguracaoRegistroCobrancaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.codigoBanco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoBanco"])
                instance.uri = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uri"])
                instance.keyStoreName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["keyStoreName"])
                instance.keyStorePassword = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["keyStorePassword"])
                instance.keystoreAlias = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["keystoreAlias"])
                instance.keyStorePrivateKeyPassword = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["keyStorePrivateKeyPassword"])
                instance.typeKeystore = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["typeKeystore"])
                instance.trustStoreName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trustStoreName"])
                instance.trustStorePassword = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trustStorePassword"])
                instance.truststoreAlias = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["truststoreAlias"])
                instance.typeTruststore = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["typeTruststore"])
                instance.uriAdicional = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uriAdicional"])
                instance.status = ConfiguracaoRegistroCobrancaResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [ConfiguracaoRotativoDetalheResponse]
            Decoders.addDecoder(clazz: [ConfiguracaoRotativoDetalheResponse].self) { (source: AnyObject) -> [ConfiguracaoRotativoDetalheResponse] in
                return Decoders.decode(clazz: [ConfiguracaoRotativoDetalheResponse].self, source: source)
            }
			// Decoder for ConfiguracaoRotativoDetalheResponse
            Decoders.addDecoder(clazz: ConfiguracaoRotativoDetalheResponse.self) { (source: AnyObject) -> ConfiguracaoRotativoDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConfiguracaoRotativoDetalheResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.compoeOfertaValorRotativo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["compoeOfertaValorRotativo"])
                instance.compoeOfertaValorNaoFinanciavel = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["compoeOfertaValorNaoFinanciavel"])
                instance.compoeOfertaValorNovosLancamentos = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["compoeOfertaValorNovosLancamentos"])
                instance.recalculaParcelamentoParaEntradaMaior = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["recalculaParcelamentoParaEntradaMaior"])
                instance.minimoParcelasRecalculoParcelamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["minimoParcelasRecalculoParcelamento"])
                instance.recalculaParcelamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["recalculaParcelamento"])
                instance.numeroMinimoOfertas = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["numeroMinimoOfertas"])
                instance.aceitaPagamentoMaiorQueEntrada = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["aceitaPagamentoMaiorQueEntrada"])
                instance.antecipaParcelamentosAbertos = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["antecipaParcelamentosAbertos"])
                instance.valorMinimoParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorMinimoParcela"])
                instance.percentualLimitarValorMinimoParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["percentualLimitarValorMinimoParcela"])
                instance.idRegraCampanha = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idRegraCampanha"])
                instance.parcelarApenasMinimo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["parcelarApenasMinimo"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                return instance
            }
			

			// Decoder for [ConfiguracaoRotativoPersist]
            Decoders.addDecoder(clazz: [ConfiguracaoRotativoPersist].self) { (source: AnyObject) -> [ConfiguracaoRotativoPersist] in
                return Decoders.decode(clazz: [ConfiguracaoRotativoPersist].self, source: source)
            }
			// Decoder for ConfiguracaoRotativoPersist
            Decoders.addDecoder(clazz: ConfiguracaoRotativoPersist.self) { (source: AnyObject) -> ConfiguracaoRotativoPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConfiguracaoRotativoPersist()
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.compoeOfertaValorRotativo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["compoeOfertaValorRotativo"])
                instance.compoeOfertaValorNaoFinanciavel = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["compoeOfertaValorNaoFinanciavel"])
                instance.compoeOfertaValorNovosLancamentos = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["compoeOfertaValorNovosLancamentos"])
                instance.recalculaParcelamentoParaEntradaMaior = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["recalculaParcelamentoParaEntradaMaior"])
                instance.minimoParcelasRecalculoParcelamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["minimoParcelasRecalculoParcelamento"])
                instance.recalculaParcelamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["recalculaParcelamento"])
                instance.numeroMinimoOfertas = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["numeroMinimoOfertas"])
                instance.aceitaPagamentoMaiorQueEntrada = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["aceitaPagamentoMaiorQueEntrada"])
                instance.antecipaParcelamentosAbertos = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["antecipaParcelamentosAbertos"])
                instance.valorMinimoParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorMinimoParcela"])
                instance.percentualLimitarValorMinimoParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["percentualLimitarValorMinimoParcela"])
                instance.idRegraCampanha = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idRegraCampanha"])
                instance.parcelarApenasMinimo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["parcelarApenasMinimo"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                return instance
            }
			

			// Decoder for [ConsultaCadastroEstabelecimentoDTO]
            Decoders.addDecoder(clazz: [ConsultaCadastroEstabelecimentoDTO].self) { (source: AnyObject) -> [ConsultaCadastroEstabelecimentoDTO] in
                return Decoders.decode(clazz: [ConsultaCadastroEstabelecimentoDTO].self, source: source)
            }
			// Decoder for ConsultaCadastroEstabelecimentoDTO
            Decoders.addDecoder(clazz: ConsultaCadastroEstabelecimentoDTO.self) { (source: AnyObject) -> ConsultaCadastroEstabelecimentoDTO in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ConsultaCadastroEstabelecimentoDTO()
                instance.dataHoraConsulta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraConsulta"])
                instance.status = ConsultaCadastroEstabelecimentoDTO.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.tipoEntidade = ConsultaCadastroEstabelecimentoDTO.TipoEntidade(rawValue: (sourceDictionary["tipoEntidade"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [ContaBancariaPortadorPersist]
            Decoders.addDecoder(clazz: [ContaBancariaPortadorPersist].self) { (source: AnyObject) -> [ContaBancariaPortadorPersist] in
                return Decoders.decode(clazz: [ContaBancariaPortadorPersist].self, source: source)
            }
			// Decoder for ContaBancariaPortadorPersist
            Decoders.addDecoder(clazz: ContaBancariaPortadorPersist.self) { (source: AnyObject) -> ContaBancariaPortadorPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ContaBancariaPortadorPersist()
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.nomeAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeAgencia"])
                instance.banco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["banco"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroAgencia"])
                instance.digitoAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoAgencia"])
                instance.numeroConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroConta"])
                instance.digitoConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoConta"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagAtivo"])
                instance.flagContaOrigemDoc = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagContaOrigemDoc"])
                instance.idPessoaFisica = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoaFisica"])
                instance.flagContaPoupanca = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagContaPoupanca"])
                instance.favorecido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["favorecido"])
                instance.numeroReceiraFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceiraFederal"])
                instance.titularidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["titularidade"])
                return instance
            }
			

			// Decoder for [ContaBancariaPortadorResponse]
            Decoders.addDecoder(clazz: [ContaBancariaPortadorResponse].self) { (source: AnyObject) -> [ContaBancariaPortadorResponse] in
                return Decoders.decode(clazz: [ContaBancariaPortadorResponse].self, source: source)
            }
			// Decoder for ContaBancariaPortadorResponse
            Decoders.addDecoder(clazz: ContaBancariaPortadorResponse.self) { (source: AnyObject) -> ContaBancariaPortadorResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ContaBancariaPortadorResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.nomeAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeAgencia"])
                instance.banco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["banco"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroAgencia"])
                instance.digitoAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoAgencia"])
                instance.numeroConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroConta"])
                instance.digitoConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoConta"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagAtivo"])
                instance.flagContaOrigemDoc = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagContaOrigemDoc"])
                instance.idPessoaFisica = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoaFisica"])
                instance.flagContaPoupanca = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagContaPoupanca"])
                instance.favorecido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["favorecido"])
                instance.numeroReceiraFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceiraFederal"])
                instance.titularidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["titularidade"])
                return instance
            }
			

			// Decoder for [ContaBancariaPortadorUpdate]
            Decoders.addDecoder(clazz: [ContaBancariaPortadorUpdate].self) { (source: AnyObject) -> [ContaBancariaPortadorUpdate] in
                return Decoders.decode(clazz: [ContaBancariaPortadorUpdate].self, source: source)
            }
			// Decoder for ContaBancariaPortadorUpdate
            Decoders.addDecoder(clazz: ContaBancariaPortadorUpdate.self) { (source: AnyObject) -> ContaBancariaPortadorUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ContaBancariaPortadorUpdate()
                instance.nomeAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeAgencia"])
                instance.banco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["banco"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroAgencia"])
                instance.digitoAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoAgencia"])
                instance.numeroConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroConta"])
                instance.digitoConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoConta"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagAtivo"])
                instance.flagContaOrigemDoc = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagContaOrigemDoc"])
                instance.flagContaPoupanca = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagContaPoupanca"])
                instance.favorecido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["favorecido"])
                instance.numeroReceiraFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceiraFederal"])
                instance.titularidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["titularidade"])
                return instance
            }
			

			// Decoder for [ContaDetalheResponse]
            Decoders.addDecoder(clazz: [ContaDetalheResponse].self) { (source: AnyObject) -> [ContaDetalheResponse] in
                return Decoders.decode(clazz: [ContaDetalheResponse].self, source: source)
            }
			// Decoder for ContaDetalheResponse
            Decoders.addDecoder(clazz: ContaDetalheResponse.self) { (source: AnyObject) -> ContaDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ContaDetalheResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.nomeOrigemComercial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeOrigemComercial"])
                instance.idFantasiaBasica = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idFantasiaBasica"])
                instance.nomeFantasiaBasica = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasiaBasica"])
                instance.idStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusConta"])
                instance.statusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusConta"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.melhorDiaCompra = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["melhorDiaCompra"])
                instance.dataStatusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataStatusConta"])
                instance.valorRenda = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorRenda"])
                instance.dataCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastro"])
                instance.dataUltimaAlteracaoVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataUltimaAlteracaoVencimento"])
                instance.dataHoraUltimaCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraUltimaCompra"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.formaEnvioFatura = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["formaEnvioFatura"])
                instance.titular = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["titular"])
                instance.limiteGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobal"])
                instance.limiteSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaqueGlobal"])
                instance.saldoDisponivelGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelGlobal"])
                instance.saldoDisponivelSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaque"])
                instance.diasAtraso = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diasAtraso"])
                return instance
            }
			

			// Decoder for [ContaHistoricoPagamentoResponse]
            Decoders.addDecoder(clazz: [ContaHistoricoPagamentoResponse].self) { (source: AnyObject) -> [ContaHistoricoPagamentoResponse] in
                return Decoders.decode(clazz: [ContaHistoricoPagamentoResponse].self, source: source)
            }
			// Decoder for ContaHistoricoPagamentoResponse
            Decoders.addDecoder(clazz: ContaHistoricoPagamentoResponse.self) { (source: AnyObject) -> ContaHistoricoPagamentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ContaHistoricoPagamentoResponse()
                instance.idPagamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPagamento"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.idBanco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idBanco"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.valorPagamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamento"])
                instance.dataHoraPagamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraPagamento"])
                instance.dataHoraEntradaPagamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraEntradaPagamento"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [ContaResponse]
            Decoders.addDecoder(clazz: [ContaResponse].self) { (source: AnyObject) -> [ContaResponse] in
                return Decoders.decode(clazz: [ContaResponse].self, source: source)
            }
			// Decoder for ContaResponse
            Decoders.addDecoder(clazz: ContaResponse.self) { (source: AnyObject) -> ContaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ContaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusConta"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.melhorDiaCompra = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["melhorDiaCompra"])
                instance.dataStatusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataStatusConta"])
                instance.dataCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastro"])
                instance.dataUltimaAlteracaoVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataUltimaAlteracaoVencimento"])
                instance.valorRenda = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorRenda"])
                return instance
            }
			

			// Decoder for [ControleVencimentoResponse]
            Decoders.addDecoder(clazz: [ControleVencimentoResponse].self) { (source: AnyObject) -> [ControleVencimentoResponse] in
                return Decoders.decode(clazz: [ControleVencimentoResponse].self, source: source)
            }
			// Decoder for ControleVencimentoResponse
            Decoders.addDecoder(clazz: ControleVencimentoResponse.self) { (source: AnyObject) -> ControleVencimentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ControleVencimentoResponse()
                instance.dataVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimento"])
                instance.dataPrevistaCorte = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataPrevistaCorte"])
                instance.dataHoraRealizacaoCorte = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraRealizacaoCorte"])
                instance.dataPrevistaFaturamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataPrevistaFaturamento"])
                instance.dataHoraRealizacaoFaturamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraRealizacaoFaturamento"])
                instance.dataRealVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataRealVencimento"])
                return instance
            }
			

			// Decoder for [DadosCartaoImpressaoResponse]
            Decoders.addDecoder(clazz: [DadosCartaoImpressaoResponse].self) { (source: AnyObject) -> [DadosCartaoImpressaoResponse] in
                return Decoders.decode(clazz: [DadosCartaoImpressaoResponse].self, source: source)
            }
			// Decoder for DadosCartaoImpressaoResponse
            Decoders.addDecoder(clazz: DadosCartaoImpressaoResponse.self) { (source: AnyObject) -> DadosCartaoImpressaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DadosCartaoImpressaoResponse()
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idBandeira = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idBandeira"])
                instance.idTipoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoCartao"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.nomePlastico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePlastico"])
                instance.cvv2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cvv2"])
                instance.dataGeracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataGeracao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.tipoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoPortador"])
                instance.trilha1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilha1"])
                instance.trilha2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilha2"])
                instance.trilhaCVV1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilhaCVV1"])
                instance.trilhaCVV2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trilhaCVV2"])
                instance.flagVirtual = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagVirtual"])
                instance.nomeBandeira = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeBandeira"])
                instance.flagTitular = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagTitular"])
                instance.sequencialCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["sequencialCartao"])
                instance.idStatus = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatus"])
                instance.descricaoStatusCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoStatusCartao"])
                instance.dataStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataStatus"])
                instance.idEstagio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstagio"])
                instance.descricaoEstagio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoEstagio"])
                instance.dataEstagio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEstagio"])
                instance.numeroBin = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroBin"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.descricaoProduto = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoProduto"])
                instance.idStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusConta"])
                instance.descricaoStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["descricaoStatusConta"])
                instance.dataEmbossing = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmbossing"])
                instance.codigoDesbloqueio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoDesbloqueio"])
                instance.nomePessoa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePessoa"])
                instance.tipoPessoa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoPessoa"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.idEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEndereco"])
                instance.idTipoEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoEndereco"])
                instance.descricaoTipoEndereco = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoEndereco"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.logradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["logradouro"])
                instance.numeroEndereco = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroEndereco"])
                instance.complementoEndereco = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complementoEndereco"])
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                return instance
            }
			

			// Decoder for [DadosCartaoResponse]
            Decoders.addDecoder(clazz: [DadosCartaoResponse].self) { (source: AnyObject) -> [DadosCartaoResponse] in
                return Decoders.decode(clazz: [DadosCartaoResponse].self, source: source)
            }
			// Decoder for DadosCartaoResponse
            Decoders.addDecoder(clazz: DadosCartaoResponse.self) { (source: AnyObject) -> DadosCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DadosCartaoResponse()
                instance.flagVirtual = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagVirtual"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                instance.cvv2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cvv2"])
                instance.nomePlastico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePlastico"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorente"])
                instance.idStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusConta"])
                instance.statusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusConta"])
                instance.idStatusCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusCartao"])
                instance.statusCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusCartao"])
                return instance
            }
			

			// Decoder for [DesfazimentoTransacaoOnUsRequest]
            Decoders.addDecoder(clazz: [DesfazimentoTransacaoOnUsRequest].self) { (source: AnyObject) -> [DesfazimentoTransacaoOnUsRequest] in
                return Decoders.decode(clazz: [DesfazimentoTransacaoOnUsRequest].self, source: source)
            }
			// Decoder for DesfazimentoTransacaoOnUsRequest
            Decoders.addDecoder(clazz: DesfazimentoTransacaoOnUsRequest.self) { (source: AnyObject) -> DesfazimentoTransacaoOnUsRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DesfazimentoTransacaoOnUsRequest()
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.nsuOrigemTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigemTransacaoCancelada"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.dataHoraTransacaoCancelada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTransacaoCancelada"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroRealCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroRealCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.dataHoraTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTerminal"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                return instance
            }
			

			// Decoder for [DetalheOperacaoResponse]
            Decoders.addDecoder(clazz: [DetalheOperacaoResponse].self) { (source: AnyObject) -> [DetalheOperacaoResponse] in
                return Decoders.decode(clazz: [DetalheOperacaoResponse].self, source: source)
            }
			// Decoder for DetalheOperacaoResponse
            Decoders.addDecoder(clazz: DetalheOperacaoResponse.self) { (source: AnyObject) -> DetalheOperacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DetalheOperacaoResponse()
                instance.idOperacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOperacao"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.codigoProcessamentoCancelamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamentoCancelamento"])
                instance.nomeOperacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeOperacao"])
                instance.descricaoOperacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoOperacao"])
                instance.planoMinimo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoMinimo"])
                instance.planoMaximo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoMaximo"])
                instance.valorMinimo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorMinimo"])
                instance.valorMaximo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorMaximo"])
                instance.flagCobraJuros = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCobraJuros"])
                instance.taxaJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaJuros"])
                instance.flagCobraTarifa = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCobraTarifa"])
                instance.taxaTarifa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaTarifa"])
                instance.valorTac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTac"])
                instance.percentualTac = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["percentualTac"])
                instance.valorOperacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorOperacao"])
                instance.carencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["carencia"])
                instance.excedentePermitido = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["excedentePermitido"])
                instance.flagPermitirParcelamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagPermitirParcelamento"])
                return instance
            }
			

			// Decoder for [DetalheOportunidadePersist]
            Decoders.addDecoder(clazz: [DetalheOportunidadePersist].self) { (source: AnyObject) -> [DetalheOportunidadePersist] in
                return Decoders.decode(clazz: [DetalheOportunidadePersist].self, source: source)
            }
			// Decoder for DetalheOportunidadePersist
            Decoders.addDecoder(clazz: DetalheOportunidadePersist.self) { (source: AnyObject) -> DetalheOportunidadePersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DetalheOportunidadePersist()
                instance.nomeCampo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCampo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                return instance
            }
			

			// Decoder for [DetalheOportunidadeResponse]
            Decoders.addDecoder(clazz: [DetalheOportunidadeResponse].self) { (source: AnyObject) -> [DetalheOportunidadeResponse] in
                return Decoders.decode(clazz: [DetalheOportunidadeResponse].self, source: source)
            }
			// Decoder for DetalheOportunidadeResponse
            Decoders.addDecoder(clazz: DetalheOportunidadeResponse.self) { (source: AnyObject) -> DetalheOportunidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DetalheOportunidadeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nomeCampo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCampo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                return instance
            }
			

			// Decoder for [DetalheOportunidadeUpdate]
            Decoders.addDecoder(clazz: [DetalheOportunidadeUpdate].self) { (source: AnyObject) -> [DetalheOportunidadeUpdate] in
                return Decoders.decode(clazz: [DetalheOportunidadeUpdate].self, source: source)
            }
			// Decoder for DetalheOportunidadeUpdate
            Decoders.addDecoder(clazz: DetalheOportunidadeUpdate.self) { (source: AnyObject) -> DetalheOportunidadeUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DetalheOportunidadeUpdate()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nomeCampo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCampo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                return instance
            }
			

			// Decoder for [DetalhesFaturaConsignadaResponse]
            Decoders.addDecoder(clazz: [DetalhesFaturaConsignadaResponse].self) { (source: AnyObject) -> [DetalhesFaturaConsignadaResponse] in
                return Decoders.decode(clazz: [DetalhesFaturaConsignadaResponse].self, source: source)
            }
			// Decoder for DetalhesFaturaConsignadaResponse
            Decoders.addDecoder(clazz: DetalhesFaturaConsignadaResponse.self) { (source: AnyObject) -> DetalhesFaturaConsignadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DetalhesFaturaConsignadaResponse()
                instance.faturaConsignadaResponse = Decoders.decodeOptional(clazz: FaturaConsignadaResponse.self, source: sourceDictionary["faturaConsignadaResponse"])
                instance.transacoes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["transacoes"])
                return instance
            }
			

			// Decoder for [DetalhesFaturaResponse]
            Decoders.addDecoder(clazz: [DetalhesFaturaResponse].self) { (source: AnyObject) -> [DetalhesFaturaResponse] in
                return Decoders.decode(clazz: [DetalhesFaturaResponse].self, source: source)
            }
			// Decoder for DetalhesFaturaResponse
            Decoders.addDecoder(clazz: DetalhesFaturaResponse.self) { (source: AnyObject) -> DetalhesFaturaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DetalhesFaturaResponse()
                instance.fatura = Decoders.decodeOptional(clazz: FaturaFechadaResponse.self, source: sourceDictionary["fatura"])
                instance.transacoes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["transacoes"])
                return instance
            }
			

			// Decoder for [DispositivoPersist]
            Decoders.addDecoder(clazz: [DispositivoPersist].self) { (source: AnyObject) -> [DispositivoPersist] in
                return Decoders.decode(clazz: [DispositivoPersist].self, source: source)
            }
			// Decoder for DispositivoPersist
            Decoders.addDecoder(clazz: DispositivoPersist.self) { (source: AnyObject) -> DispositivoPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DispositivoPersist()
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.idAplicacaoMobile = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAplicacaoMobile"])
                instance.idUsuario = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idUsuario"])
                return instance
            }
			

			// Decoder for [DispositivoResponse]
            Decoders.addDecoder(clazz: [DispositivoResponse].self) { (source: AnyObject) -> [DispositivoResponse] in
                return Decoders.decode(clazz: [DispositivoResponse].self, source: source)
            }
			// Decoder for DispositivoResponse
            Decoders.addDecoder(clazz: DispositivoResponse.self) { (source: AnyObject) -> DispositivoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DispositivoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.idAplicacaoMobile = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAplicacaoMobile"])
                instance.idUsuario = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idUsuario"])
                return instance
            }
			

			// Decoder for [DividaClienteResponse]
            Decoders.addDecoder(clazz: [DividaClienteResponse].self) { (source: AnyObject) -> [DividaClienteResponse] in
                return Decoders.decode(clazz: [DividaClienteResponse].self, source: source)
            }
			// Decoder for DividaClienteResponse
            Decoders.addDecoder(clazz: DividaClienteResponse.self) { (source: AnyObject) -> DividaClienteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DividaClienteResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.dataVencimentoFaturaAtraso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoFaturaAtraso"])
                instance.quantidadeDiasAtraso = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeDiasAtraso"])
                instance.dataVencimentoAcordo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoAcordo"])
                instance.quantidadeDiasAtrasoCorrigido = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeDiasAtrasoCorrigido"])
                instance.valorSaldoDevedor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorSaldoDevedor"])
                instance.taxaCorrecao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaCorrecao"])
                instance.valorCorrecao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorCorrecao"])
                instance.valorIOF = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorIOF"])
                instance.valorSaldoCorrigido = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorSaldoCorrigido"])
                instance.idStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusConta"])
                instance.descricaoStatusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoStatusConta"])
                instance.idStatusAcordo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusAcordo"])
                instance.descricaoStatusAcordo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoStatusAcordo"])
                instance.idEscritorioCobranca = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEscritorioCobranca"])
                instance.nomeEscritorioCobranca = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEscritorioCobranca"])
                instance.emailPessoaConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["emailPessoaConta"])
                return instance
            }
			

			// Decoder for [DocumentoDetalhadoResponse]
            Decoders.addDecoder(clazz: [DocumentoDetalhadoResponse].self) { (source: AnyObject) -> [DocumentoDetalhadoResponse] in
                return Decoders.decode(clazz: [DocumentoDetalhadoResponse].self, source: source)
            }
			// Decoder for DocumentoDetalhadoResponse
            Decoders.addDecoder(clazz: DocumentoDetalhadoResponse.self) { (source: AnyObject) -> DocumentoDetalhadoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DocumentoDetalhadoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTemplateDocumento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTemplateDocumento"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.documento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["documento"])
                instance.extensao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extensao"])
                instance.documentoDetalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["documentoDetalhes"])
                return instance
            }
			

			// Decoder for [DocumentoDetalheResponse]
            Decoders.addDecoder(clazz: [DocumentoDetalheResponse].self) { (source: AnyObject) -> [DocumentoDetalheResponse] in
                return Decoders.decode(clazz: [DocumentoDetalheResponse].self, source: source)
            }
			// Decoder for DocumentoDetalheResponse
            Decoders.addDecoder(clazz: DocumentoDetalheResponse.self) { (source: AnyObject) -> DocumentoDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DocumentoDetalheResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.propriedade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["propriedade"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                return instance
            }
			

			// Decoder for [DocumentoIntegracaoResponse]
            Decoders.addDecoder(clazz: [DocumentoIntegracaoResponse].self) { (source: AnyObject) -> [DocumentoIntegracaoResponse] in
                return Decoders.decode(clazz: [DocumentoIntegracaoResponse].self, source: source)
            }
			// Decoder for DocumentoIntegracaoResponse
            Decoders.addDecoder(clazz: DocumentoIntegracaoResponse.self) { (source: AnyObject) -> DocumentoIntegracaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DocumentoIntegracaoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTemplate = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTemplate"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [DocumentoParametrosRequest]
            Decoders.addDecoder(clazz: [DocumentoParametrosRequest].self) { (source: AnyObject) -> [DocumentoParametrosRequest] in
                return Decoders.decode(clazz: [DocumentoParametrosRequest].self, source: source)
            }
			// Decoder for DocumentoParametrosRequest
            Decoders.addDecoder(clazz: DocumentoParametrosRequest.self) { (source: AnyObject) -> DocumentoParametrosRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DocumentoParametrosRequest()
                instance.idTemplateDocumento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTemplateDocumento"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.parametrosConteudo = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["parametrosConteudo"])
                return instance
            }
			

			// Decoder for [DocumentoResponse]
            Decoders.addDecoder(clazz: [DocumentoResponse].self) { (source: AnyObject) -> [DocumentoResponse] in
                return Decoders.decode(clazz: [DocumentoResponse].self, source: source)
            }
			// Decoder for DocumentoResponse
            Decoders.addDecoder(clazz: DocumentoResponse.self) { (source: AnyObject) -> DocumentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DocumentoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTemplateDocumento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTemplateDocumento"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.extensao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extensao"])
                return instance
            }
			

			// Decoder for [DocumentoTemplatePersist]
            Decoders.addDecoder(clazz: [DocumentoTemplatePersist].self) { (source: AnyObject) -> [DocumentoTemplatePersist] in
                return Decoders.decode(clazz: [DocumentoTemplatePersist].self, source: source)
            }
			// Decoder for DocumentoTemplatePersist
            Decoders.addDecoder(clazz: DocumentoTemplatePersist.self) { (source: AnyObject) -> DocumentoTemplatePersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DocumentoTemplatePersist()
                instance.idTipoTemplate = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTemplate"])
                instance.template = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["template"])
                instance.integracoes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["integracoes"])
                return instance
            }
			

			// Decoder for [DocumentoTemplateResponse]
            Decoders.addDecoder(clazz: [DocumentoTemplateResponse].self) { (source: AnyObject) -> [DocumentoTemplateResponse] in
                return Decoders.decode(clazz: [DocumentoTemplateResponse].self, source: source)
            }
			// Decoder for DocumentoTemplateResponse
            Decoders.addDecoder(clazz: DocumentoTemplateResponse.self) { (source: AnyObject) -> DocumentoTemplateResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DocumentoTemplateResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoTemplate = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTemplate"])
                return instance
            }
			

			// Decoder for [EmprestimoPessoalRequest]
            Decoders.addDecoder(clazz: [EmprestimoPessoalRequest].self) { (source: AnyObject) -> [EmprestimoPessoalRequest] in
                return Decoders.decode(clazz: [EmprestimoPessoalRequest].self, source: source)
            }
			// Decoder for EmprestimoPessoalRequest
            Decoders.addDecoder(clazz: EmprestimoPessoalRequest.self) { (source: AnyObject) -> EmprestimoPessoalRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EmprestimoPessoalRequest()
                instance.valorSolicitado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorSolicitado"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.taxaJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaJuros"])
                instance.periodoTaxa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["periodoTaxa"])
                instance.sistemaAmortizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sistemaAmortizacao"])
                instance.numeroMesesCarencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroMesesCarencia"])
                return instance
            }
			

			// Decoder for [EmprestimoPessoalResponse]
            Decoders.addDecoder(clazz: [EmprestimoPessoalResponse].self) { (source: AnyObject) -> [EmprestimoPessoalResponse] in
                return Decoders.decode(clazz: [EmprestimoPessoalResponse].self, source: source)
            }
			// Decoder for EmprestimoPessoalResponse
            Decoders.addDecoder(clazz: EmprestimoPessoalResponse.self) { (source: AnyObject) -> EmprestimoPessoalResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EmprestimoPessoalResponse()
                instance.planosParcelamentos = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["planosParcelamentos"])
                instance.valorSolicitado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorSolicitado"])
                instance.valorMaximoSolicitacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorMaximoSolicitacao"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.valorMaximoParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorMaximoParcela"])
                instance.dataPrimeiraParcela = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataPrimeiraParcela"])
                instance.periodoTaxa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["periodoTaxa"])
                instance.sistemaAmortizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sistemaAmortizacao"])
                instance.taxaJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaJuros"])
                return instance
            }
			

			// Decoder for [EnderecoAprovadoPersist]
            Decoders.addDecoder(clazz: [EnderecoAprovadoPersist].self) { (source: AnyObject) -> [EnderecoAprovadoPersist] in
                return Decoders.decode(clazz: [EnderecoAprovadoPersist].self, source: source)
            }
			// Decoder for EnderecoAprovadoPersist
            Decoders.addDecoder(clazz: EnderecoAprovadoPersist.self) { (source: AnyObject) -> EnderecoAprovadoPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EnderecoAprovadoPersist()
                instance.idTipoEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoEndereco"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.logradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["logradouro"])
                instance.numero = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numero"])
                instance.complemento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento"])
                instance.pontoReferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pontoReferencia"])
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                instance.enderecoCorrespondencia = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["enderecoCorrespondencia"])
                return instance
            }
			

			// Decoder for [EnderecoAprovadoResponse]
            Decoders.addDecoder(clazz: [EnderecoAprovadoResponse].self) { (source: AnyObject) -> [EnderecoAprovadoResponse] in
                return Decoders.decode(clazz: [EnderecoAprovadoResponse].self, source: source)
            }
			// Decoder for EnderecoAprovadoResponse
            Decoders.addDecoder(clazz: EnderecoAprovadoResponse.self) { (source: AnyObject) -> EnderecoAprovadoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EnderecoAprovadoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoEndereco"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.logradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["logradouro"])
                instance.numero = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numero"])
                instance.complemento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento"])
                instance.pontoReferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pontoReferencia"])
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                instance.enderecoCorrespondencia = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["enderecoCorrespondencia"])
                return instance
            }
			

			// Decoder for [EnderecoResponse]
            Decoders.addDecoder(clazz: [EnderecoResponse].self) { (source: AnyObject) -> [EnderecoResponse] in
                return Decoders.decode(clazz: [EnderecoResponse].self, source: source)
            }
			// Decoder for EnderecoResponse
            Decoders.addDecoder(clazz: EnderecoResponse.self) { (source: AnyObject) -> EnderecoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EnderecoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idTipoEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoEndereco"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.logradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["logradouro"])
                instance.numero = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numero"])
                instance.complemento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento"])
                instance.pontoReferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pontoReferencia"])
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.pais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pais"])
                instance.dataInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInclusao"])
                instance.dataUltimaAtualizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataUltimaAtualizacao"])
                return instance
            }
			

			// Decoder for [EntidadeResponse]
            Decoders.addDecoder(clazz: [EntidadeResponse].self) { (source: AnyObject) -> [EntidadeResponse] in
                return Decoders.decode(clazz: [EntidadeResponse].self, source: source)
            }
			// Decoder for EntidadeResponse
            Decoders.addDecoder(clazz: EntidadeResponse.self) { (source: AnyObject) -> EntidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EntidadeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [EstabelecimentoPersist]
            Decoders.addDecoder(clazz: [EstabelecimentoPersist].self) { (source: AnyObject) -> [EstabelecimentoPersist] in
                return Decoders.decode(clazz: [EstabelecimentoPersist].self, source: source)
            }
			// Decoder for EstabelecimentoPersist
            Decoders.addDecoder(clazz: EstabelecimentoPersist.self) { (source: AnyObject) -> EstabelecimentoPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EstabelecimentoPersist()
                instance.flagMatriz = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagMatriz"])
                instance.idCredor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCredor"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.nomeFantasia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasia"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.nomeLogradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeLogradouro"])
                instance.numeroEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEndereco"])
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.complemento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.cep2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep2"])
                instance.nomeLogradouro2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeLogradouro2"])
                instance.numeroEndereco2 = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEndereco2"])
                instance.bairro2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro2"])
                instance.cidade2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade2"])
                instance.complemento2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento2"])
                instance.uf2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf2"])
                instance.obs = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["obs"])
                instance.contato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["contato"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.flagArquivoSecrFazenda = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagArquivoSecrFazenda"])
                instance.flagCartaoDigitado = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCartaoDigitado"])
                instance.inativo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["inativo"])
                instance.idMoeda = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idMoeda"])
                instance.idPais = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPais"])
                instance.associadoSPCBrasil = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["associadoSPCBrasil"])
                instance.mcc = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["mcc"])
                instance.idTipoEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoEstabelecimento"])
                instance.correspondencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["correspondencia"])
                instance.cargoContato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cargoContato"])
                instance.tipoPagamento = EstabelecimentoPersist.TipoPagamento(rawValue: (sourceDictionary["tipoPagamento"] as? String) ?? "") 
                instance.consulta = Decoders.decodeOptional(clazz: ConsultaCadastroEstabelecimentoDTO.self, source: sourceDictionary["consulta"])
                instance.consulta2 = Decoders.decodeOptional(clazz: ConsultaCadastroEstabelecimentoDTO.self, source: sourceDictionary["consulta2"])
                instance.consulta3 = Decoders.decodeOptional(clazz: ConsultaCadastroEstabelecimentoDTO.self, source: sourceDictionary["consulta3"])
                instance.flagTerminalVirtual = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagTerminalVirtual"])
                instance.flagConsultaExtrato = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagConsultaExtrato"])
                return instance
            }
			

			// Decoder for [EstabelecimentoResponse]
            Decoders.addDecoder(clazz: [EstabelecimentoResponse].self) { (source: AnyObject) -> [EstabelecimentoResponse] in
                return Decoders.decode(clazz: [EstabelecimentoResponse].self, source: source)
            }
			// Decoder for EstabelecimentoResponse
            Decoders.addDecoder(clazz: EstabelecimentoResponse.self) { (source: AnyObject) -> EstabelecimentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EstabelecimentoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.flagMatriz = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagMatriz"])
                instance.idCredor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCredor"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.nomeFantasia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasia"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.nomeLogradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeLogradouro"])
                instance.numeroEndereco = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroEndereco"])
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.complemento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.cep2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep2"])
                instance.nomeLogradouro2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeLogradouro2"])
                instance.numeroEndereco2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroEndereco2"])
                instance.bairro2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro2"])
                instance.cidade2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade2"])
                instance.complemento2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento2"])
                instance.uf2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf2"])
                instance.obs = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["obs"])
                instance.contato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["contato"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.flagArquivoSecrFazenda = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagArquivoSecrFazenda"])
                instance.flagCartaoDigitado = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCartaoDigitado"])
                instance.inativo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["inativo"])
                instance.idMoeda = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idMoeda"])
                instance.idPais = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPais"])
                instance.associadoSPCBrasil = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["associadoSPCBrasil"])
                instance.mcc = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["mcc"])
                instance.idTipoEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoEstabelecimento"])
                instance.correspondencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["correspondencia"])
                instance.cargoContato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cargoContato"])
                instance.tipoPagamento = EstabelecimentoResponse.TipoPagamento(rawValue: (sourceDictionary["tipoPagamento"] as? String) ?? "") 
                instance.consulta = Decoders.decodeOptional(clazz: ConsultaCadastroEstabelecimentoDTO.self, source: sourceDictionary["consulta"])
                instance.consulta2 = Decoders.decodeOptional(clazz: ConsultaCadastroEstabelecimentoDTO.self, source: sourceDictionary["consulta2"])
                instance.consulta3 = Decoders.decodeOptional(clazz: ConsultaCadastroEstabelecimentoDTO.self, source: sourceDictionary["consulta3"])
                instance.terminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminal"])
                instance.dataCadastramento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastramento"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                return instance
            }
			

			// Decoder for [EstabelecimentoUpdate]
            Decoders.addDecoder(clazz: [EstabelecimentoUpdate].self) { (source: AnyObject) -> [EstabelecimentoUpdate] in
                return Decoders.decode(clazz: [EstabelecimentoUpdate].self, source: source)
            }
			// Decoder for EstabelecimentoUpdate
            Decoders.addDecoder(clazz: EstabelecimentoUpdate.self) { (source: AnyObject) -> EstabelecimentoUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EstabelecimentoUpdate()
                instance.flagMatriz = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagMatriz"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.nomeFantasia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasia"])
                instance.cep = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep"])
                instance.nomeLogradouro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeLogradouro"])
                instance.numeroEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEndereco"])
                instance.bairro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro"])
                instance.cidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade"])
                instance.complemento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento"])
                instance.uf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf"])
                instance.cep2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cep2"])
                instance.nomeLogradouro2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeLogradouro2"])
                instance.numeroEndereco2 = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEndereco2"])
                instance.bairro2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bairro2"])
                instance.cidade2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cidade2"])
                instance.complemento2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento2"])
                instance.uf2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["uf2"])
                instance.obs = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["obs"])
                instance.contato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["contato"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.flagArquivoSecrFazenda = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagArquivoSecrFazenda"])
                instance.flagCartaoDigitado = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCartaoDigitado"])
                instance.inativo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["inativo"])
                instance.idMoeda = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idMoeda"])
                instance.idPais = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPais"])
                instance.associadoSPCBrasil = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["associadoSPCBrasil"])
                instance.mcc = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["mcc"])
                instance.idTipoEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoEstabelecimento"])
                instance.correspondencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["correspondencia"])
                instance.cargoContato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cargoContato"])
                instance.tipoPagamento = EstabelecimentoUpdate.TipoPagamento(rawValue: (sourceDictionary["tipoPagamento"] as? String) ?? "") 
                instance.consulta = Decoders.decodeOptional(clazz: ConsultaCadastroEstabelecimentoDTO.self, source: sourceDictionary["consulta"])
                instance.consulta2 = Decoders.decodeOptional(clazz: ConsultaCadastroEstabelecimentoDTO.self, source: sourceDictionary["consulta2"])
                instance.consulta3 = Decoders.decodeOptional(clazz: ConsultaCadastroEstabelecimentoDTO.self, source: sourceDictionary["consulta3"])
                instance.sort = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["sort"])
                return instance
            }
			

			// Decoder for [EstagioCartaoResponse]
            Decoders.addDecoder(clazz: [EstagioCartaoResponse].self) { (source: AnyObject) -> [EstagioCartaoResponse] in
                return Decoders.decode(clazz: [EstagioCartaoResponse].self, source: source)
            }
			// Decoder for EstagioCartaoResponse
            Decoders.addDecoder(clazz: EstagioCartaoResponse.self) { (source: AnyObject) -> EstagioCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EstagioCartaoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [ExtraInfo]
            Decoders.addDecoder(clazz: [ExtraInfo].self) { (source: AnyObject) -> [ExtraInfo] in
                return Decoders.decode(clazz: [ExtraInfo].self, source: source)
            }
			// Decoder for ExtraInfo
            Decoders.addDecoder(clazz: ExtraInfo.self) { (source: AnyObject) -> ExtraInfo in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ExtraInfo()
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                return instance
            }
			

			// Decoder for [FantasiaBasicaResponse]
            Decoders.addDecoder(clazz: [FantasiaBasicaResponse].self) { (source: AnyObject) -> [FantasiaBasicaResponse] in
                return Decoders.decode(clazz: [FantasiaBasicaResponse].self, source: source)
            }
			// Decoder for FantasiaBasicaResponse
            Decoders.addDecoder(clazz: FantasiaBasicaResponse.self) { (source: AnyObject) -> FantasiaBasicaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FantasiaBasicaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                return instance
            }
			

			// Decoder for [FaqResponse]
            Decoders.addDecoder(clazz: [FaqResponse].self) { (source: AnyObject) -> [FaqResponse] in
                return Decoders.decode(clazz: [FaqResponse].self, source: source)
            }
			// Decoder for FaqResponse
            Decoders.addDecoder(clazz: FaqResponse.self) { (source: AnyObject) -> FaqResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FaqResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.pergunta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pergunta"])
                instance.resposta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["resposta"])
                instance.relevancia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["relevancia"])
                instance.plataforma = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["plataforma"])
                instance.categoria = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["categoria"])
                instance.status = FaqResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [FaturaConsignadaDetalheResponse]
            Decoders.addDecoder(clazz: [FaturaConsignadaDetalheResponse].self) { (source: AnyObject) -> [FaturaConsignadaDetalheResponse] in
                return Decoders.decode(clazz: [FaturaConsignadaDetalheResponse].self, source: source)
            }
			// Decoder for FaturaConsignadaDetalheResponse
            Decoders.addDecoder(clazz: FaturaConsignadaDetalheResponse.self) { (source: AnyObject) -> FaturaConsignadaDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FaturaConsignadaDetalheResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.limiteGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobal"])
                instance.flagEmiteFatura = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagEmiteFatura"])
                instance.limiteCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteCompra"])
                instance.dataVencimentoFatura = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoFatura"])
                instance.limiteParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelado"])
                instance.limiteParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelas"])
                instance.valorTotalFatura = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalFatura"])
                instance.valorFaturaAnterior = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorFaturaAnterior"])
                instance.valorPagamentoMinimo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoMinimo"])
                instance.valorPagamentoConsignado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoConsignado"])
                instance.limiteSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaqueGlobal"])
                instance.valorPagamentoComplementar = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoComplementar"])
                instance.limiteSaquePeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaquePeriodo"])
                instance.totalComprasNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalComprasNacionais"])
                instance.limiteConsignado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteConsignado"])
                instance.totalComprasInternacionas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalComprasInternacionas"])
                instance.limiteInternacionalCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalCompra"])
                instance.totalSaquesNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalSaquesNacionais"])
                instance.limiteInternacionalParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalParcelado"])
                instance.totalSaquesInternacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalSaquesInternacionais"])
                instance.limiteInternacionalParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalParcelas"])
                instance.totalDebitosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosNacionais"])
                instance.limiteInternacionalSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalSaqueGlobal"])
                instance.totalDebitosRecorrentes = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosRecorrentes"])
                instance.limiteInternacionalSaquePeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalSaquePeriodo"])
                instance.totalDebitosInternacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosInternacionais"])
                instance.saldoDisponivelGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelGlobal"])
                instance.totalDebitosDiversosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosDiversosNacionais"])
                instance.saldoDisponivelCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelCompra"])
                instance.totalDebitosOpcionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosOpcionais"])
                instance.saldoDisponivelParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelParcelado"])
                instance.totalPagamentos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalPagamentos"])
                instance.saldoDisponivelParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelParcelas"])
                instance.totalCreditosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalCreditosNacionais"])
                instance.totalAjustes = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalAjustes"])
                instance.totalTarifas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalTarifas"])
                instance.totalMulta = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalMulta"])
                instance.saldoDisponivelSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaque"])
                instance.totalJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalJuros"])
                instance.saldoPontosFidelidade = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoPontosFidelidade"])
                instance.taxaRotativo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaRotativo"])
                instance.saldoDisponivelCompraInternacional = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelCompraInternacional"])
                instance.taxaSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaSaque"])
                instance.saldoDisponivelSaqueInternacional = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaqueInternacional"])
                instance.taxaMaximaProximoPeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaMaximaProximoPeriodo"])
                instance.totalServicos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalServicos"])
                return instance
            }
			

			// Decoder for [FaturaConsignadaResponse]
            Decoders.addDecoder(clazz: [FaturaConsignadaResponse].self) { (source: AnyObject) -> [FaturaConsignadaResponse] in
                return Decoders.decode(clazz: [FaturaConsignadaResponse].self, source: source)
            }
			// Decoder for FaturaConsignadaResponse
            Decoders.addDecoder(clazz: FaturaConsignadaResponse.self) { (source: AnyObject) -> FaturaConsignadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FaturaConsignadaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.flagEmiteFatura = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagEmiteFatura"])
                instance.dataVencimentoFatura = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoFatura"])
                instance.valorTotalFatura = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalFatura"])
                instance.valorFaturaAnterior = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorFaturaAnterior"])
                instance.valorPagamentoMinimo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoMinimo"])
                instance.valorPagamentoConsignado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoConsignado"])
                instance.valorPagamentoComplementar = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoComplementar"])
                instance.totalComprasNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalComprasNacionais"])
                instance.totalComprasInternacionas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalComprasInternacionas"])
                instance.totalSaquesNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalSaquesNacionais"])
                instance.totalSaquesInternacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalSaquesInternacionais"])
                instance.totalDebitosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosNacionais"])
                instance.totalDebitosRecorrentes = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosRecorrentes"])
                instance.totalDebitosInternacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosInternacionais"])
                instance.totalDebitosDiversosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosDiversosNacionais"])
                instance.totalDebitosOpcionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosOpcionais"])
                instance.totalPagamentos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalPagamentos"])
                instance.totalCreditosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalCreditosNacionais"])
                instance.totalAjustes = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalAjustes"])
                instance.totalTarifas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalTarifas"])
                instance.totalMulta = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalMulta"])
                instance.totalJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalJuros"])
                instance.taxaRotativo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaRotativo"])
                instance.taxaSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaSaque"])
                instance.taxaMaximaProximoPeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaMaximaProximoPeriodo"])
                instance.totalServicos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalServicos"])
                return instance
            }
			

			// Decoder for [FaturaDetalheResponse]
            Decoders.addDecoder(clazz: [FaturaDetalheResponse].self) { (source: AnyObject) -> [FaturaDetalheResponse] in
                return Decoders.decode(clazz: [FaturaDetalheResponse].self, source: source)
            }
			// Decoder for FaturaDetalheResponse
            Decoders.addDecoder(clazz: FaturaDetalheResponse.self) { (source: AnyObject) -> FaturaDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FaturaDetalheResponse()
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.situacaoProcessamento = FaturaDetalheResponse.SituacaoProcessamento(rawValue: (sourceDictionary["situacaoProcessamento"] as? String) ?? "") 
                instance.pagamentoEfetuado = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["pagamentoEfetuado"])
                instance.dataVencimentoFatura = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoFatura"])
                instance.dataVencimentoReal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoReal"])
                instance.dataFechamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFechamento"])
                instance.valorTotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotal"])
                instance.valorPagamentoMinimo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoMinimo"])
                instance.lancamentosFaturaResponse = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["lancamentosFaturaResponse"])
                instance.saldoAnterior = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoAnterior"])
                return instance
            }
			

			// Decoder for [FaturaFechadaResponse]
            Decoders.addDecoder(clazz: [FaturaFechadaResponse].self) { (source: AnyObject) -> [FaturaFechadaResponse] in
                return Decoders.decode(clazz: [FaturaFechadaResponse].self, source: source)
            }
			// Decoder for FaturaFechadaResponse
            Decoders.addDecoder(clazz: FaturaFechadaResponse.self) { (source: AnyObject) -> FaturaFechadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FaturaFechadaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.flagEmiteFatura = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagEmiteFatura"])
                instance.dataVencimentoFatura = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoFatura"])
                instance.valorTotalFatura = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalFatura"])
                instance.valorFaturaAnterior = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorFaturaAnterior"])
                instance.valorPagamentoMinimo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoMinimo"])
                instance.totalComprasNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalComprasNacionais"])
                instance.totalComprasInternacionas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalComprasInternacionas"])
                instance.totalSaquesNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalSaquesNacionais"])
                instance.totalSaquesInternacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalSaquesInternacionais"])
                instance.totalDebitosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosNacionais"])
                instance.totalDebitosRecorrentes = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosRecorrentes"])
                instance.totalDebitosInternacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosInternacionais"])
                instance.totalDebitosDiversosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosDiversosNacionais"])
                instance.totalDebitosOpcionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDebitosOpcionais"])
                instance.totalPagamentos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalPagamentos"])
                instance.totalCreditosNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalCreditosNacionais"])
                instance.totalAjustes = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalAjustes"])
                instance.totalTarifas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalTarifas"])
                instance.totalMulta = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalMulta"])
                instance.totalJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalJuros"])
                instance.taxaRotativo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaRotativo"])
                instance.taxaSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaSaque"])
                instance.taxaMaximaProximoPeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaMaximaProximoPeriodo"])
                instance.totalServicos = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalServicos"])
                instance.totalParceladoNacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalParceladoNacionais"])
                instance.totalParceladoInternacionais = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalParceladoInternacionais"])
                return instance
            }
			

			// Decoder for [FaturaResponse]
            Decoders.addDecoder(clazz: [FaturaResponse].self) { (source: AnyObject) -> [FaturaResponse] in
                return Decoders.decode(clazz: [FaturaResponse].self, source: source)
            }
			// Decoder for FaturaResponse
            Decoders.addDecoder(clazz: FaturaResponse.self) { (source: AnyObject) -> FaturaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FaturaResponse()
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.situacaoProcessamento = FaturaResponse.SituacaoProcessamento(rawValue: (sourceDictionary["situacaoProcessamento"] as? String) ?? "") 
                instance.pagamentoEfetuado = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["pagamentoEfetuado"])
                instance.dataVencimentoFatura = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoFatura"])
                instance.dataVencimentoReal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoReal"])
                instance.dataFechamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFechamento"])
                instance.valorTotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotal"])
                instance.valorPagamentoMinimo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamentoMinimo"])
                instance.saldoAnterior = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoAnterior"])
                return instance
            }
			

			// Decoder for [GradePendenteRequest]
            Decoders.addDecoder(clazz: [GradePendenteRequest].self) { (source: AnyObject) -> [GradePendenteRequest] in
                return Decoders.decode(clazz: [GradePendenteRequest].self, source: source)
            }
			// Decoder for GradePendenteRequest
            Decoders.addDecoder(clazz: GradePendenteRequest.self) { (source: AnyObject) -> GradePendenteRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = GradePendenteRequest()
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.dataBase = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataBase"])
                return instance
            }
			

			// Decoder for [GrupoEconomicoDTO]
            Decoders.addDecoder(clazz: [GrupoEconomicoDTO].self) { (source: AnyObject) -> [GrupoEconomicoDTO] in
                return Decoders.decode(clazz: [GrupoEconomicoDTO].self, source: source)
            }
			// Decoder for GrupoEconomicoDTO
            Decoders.addDecoder(clazz: GrupoEconomicoDTO.self) { (source: AnyObject) -> GrupoEconomicoDTO in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = GrupoEconomicoDTO()
                instance.razaoSocial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["razaoSocial"])
                instance.nomeCredor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCredor"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.inscricaoEstadual = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["inscricaoEstadual"])
                instance.contato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["contato"])
                instance.banco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["banco"])
                instance.agencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["agencia"])
                instance.digitoAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoAgencia"])
                instance.contaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["contaCorrente"])
                instance.digitoContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoContaCorrente"])
                instance.periodicidade = GrupoEconomicoDTO.Periodicidade(rawValue: (sourceDictionary["periodicidade"] as? String) ?? "") 
                instance.pagamentoSemanal = GrupoEconomicoDTO.PagamentoSemanal(rawValue: (sourceDictionary["pagamentoSemanal"] as? String) ?? "") 
                instance.pagamentoMensal = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoMensal"])
                instance.pagamentoDecendialPrimeiro = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoDecendialPrimeiro"])
                instance.pagamentoDecendialSegundo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoDecendialSegundo"])
                instance.pagamentoDecendialTerceiro = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoDecendialTerceiro"])
                instance.pagamentoQuinzenalPrimeiro = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoQuinzenalPrimeiro"])
                instance.pagamentoQuinzenalSegundo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoQuinzenalSegundo"])
                instance.percentualRAV = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["percentualRAV"])
                instance.recebeRAV = GrupoEconomicoDTO.RecebeRAV(rawValue: (sourceDictionary["recebeRAV"] as? String) ?? "") 
                instance.percentualMultiplica = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["percentualMultiplica"])
                instance.taxaAdm = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaAdm"])
                instance.taxaBanco = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaBanco"])
                instance.limiteRAV = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteRAV"])
                return instance
            }
			

			// Decoder for [GrupoEconomicoResponse]
            Decoders.addDecoder(clazz: [GrupoEconomicoResponse].self) { (source: AnyObject) -> [GrupoEconomicoResponse] in
                return Decoders.decode(clazz: [GrupoEconomicoResponse].self, source: source)
            }
			// Decoder for GrupoEconomicoResponse
            Decoders.addDecoder(clazz: GrupoEconomicoResponse.self) { (source: AnyObject) -> GrupoEconomicoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = GrupoEconomicoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.razaoSocial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["razaoSocial"])
                instance.nomeCredor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCredor"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.inscricaoEstadual = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["inscricaoEstadual"])
                instance.contato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["contato"])
                instance.banco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["banco"])
                instance.agencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["agencia"])
                instance.digitoAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoAgencia"])
                instance.contaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["contaCorrente"])
                instance.digitoContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoContaCorrente"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                instance.periodicidade = GrupoEconomicoResponse.Periodicidade(rawValue: (sourceDictionary["periodicidade"] as? String) ?? "") 
                instance.pagamentoSemanal = GrupoEconomicoResponse.PagamentoSemanal(rawValue: (sourceDictionary["pagamentoSemanal"] as? String) ?? "") 
                instance.pagamentoMensal = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoMensal"])
                instance.pagamentoDecendialPrimeiro = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoDecendialPrimeiro"])
                instance.pagamentoDecendialSegundo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoDecendialSegundo"])
                instance.pagamentoDecendialTerceiro = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoDecendialTerceiro"])
                instance.pagamentoQuinzenalPrimeiro = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoQuinzenalPrimeiro"])
                instance.pagamentoQuinzenalSegundo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["pagamentoQuinzenalSegundo"])
                instance.percentualRAV = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["percentualRAV"])
                instance.recebeRAV = GrupoEconomicoResponse.RecebeRAV(rawValue: (sourceDictionary["recebeRAV"] as? String) ?? "") 
                instance.percentualMultiplica = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["percentualMultiplica"])
                instance.taxaAdm = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaAdm"])
                instance.taxaBanco = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaBanco"])
                instance.limiteRAV = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteRAV"])
                return instance
            }
			

			// Decoder for [HistoricoAssessoriaResponse]
            Decoders.addDecoder(clazz: [HistoricoAssessoriaResponse].self) { (source: AnyObject) -> [HistoricoAssessoriaResponse] in
                return Decoders.decode(clazz: [HistoricoAssessoriaResponse].self, source: source)
            }
			// Decoder for HistoricoAssessoriaResponse
            Decoders.addDecoder(clazz: HistoricoAssessoriaResponse.self) { (source: AnyObject) -> HistoricoAssessoriaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = HistoricoAssessoriaResponse()
                instance.dataHoraHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraHistorico"])
                instance.tipoHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoHistorico"])
                instance.nomeAssessoria = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeAssessoria"])
                return instance
            }
			

			// Decoder for [HistoricoAtrasoFaturaResponse]
            Decoders.addDecoder(clazz: [HistoricoAtrasoFaturaResponse].self) { (source: AnyObject) -> [HistoricoAtrasoFaturaResponse] in
                return Decoders.decode(clazz: [HistoricoAtrasoFaturaResponse].self, source: source)
            }
			// Decoder for HistoricoAtrasoFaturaResponse
            Decoders.addDecoder(clazz: HistoricoAtrasoFaturaResponse.self) { (source: AnyObject) -> HistoricoAtrasoFaturaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = HistoricoAtrasoFaturaResponse()
                instance.dataVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimento"])
                instance.diasPagamentoAposVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diasPagamentoAposVencimento"])
                return instance
            }
			

			// Decoder for [HistoricoEventosResponse]
            Decoders.addDecoder(clazz: [HistoricoEventosResponse].self) { (source: AnyObject) -> [HistoricoEventosResponse] in
                return Decoders.decode(clazz: [HistoricoEventosResponse].self, source: source)
            }
			// Decoder for HistoricoEventosResponse
            Decoders.addDecoder(clazz: HistoricoEventosResponse.self) { (source: AnyObject) -> HistoricoEventosResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = HistoricoEventosResponse()
                instance.idHistorico = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idHistorico"])
                instance.dataHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHistorico"])
                instance.tipoHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoHistorico"])
                instance.valorAnterior = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["valorAnterior"])
                instance.valorAtribuido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["valorAtribuido"])
                return instance
            }
			

			// Decoder for [HistoricoImpressaoCartaoResponse]
            Decoders.addDecoder(clazz: [HistoricoImpressaoCartaoResponse].self) { (source: AnyObject) -> [HistoricoImpressaoCartaoResponse] in
                return Decoders.decode(clazz: [HistoricoImpressaoCartaoResponse].self, source: source)
            }
			// Decoder for HistoricoImpressaoCartaoResponse
            Decoders.addDecoder(clazz: HistoricoImpressaoCartaoResponse.self) { (source: AnyObject) -> HistoricoImpressaoCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = HistoricoImpressaoCartaoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idStatusImpressaoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusImpressaoCartao"])
                instance.mensagemHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mensagemHistorico"])
                instance.dataHistorico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHistorico"])
                return instance
            }
			

			// Decoder for [HistoricoPagamentoResponse]
            Decoders.addDecoder(clazz: [HistoricoPagamentoResponse].self) { (source: AnyObject) -> [HistoricoPagamentoResponse] in
                return Decoders.decode(clazz: [HistoricoPagamentoResponse].self, source: source)
            }
			// Decoder for HistoricoPagamentoResponse
            Decoders.addDecoder(clazz: HistoricoPagamentoResponse.self) { (source: AnyObject) -> HistoricoPagamentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = HistoricoPagamentoResponse()
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idPagamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPagamento"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.idBanco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idBanco"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.valorPagamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPagamento"])
                instance.dataHoraPagamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraPagamento"])
                instance.dataHoraEntradaPagamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraEntradaPagamento"])
                instance.dataVencimentoParcelaAcordo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoParcelaAcordo"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [HistoricoTelefoneResponse]
            Decoders.addDecoder(clazz: [HistoricoTelefoneResponse].self) { (source: AnyObject) -> [HistoricoTelefoneResponse] in
                return Decoders.decode(clazz: [HistoricoTelefoneResponse].self, source: source)
            }
			// Decoder for HistoricoTelefoneResponse
            Decoders.addDecoder(clazz: HistoricoTelefoneResponse.self) { (source: AnyObject) -> HistoricoTelefoneResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = HistoricoTelefoneResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.idTipoTelefone = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTelefone"])
                instance.tipoTelefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoTelefone"])
                instance.dataModificacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataModificacao"])
                return instance
            }
			

			// Decoder for [IntegracaoEmissorPersist]
            Decoders.addDecoder(clazz: [IntegracaoEmissorPersist].self) { (source: AnyObject) -> [IntegracaoEmissorPersist] in
                return Decoders.decode(clazz: [IntegracaoEmissorPersist].self, source: source)
            }
			// Decoder for IntegracaoEmissorPersist
            Decoders.addDecoder(clazz: IntegracaoEmissorPersist.self) { (source: AnyObject) -> IntegracaoEmissorPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = IntegracaoEmissorPersist()
                instance.canalEntrada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["canalEntrada"])
                return instance
            }
			

			// Decoder for [IntegracaoEmissorResponse]
            Decoders.addDecoder(clazz: [IntegracaoEmissorResponse].self) { (source: AnyObject) -> [IntegracaoEmissorResponse] in
                return Decoders.decode(clazz: [IntegracaoEmissorResponse].self, source: source)
            }
			// Decoder for IntegracaoEmissorResponse
            Decoders.addDecoder(clazz: IntegracaoEmissorResponse.self) { (source: AnyObject) -> IntegracaoEmissorResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = IntegracaoEmissorResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idArquivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idArquivo"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.dataInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInclusao"])
                instance.dataAlteracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAlteracao"])
                return instance
            }
			

			// Decoder for [IntegrarArquivoRequest]
            Decoders.addDecoder(clazz: [IntegrarArquivoRequest].self) { (source: AnyObject) -> [IntegrarArquivoRequest] in
                return Decoders.decode(clazz: [IntegrarArquivoRequest].self, source: source)
            }
			// Decoder for IntegrarArquivoRequest
            Decoders.addDecoder(clazz: IntegrarArquivoRequest.self) { (source: AnyObject) -> IntegrarArquivoRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = IntegrarArquivoRequest()
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                return instance
            }
			

			// Decoder for [IntegrarDocumentoRequest]
            Decoders.addDecoder(clazz: [IntegrarDocumentoRequest].self) { (source: AnyObject) -> [IntegrarDocumentoRequest] in
                return Decoders.decode(clazz: [IntegrarDocumentoRequest].self, source: source)
            }
			// Decoder for IntegrarDocumentoRequest
            Decoders.addDecoder(clazz: IntegrarDocumentoRequest.self) { (source: AnyObject) -> IntegrarDocumentoRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = IntegrarDocumentoRequest()
                instance.idTemplate = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTemplate"])
                instance.arquivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["arquivo"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.propriedades = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["propriedades"])
                return instance
            }
			

			// Decoder for [JobResponse]
            Decoders.addDecoder(clazz: [JobResponse].self) { (source: AnyObject) -> [JobResponse] in
                return Decoders.decode(clazz: [JobResponse].self, source: source)
            }
			// Decoder for JobResponse
            Decoders.addDecoder(clazz: JobResponse.self) { (source: AnyObject) -> JobResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = JobResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.groovy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["groovy"])
                instance.cron = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cron"])
                instance.status = JobResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [LancamentoFaturaResponse]
            Decoders.addDecoder(clazz: [LancamentoFaturaResponse].self) { (source: AnyObject) -> [LancamentoFaturaResponse] in
                return Decoders.decode(clazz: [LancamentoFaturaResponse].self, source: source)
            }
			// Decoder for LancamentoFaturaResponse
            Decoders.addDecoder(clazz: LancamentoFaturaResponse.self) { (source: AnyObject) -> LancamentoFaturaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LancamentoFaturaResponse()
                instance.idTransacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransacao"])
                instance.descricaoTipoTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoTransacao"])
                instance.idTipoEvento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoEvento"])
                instance.descricaoTipoEvento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoEvento"])
                instance.idEvento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEvento"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.complemento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["complemento"])
                instance.valorBRL = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorBRL"])
                instance.valorUSD = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorUSD"])
                instance.numeroParcela = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcela"])
                instance.quantidadeParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeParcelas"])
                instance.dataHoraTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTransacao"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                instance.descricaoEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoEstabelecimento"])
                instance.nomeFantasiaEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasiaEstabelecimento"])
                instance.flagCredito = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCredito"])
                instance.idMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idMCC"])
                instance.idGrupoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idGrupoMCC"])
                instance.descricaoGrupoMCC = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoGrupoMCC"])
                instance.titular = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["titular"])
                instance.nomePortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePortador"])
                instance.numeroCartaoMascarado = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartaoMascarado"])
                instance.flagSolicitouContestacao = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagSolicitouContestacao"])
                instance.valorTaxaEmbarque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTaxaEmbarque"])
                instance.descricaoAbreviada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoAbreviada"])
                return instance
            }
			

			// Decoder for [LimiteDisponibilidadeResponse]
            Decoders.addDecoder(clazz: [LimiteDisponibilidadeResponse].self) { (source: AnyObject) -> [LimiteDisponibilidadeResponse] in
                return Decoders.decode(clazz: [LimiteDisponibilidadeResponse].self, source: source)
            }
			// Decoder for LimiteDisponibilidadeResponse
            Decoders.addDecoder(clazz: LimiteDisponibilidadeResponse.self) { (source: AnyObject) -> LimiteDisponibilidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LimiteDisponibilidadeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.limiteGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobal"])
                instance.limiteCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteCompra"])
                instance.limiteParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelado"])
                instance.limiteParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelas"])
                instance.limiteSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaqueGlobal"])
                instance.limiteSaquePeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteSaquePeriodo"])
                instance.limiteConsignado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteConsignado"])
                instance.limiteInternacionalCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalCompra"])
                instance.limiteInternacionalParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalParcelado"])
                instance.limiteInternacionalParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalParcelas"])
                instance.limiteInternacionalSaqueGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalSaqueGlobal"])
                instance.limiteInternacionalSaquePeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteInternacionalSaquePeriodo"])
                instance.limiteMaximo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteMaximo"])
                instance.saldoDisponivelGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelGlobal"])
                instance.saldoDisponivelCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelCompra"])
                instance.saldoDisponivelParcelado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelParcelado"])
                instance.saldoDisponivelParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelParcelas"])
                instance.saldoDisponivelSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaque"])
                instance.saldoPontosFidelidade = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoPontosFidelidade"])
                instance.saldoDisponivelCompraInternacional = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelCompraInternacional"])
                instance.saldoDisponivelSaqueInternacional = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["saldoDisponivelSaqueInternacional"])
                return instance
            }
			

			// Decoder for [LoteCartoesPrePagosResponse]
            Decoders.addDecoder(clazz: [LoteCartoesPrePagosResponse].self) { (source: AnyObject) -> [LoteCartoesPrePagosResponse] in
                return Decoders.decode(clazz: [LoteCartoesPrePagosResponse].self, source: source)
            }
			// Decoder for LoteCartoesPrePagosResponse
            Decoders.addDecoder(clazz: LoteCartoesPrePagosResponse.self) { (source: AnyObject) -> LoteCartoesPrePagosResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LoteCartoesPrePagosResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idTipoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoCartao"])
                instance.idImagem = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idImagem"])
                instance.idEndereco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEndereco"])
                instance.quantidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidade"])
                instance.dataCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastro"])
                instance.usuarioCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuarioCadastro"])
                instance.statusProcessamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["statusProcessamento"])
                instance.identificadorExterno = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["identificadorExterno"])
                return instance
            }
			

			// Decoder for [MCCResponse]
            Decoders.addDecoder(clazz: [MCCResponse].self) { (source: AnyObject) -> [MCCResponse] in
                return Decoders.decode(clazz: [MCCResponse].self, source: source)
            }
			// Decoder for MCCResponse
            Decoders.addDecoder(clazz: MCCResponse.self) { (source: AnyObject) -> MCCResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = MCCResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                return instance
            }
			

			// Decoder for [MapOfstringAndstring]
            Decoders.addDecoder(clazz: [MapOfstringAndstring].self) { (source: AnyObject) -> [MapOfstringAndstring] in
                return Decoders.decode(clazz: [MapOfstringAndstring].self, source: source)
            }
			// Decoder for MapOfstringAndstring
            Decoders.addDecoder(clazz: MapOfstringAndstring.self) { (source: AnyObject) -> MapOfstringAndstring in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = MapOfstringAndstring()
                return instance
            }
			

			// Decoder for [MaquinetaPersist]
            Decoders.addDecoder(clazz: [MaquinetaPersist].self) { (source: AnyObject) -> [MaquinetaPersist] in
                return Decoders.decode(clazz: [MaquinetaPersist].self, source: source)
            }
			// Decoder for MaquinetaPersist
            Decoders.addDecoder(clazz: MaquinetaPersist.self) { (source: AnyObject) -> MaquinetaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = MaquinetaPersist()
                instance.idTerminal = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTerminal"])
                instance.idTipoMaquineta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoMaquineta"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.dataHoraImplantacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraImplantacao"])
                return instance
            }
			

			// Decoder for [MaquinetaResponse]
            Decoders.addDecoder(clazz: [MaquinetaResponse].self) { (source: AnyObject) -> [MaquinetaResponse] in
                return Decoders.decode(clazz: [MaquinetaResponse].self, source: source)
            }
			// Decoder for MaquinetaResponse
            Decoders.addDecoder(clazz: MaquinetaResponse.self) { (source: AnyObject) -> MaquinetaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = MaquinetaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.idTipoMaquineta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoMaquineta"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.dataHoraImplantacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraImplantacao"])
                instance.dataHoraCadastramento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraCadastramento"])
                instance.terminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminal"])
                instance.usuarioApl = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuarioApl"])
                return instance
            }
			

			// Decoder for [MaquinetaUpdate]
            Decoders.addDecoder(clazz: [MaquinetaUpdate].self) { (source: AnyObject) -> [MaquinetaUpdate] in
                return Decoders.decode(clazz: [MaquinetaUpdate].self, source: source)
            }
			// Decoder for MaquinetaUpdate
            Decoders.addDecoder(clazz: MaquinetaUpdate.self) { (source: AnyObject) -> MaquinetaUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = MaquinetaUpdate()
                instance.idTerminal = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTerminal"])
                instance.idTipoMaquineta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoMaquineta"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.dataHoraImplantacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraImplantacao"])
                return instance
            }
			

			// Decoder for [MoedaResponse]
            Decoders.addDecoder(clazz: [MoedaResponse].self) { (source: AnyObject) -> [MoedaResponse] in
                return Decoders.decode(clazz: [MoedaResponse].self, source: source)
            }
			// Decoder for MoedaResponse
            Decoders.addDecoder(clazz: MoedaResponse.self) { (source: AnyObject) -> MoedaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = MoedaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.codigoMoeda = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoeda"])
                instance.simbolo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["simbolo"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                return instance
            }
			

			// Decoder for [NotificacaoEmailRequest]
            Decoders.addDecoder(clazz: [NotificacaoEmailRequest].self) { (source: AnyObject) -> [NotificacaoEmailRequest] in
                return Decoders.decode(clazz: [NotificacaoEmailRequest].self, source: source)
            }
			// Decoder for NotificacaoEmailRequest
            Decoders.addDecoder(clazz: NotificacaoEmailRequest.self) { (source: AnyObject) -> NotificacaoEmailRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = NotificacaoEmailRequest()
                instance.idTemplateNotificacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTemplateNotificacao"])
                instance.destinatarios = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["destinatarios"])
                instance.anexos = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["anexos"])
                instance.parametrosConteudo = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["parametrosConteudo"])
                return instance
            }
			

			// Decoder for [NotificacaoPushResponse]
            Decoders.addDecoder(clazz: [NotificacaoPushResponse].self) { (source: AnyObject) -> [NotificacaoPushResponse] in
                return Decoders.decode(clazz: [NotificacaoPushResponse].self, source: source)
            }
			// Decoder for NotificacaoPushResponse
            Decoders.addDecoder(clazz: NotificacaoPushResponse.self) { (source: AnyObject) -> NotificacaoPushResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = NotificacaoPushResponse()
                instance.dataEnvio = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEnvio"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.tipoEvento = NotificacaoPushResponse.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                instance.status = NotificacaoPushResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.tokenDispositivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tokenDispositivo"])
                instance.titulo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["titulo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.plataforma = NotificacaoPushResponse.Plataforma(rawValue: (sourceDictionary["plataforma"] as? String) ?? "") 
                instance.protocolo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["protocolo"])
                return instance
            }
			

			// Decoder for [NotificacaoResponse]
            Decoders.addDecoder(clazz: [NotificacaoResponse].self) { (source: AnyObject) -> [NotificacaoResponse] in
                return Decoders.decode(clazz: [NotificacaoResponse].self, source: source)
            }
			// Decoder for NotificacaoResponse
            Decoders.addDecoder(clazz: NotificacaoResponse.self) { (source: AnyObject) -> NotificacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = NotificacaoResponse()
                instance.protocolo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["protocolo"])
                instance.mensagem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mensagem"])
                return instance
            }
			

			// Decoder for [NotificacaoSMSBody]
            Decoders.addDecoder(clazz: [NotificacaoSMSBody].self) { (source: AnyObject) -> [NotificacaoSMSBody] in
                return Decoders.decode(clazz: [NotificacaoSMSBody].self, source: source)
            }
			// Decoder for NotificacaoSMSBody
            Decoders.addDecoder(clazz: NotificacaoSMSBody.self) { (source: AnyObject) -> NotificacaoSMSBody in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = NotificacaoSMSBody()
                instance.nsu = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nsu"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.celular = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["celular"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.dataAgendamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAgendamento"])
                instance.tipoEvento = NotificacaoSMSBody.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [NotificacaoSMSResponse]
            Decoders.addDecoder(clazz: [NotificacaoSMSResponse].self) { (source: AnyObject) -> [NotificacaoSMSResponse] in
                return Decoders.decode(clazz: [NotificacaoSMSResponse].self, source: source)
            }
			// Decoder for NotificacaoSMSResponse
            Decoders.addDecoder(clazz: NotificacaoSMSResponse.self) { (source: AnyObject) -> NotificacaoSMSResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = NotificacaoSMSResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nsu = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nsu"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.tipoEvento = NotificacaoSMSResponse.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                instance.status = NotificacaoSMSResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.descricaoStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoStatus"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.celular = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["celular"])
                instance.operadora = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["operadora"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.resposta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["resposta"])
                instance.dataAgendamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAgendamento"])
                instance.quantidadeTentativasEnvio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeTentativasEnvio"])
                instance.dataInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInclusao"])
                instance.dataAlteracaoStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAlteracaoStatus"])
                instance.protocolo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["protocolo"])
                return instance
            }
			

			// Decoder for [OperacaoCredorPersist]
            Decoders.addDecoder(clazz: [OperacaoCredorPersist].self) { (source: AnyObject) -> [OperacaoCredorPersist] in
                return Decoders.decode(clazz: [OperacaoCredorPersist].self, source: source)
            }
			// Decoder for OperacaoCredorPersist
            Decoders.addDecoder(clazz: OperacaoCredorPersist.self) { (source: AnyObject) -> OperacaoCredorPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OperacaoCredorPersist()
                instance.idOperacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOperacao"])
                instance.idCredor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCredor"])
                instance.idsProduto = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["idsProduto"])
                instance.remuneracaoPercentual = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["remuneracaoPercentual"])
                instance.remuneracaoFixa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["remuneracaoFixa"])
                instance.periodicidade = OperacaoCredorPersist.Periodicidade(rawValue: (sourceDictionary["periodicidade"] as? String) ?? "") 
                instance.vencimentoPrimeiraParcela = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["vencimentoPrimeiraParcela"])
                instance.diasAfastamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diasAfastamento"])
                instance.fatorMultiplicador = OperacaoCredorPersist.FatorMultiplicador(rawValue: (sourceDictionary["fatorMultiplicador"] as? String) ?? "") 
                instance.flagTaxaFixada = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagTaxaFixada"])
                instance.planoMinimo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoMinimo"])
                instance.planoMaximo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoMaximo"])
                return instance
            }
			

			// Decoder for [OperacaoCredorResponse]
            Decoders.addDecoder(clazz: [OperacaoCredorResponse].self) { (source: AnyObject) -> [OperacaoCredorResponse] in
                return Decoders.decode(clazz: [OperacaoCredorResponse].self, source: source)
            }
			// Decoder for OperacaoCredorResponse
            Decoders.addDecoder(clazz: OperacaoCredorResponse.self) { (source: AnyObject) -> OperacaoCredorResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OperacaoCredorResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idOperacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOperacao"])
                instance.idCredor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCredor"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.remuneracaoPercentual = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["remuneracaoPercentual"])
                instance.remuneracaoFixa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["remuneracaoFixa"])
                instance.periodicidade = OperacaoCredorResponse.Periodicidade(rawValue: (sourceDictionary["periodicidade"] as? String) ?? "") 
                instance.vencimentoPrimeiraParcela = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["vencimentoPrimeiraParcela"])
                instance.diasAfastamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diasAfastamento"])
                instance.fatorMultiplicador = OperacaoCredorResponse.FatorMultiplicador(rawValue: (sourceDictionary["fatorMultiplicador"] as? String) ?? "") 
                instance.flagTaxaFixada = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagTaxaFixada"])
                instance.planoMinimo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoMinimo"])
                instance.planoMaximo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoMaximo"])
                return instance
            }
			

			// Decoder for [OperacaoCredorUpdate]
            Decoders.addDecoder(clazz: [OperacaoCredorUpdate].self) { (source: AnyObject) -> [OperacaoCredorUpdate] in
                return Decoders.decode(clazz: [OperacaoCredorUpdate].self, source: source)
            }
			// Decoder for OperacaoCredorUpdate
            Decoders.addDecoder(clazz: OperacaoCredorUpdate.self) { (source: AnyObject) -> OperacaoCredorUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OperacaoCredorUpdate()
                instance.idOperacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOperacao"])
                instance.idCredor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCredor"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.remuneracaoPercentual = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["remuneracaoPercentual"])
                instance.remuneracaoFixa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["remuneracaoFixa"])
                instance.periodicidade = OperacaoCredorUpdate.Periodicidade(rawValue: (sourceDictionary["periodicidade"] as? String) ?? "") 
                instance.vencimentoPrimeiraParcela = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["vencimentoPrimeiraParcela"])
                instance.diasAfastamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diasAfastamento"])
                instance.fatorMultiplicador = OperacaoCredorUpdate.FatorMultiplicador(rawValue: (sourceDictionary["fatorMultiplicador"] as? String) ?? "") 
                instance.flagTaxaFixada = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagTaxaFixada"])
                instance.planoMinimo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoMinimo"])
                instance.planoMaximo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoMaximo"])
                return instance
            }
			

			// Decoder for [OperacaoResponse]
            Decoders.addDecoder(clazz: [OperacaoResponse].self) { (source: AnyObject) -> [OperacaoResponse] in
                return Decoders.decode(clazz: [OperacaoResponse].self, source: source)
            }
			// Decoder for OperacaoResponse
            Decoders.addDecoder(clazz: OperacaoResponse.self) { (source: AnyObject) -> OperacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OperacaoResponse()
                instance.idOperacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOperacao"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.codigoProcessamentoCancelamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamentoCancelamento"])
                instance.nomeOperacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeOperacao"])
                instance.flagCobraJuros = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCobraJuros"])
                instance.flagCobraTarifa = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCobraTarifa"])
                instance.carencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["carencia"])
                instance.flagPermitirParcelamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagPermitirParcelamento"])
                return instance
            }
			

			// Decoder for [OperadoraResponse]
            Decoders.addDecoder(clazz: [OperadoraResponse].self) { (source: AnyObject) -> [OperadoraResponse] in
                return Decoders.decode(clazz: [OperadoraResponse].self, source: source)
            }
			// Decoder for OperadoraResponse
            Decoders.addDecoder(clazz: OperadoraResponse.self) { (source: AnyObject) -> OperadoraResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OperadoraResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [OportunidadeAUDResponse]
            Decoders.addDecoder(clazz: [OportunidadeAUDResponse].self) { (source: AnyObject) -> [OportunidadeAUDResponse] in
                return Decoders.decode(clazz: [OportunidadeAUDResponse].self, source: source)
            }
			// Decoder for OportunidadeAUDResponse
            Decoders.addDecoder(clazz: OportunidadeAUDResponse.self) { (source: AnyObject) -> OportunidadeAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OportunidadeAUDResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.idStatusOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusOportunidade"])
                instance.dataCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastro"])
                instance.dataAtualizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAtualizacao"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataInicioVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInicioVigencia"])
                instance.dataFimVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFimVigencia"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.revType = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revType"])
                instance.rev = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["rev"])
                return instance
            }
			

			// Decoder for [OportunidadePersist]
            Decoders.addDecoder(clazz: [OportunidadePersist].self) { (source: AnyObject) -> [OportunidadePersist] in
                return Decoders.decode(clazz: [OportunidadePersist].self, source: source)
            }
			// Decoder for OportunidadePersist
            Decoders.addDecoder(clazz: OportunidadePersist.self) { (source: AnyObject) -> OportunidadePersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OportunidadePersist()
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.idStatusOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusOportunidade"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataInicioVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInicioVigencia"])
                instance.dataFimVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFimVigencia"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                return instance
            }
			

			// Decoder for [OportunidadeResponse]
            Decoders.addDecoder(clazz: [OportunidadeResponse].self) { (source: AnyObject) -> [OportunidadeResponse] in
                return Decoders.decode(clazz: [OportunidadeResponse].self, source: source)
            }
			// Decoder for OportunidadeResponse
            Decoders.addDecoder(clazz: OportunidadeResponse.self) { (source: AnyObject) -> OportunidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OportunidadeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.idStatusOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusOportunidade"])
                instance.dataCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastro"])
                instance.dataAtualizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAtualizacao"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataInicioVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInicioVigencia"])
                instance.dataFimVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFimVigencia"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                return instance
            }
			

			// Decoder for [OportunidadeUpdate]
            Decoders.addDecoder(clazz: [OportunidadeUpdate].self) { (source: AnyObject) -> [OportunidadeUpdate] in
                return Decoders.decode(clazz: [OportunidadeUpdate].self, source: source)
            }
			// Decoder for OportunidadeUpdate
            Decoders.addDecoder(clazz: OportunidadeUpdate.self) { (source: AnyObject) -> OportunidadeUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OportunidadeUpdate()
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.idStatusOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusOportunidade"])
                instance.numeroReceitaFederal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroReceitaFederal"])
                instance.dataInicioVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInicioVigencia"])
                instance.dataFimVigencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFimVigencia"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                instance.detalhes = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["detalhes"])
                return instance
            }
			

			// Decoder for [OrigemComercialPersist]
            Decoders.addDecoder(clazz: [OrigemComercialPersist].self) { (source: AnyObject) -> [OrigemComercialPersist] in
                return Decoders.decode(clazz: [OrigemComercialPersist].self, source: source)
            }
			// Decoder for OrigemComercialPersist
            Decoders.addDecoder(clazz: OrigemComercialPersist.self) { (source: AnyObject) -> OrigemComercialPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrigemComercialPersist()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.idTipoOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOrigemComercial"])
                instance.idGrupoOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idGrupoOrigemComercial"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                instance.flagPreAprovado = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagPreAprovado"])
                instance.flagAprovacaoImediata = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAprovacaoImediata"])
                instance.nomeFantasiaPlastico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasiaPlastico"])
                instance.flagCartaoProvisorio = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCartaoProvisorio"])
                instance.flagCartaoDefinitivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCartaoDefinitivo"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                instance.flagOrigemExterna = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagOrigemExterna"])
                instance.flagModificado = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagModificado"])
                instance.flagEnviaFaturaUsuario = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagEnviaFaturaUsuario"])
                instance.flagCreditoFaturamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCreditoFaturamento"])
                instance.flagConcedeLimiteProvisorio = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagConcedeLimiteProvisorio"])
                instance.flagDigitalizarDoc = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagDigitalizarDoc"])
                instance.flagEmbossingLoja = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagEmbossingLoja"])
                instance.flagConsultaPrevia = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagConsultaPrevia"])
                instance.tipoPessoa = OrigemComercialPersist.TipoPessoa(rawValue: (sourceDictionary["tipoPessoa"] as? String) ?? "") 
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                return instance
            }
			

			// Decoder for [OrigemComercialResponse]
            Decoders.addDecoder(clazz: [OrigemComercialResponse].self) { (source: AnyObject) -> [OrigemComercialResponse] in
                return Decoders.decode(clazz: [OrigemComercialResponse].self, source: source)
            }
			// Decoder for OrigemComercialResponse
            Decoders.addDecoder(clazz: OrigemComercialResponse.self) { (source: AnyObject) -> OrigemComercialResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrigemComercialResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.produtosOrigem = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["produtosOrigem"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.idTipoOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOrigemComercial"])
                instance.nomeTipoOrigemComercial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeTipoOrigemComercial"])
                instance.idGrupoOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idGrupoOrigemComercial"])
                instance.nomeGrupoOrigemComercial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeGrupoOrigemComercial"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                instance.flagPreAprovado = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagPreAprovado"])
                instance.flagAprovacaoImediata = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAprovacaoImediata"])
                instance.nomeFantasiaPlastico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasiaPlastico"])
                instance.flagCartaoProvisorio = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCartaoProvisorio"])
                instance.flagCartaoDefinitivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCartaoDefinitivo"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                instance.flagOrigemExterna = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagOrigemExterna"])
                instance.flagModificado = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagModificado"])
                instance.flagEnviaFaturaUsuario = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagEnviaFaturaUsuario"])
                instance.flagCreditoFaturamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCreditoFaturamento"])
                instance.flagConcedeLimiteProvisorio = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagConcedeLimiteProvisorio"])
                instance.flagDigitalizarDoc = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagDigitalizarDoc"])
                instance.flagEmbossingLoja = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagEmbossingLoja"])
                instance.flagConsultaPrevia = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagConsultaPrevia"])
                instance.tipoPessoa = OrigemComercialResponse.TipoPessoa(rawValue: (sourceDictionary["tipoPessoa"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [OrigemComercialUpdate]
            Decoders.addDecoder(clazz: [OrigemComercialUpdate].self) { (source: AnyObject) -> [OrigemComercialUpdate] in
                return Decoders.decode(clazz: [OrigemComercialUpdate].self, source: source)
            }
			// Decoder for OrigemComercialUpdate
            Decoders.addDecoder(clazz: OrigemComercialUpdate.self) { (source: AnyObject) -> OrigemComercialUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrigemComercialUpdate()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.idTipoOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOrigemComercial"])
                instance.idGrupoOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idGrupoOrigemComercial"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                instance.flagPreAprovado = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagPreAprovado"])
                instance.flagAprovacaoImediata = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAprovacaoImediata"])
                instance.nomeFantasiaPlastico = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasiaPlastico"])
                instance.flagCartaoProvisorio = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCartaoProvisorio"])
                instance.flagCartaoDefinitivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCartaoDefinitivo"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                instance.flagOrigemExterna = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagOrigemExterna"])
                instance.flagModificado = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagModificado"])
                instance.flagEnviaFaturaUsuario = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagEnviaFaturaUsuario"])
                instance.flagCreditoFaturamento = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagCreditoFaturamento"])
                instance.flagConcedeLimiteProvisorio = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagConcedeLimiteProvisorio"])
                instance.flagDigitalizarDoc = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagDigitalizarDoc"])
                instance.flagEmbossingLoja = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagEmbossingLoja"])
                instance.flagConsultaPrevia = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagConsultaPrevia"])
                instance.tipoPessoa = OrigemComercialUpdate.TipoPessoa(rawValue: (sourceDictionary["tipoPessoa"] as? String) ?? "") 
                return instance
            }
			

			// Decoder for [PageAjusteResponse]
            Decoders.addDecoder(clazz: [PageAjusteResponse].self) { (source: AnyObject) -> [PageAjusteResponse] in
                return Decoders.decode(clazz: [PageAjusteResponse].self, source: source)
            }
			// Decoder for PageAjusteResponse
            Decoders.addDecoder(clazz: PageAjusteResponse.self) { (source: AnyObject) -> PageAjusteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageAjusteResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageAnuidadeResponse]
            Decoders.addDecoder(clazz: [PageAnuidadeResponse].self) { (source: AnyObject) -> [PageAnuidadeResponse] in
                return Decoders.decode(clazz: [PageAnuidadeResponse].self, source: source)
            }
			// Decoder for PageAnuidadeResponse
            Decoders.addDecoder(clazz: PageAnuidadeResponse.self) { (source: AnyObject) -> PageAnuidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageAnuidadeResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageAplicacaoMobileResponse]
            Decoders.addDecoder(clazz: [PageAplicacaoMobileResponse].self) { (source: AnyObject) -> [PageAplicacaoMobileResponse] in
                return Decoders.decode(clazz: [PageAplicacaoMobileResponse].self, source: source)
            }
			// Decoder for PageAplicacaoMobileResponse
            Decoders.addDecoder(clazz: PageAplicacaoMobileResponse.self) { (source: AnyObject) -> PageAplicacaoMobileResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageAplicacaoMobileResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageArquivoAUDResponse]
            Decoders.addDecoder(clazz: [PageArquivoAUDResponse].self) { (source: AnyObject) -> [PageArquivoAUDResponse] in
                return Decoders.decode(clazz: [PageArquivoAUDResponse].self, source: source)
            }
			// Decoder for PageArquivoAUDResponse
            Decoders.addDecoder(clazz: PageArquivoAUDResponse.self) { (source: AnyObject) -> PageArquivoAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageArquivoAUDResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageArquivoResponse]
            Decoders.addDecoder(clazz: [PageArquivoResponse].self) { (source: AnyObject) -> [PageArquivoResponse] in
                return Decoders.decode(clazz: [PageArquivoResponse].self, source: source)
            }
			// Decoder for PageArquivoResponse
            Decoders.addDecoder(clazz: PageArquivoResponse.self) { (source: AnyObject) -> PageArquivoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageArquivoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageAtendimentoClienteResponse]
            Decoders.addDecoder(clazz: [PageAtendimentoClienteResponse].self) { (source: AnyObject) -> [PageAtendimentoClienteResponse] in
                return Decoders.decode(clazz: [PageAtendimentoClienteResponse].self, source: source)
            }
			// Decoder for PageAtendimentoClienteResponse
            Decoders.addDecoder(clazz: PageAtendimentoClienteResponse.self) { (source: AnyObject) -> PageAtendimentoClienteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageAtendimentoClienteResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageAvisoViagemResponse]
            Decoders.addDecoder(clazz: [PageAvisoViagemResponse].self) { (source: AnyObject) -> [PageAvisoViagemResponse] in
                return Decoders.decode(clazz: [PageAvisoViagemResponse].self, source: source)
            }
			// Decoder for PageAvisoViagemResponse
            Decoders.addDecoder(clazz: PageAvisoViagemResponse.self) { (source: AnyObject) -> PageAvisoViagemResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageAvisoViagemResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageBancoResponse]
            Decoders.addDecoder(clazz: [PageBancoResponse].self) { (source: AnyObject) -> [PageBancoResponse] in
                return Decoders.decode(clazz: [PageBancoResponse].self, source: source)
            }
			// Decoder for PageBancoResponse
            Decoders.addDecoder(clazz: PageBancoResponse.self) { (source: AnyObject) -> PageBancoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageBancoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageBaseResponse]
            Decoders.addDecoder(clazz: [PageBaseResponse].self) { (source: AnyObject) -> [PageBaseResponse] in
                return Decoders.decode(clazz: [PageBaseResponse].self, source: source)
            }
			// Decoder for PageBaseResponse
            Decoders.addDecoder(clazz: PageBaseResponse.self) { (source: AnyObject) -> PageBaseResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageBaseResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageCampanhaResponse]
            Decoders.addDecoder(clazz: [PageCampanhaResponse].self) { (source: AnyObject) -> [PageCampanhaResponse] in
                return Decoders.decode(clazz: [PageCampanhaResponse].self, source: source)
            }
			// Decoder for PageCampanhaResponse
            Decoders.addDecoder(clazz: PageCampanhaResponse.self) { (source: AnyObject) -> PageCampanhaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageCampanhaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageCampoCodificadoDescricaoResponse]
            Decoders.addDecoder(clazz: [PageCampoCodificadoDescricaoResponse].self) { (source: AnyObject) -> [PageCampoCodificadoDescricaoResponse] in
                return Decoders.decode(clazz: [PageCampoCodificadoDescricaoResponse].self, source: source)
            }
			// Decoder for PageCampoCodificadoDescricaoResponse
            Decoders.addDecoder(clazz: PageCampoCodificadoDescricaoResponse.self) { (source: AnyObject) -> PageCampoCodificadoDescricaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageCampoCodificadoDescricaoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageCartaoPayResponse]
            Decoders.addDecoder(clazz: [PageCartaoPayResponse].self) { (source: AnyObject) -> [PageCartaoPayResponse] in
                return Decoders.decode(clazz: [PageCartaoPayResponse].self, source: source)
            }
			// Decoder for PageCartaoPayResponse
            Decoders.addDecoder(clazz: PageCartaoPayResponse.self) { (source: AnyObject) -> PageCartaoPayResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageCartaoPayResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageCartaoResponse]
            Decoders.addDecoder(clazz: [PageCartaoResponse].self) { (source: AnyObject) -> [PageCartaoResponse] in
                return Decoders.decode(clazz: [PageCartaoResponse].self, source: source)
            }
			// Decoder for PageCartaoResponse
            Decoders.addDecoder(clazz: PageCartaoResponse.self) { (source: AnyObject) -> PageCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageCartaoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageCodigoSegurancaResponse]
            Decoders.addDecoder(clazz: [PageCodigoSegurancaResponse].self) { (source: AnyObject) -> [PageCodigoSegurancaResponse] in
                return Decoders.decode(clazz: [PageCodigoSegurancaResponse].self, source: source)
            }
			// Decoder for PageCodigoSegurancaResponse
            Decoders.addDecoder(clazz: PageCodigoSegurancaResponse.self) { (source: AnyObject) -> PageCodigoSegurancaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageCodigoSegurancaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageCompraResponse]
            Decoders.addDecoder(clazz: [PageCompraResponse].self) { (source: AnyObject) -> [PageCompraResponse] in
                return Decoders.decode(clazz: [PageCompraResponse].self, source: source)
            }
			// Decoder for PageCompraResponse
            Decoders.addDecoder(clazz: PageCompraResponse.self) { (source: AnyObject) -> PageCompraResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageCompraResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageConfiguracaoEmailResponse]
            Decoders.addDecoder(clazz: [PageConfiguracaoEmailResponse].self) { (source: AnyObject) -> [PageConfiguracaoEmailResponse] in
                return Decoders.decode(clazz: [PageConfiguracaoEmailResponse].self, source: source)
            }
			// Decoder for PageConfiguracaoEmailResponse
            Decoders.addDecoder(clazz: PageConfiguracaoEmailResponse.self) { (source: AnyObject) -> PageConfiguracaoEmailResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageConfiguracaoEmailResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageConfiguracaoRotativoResponse]
            Decoders.addDecoder(clazz: [PageConfiguracaoRotativoResponse].self) { (source: AnyObject) -> [PageConfiguracaoRotativoResponse] in
                return Decoders.decode(clazz: [PageConfiguracaoRotativoResponse].self, source: source)
            }
			// Decoder for PageConfiguracaoRotativoResponse
            Decoders.addDecoder(clazz: PageConfiguracaoRotativoResponse.self) { (source: AnyObject) -> PageConfiguracaoRotativoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageConfiguracaoRotativoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageContaBancariaPortadorResponse]
            Decoders.addDecoder(clazz: [PageContaBancariaPortadorResponse].self) { (source: AnyObject) -> [PageContaBancariaPortadorResponse] in
                return Decoders.decode(clazz: [PageContaBancariaPortadorResponse].self, source: source)
            }
			// Decoder for PageContaBancariaPortadorResponse
            Decoders.addDecoder(clazz: PageContaBancariaPortadorResponse.self) { (source: AnyObject) -> PageContaBancariaPortadorResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageContaBancariaPortadorResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageContaDetalheResponse]
            Decoders.addDecoder(clazz: [PageContaDetalheResponse].self) { (source: AnyObject) -> [PageContaDetalheResponse] in
                return Decoders.decode(clazz: [PageContaDetalheResponse].self, source: source)
            }
			// Decoder for PageContaDetalheResponse
            Decoders.addDecoder(clazz: PageContaDetalheResponse.self) { (source: AnyObject) -> PageContaDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageContaDetalheResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageContaHistoricoPagamentoResponse]
            Decoders.addDecoder(clazz: [PageContaHistoricoPagamentoResponse].self) { (source: AnyObject) -> [PageContaHistoricoPagamentoResponse] in
                return Decoders.decode(clazz: [PageContaHistoricoPagamentoResponse].self, source: source)
            }
			// Decoder for PageContaHistoricoPagamentoResponse
            Decoders.addDecoder(clazz: PageContaHistoricoPagamentoResponse.self) { (source: AnyObject) -> PageContaHistoricoPagamentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageContaHistoricoPagamentoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageContaResponse]
            Decoders.addDecoder(clazz: [PageContaResponse].self) { (source: AnyObject) -> [PageContaResponse] in
                return Decoders.decode(clazz: [PageContaResponse].self, source: source)
            }
			// Decoder for PageContaResponse
            Decoders.addDecoder(clazz: PageContaResponse.self) { (source: AnyObject) -> PageContaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageContaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageControleVencimentoResponse]
            Decoders.addDecoder(clazz: [PageControleVencimentoResponse].self) { (source: AnyObject) -> [PageControleVencimentoResponse] in
                return Decoders.decode(clazz: [PageControleVencimentoResponse].self, source: source)
            }
			// Decoder for PageControleVencimentoResponse
            Decoders.addDecoder(clazz: PageControleVencimentoResponse.self) { (source: AnyObject) -> PageControleVencimentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageControleVencimentoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageDispositivoResponse]
            Decoders.addDecoder(clazz: [PageDispositivoResponse].self) { (source: AnyObject) -> [PageDispositivoResponse] in
                return Decoders.decode(clazz: [PageDispositivoResponse].self, source: source)
            }
			// Decoder for PageDispositivoResponse
            Decoders.addDecoder(clazz: PageDispositivoResponse.self) { (source: AnyObject) -> PageDispositivoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageDispositivoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageDocumentoResponse]
            Decoders.addDecoder(clazz: [PageDocumentoResponse].self) { (source: AnyObject) -> [PageDocumentoResponse] in
                return Decoders.decode(clazz: [PageDocumentoResponse].self, source: source)
            }
			// Decoder for PageDocumentoResponse
            Decoders.addDecoder(clazz: PageDocumentoResponse.self) { (source: AnyObject) -> PageDocumentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageDocumentoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageDocumentoTemplateResponse]
            Decoders.addDecoder(clazz: [PageDocumentoTemplateResponse].self) { (source: AnyObject) -> [PageDocumentoTemplateResponse] in
                return Decoders.decode(clazz: [PageDocumentoTemplateResponse].self, source: source)
            }
			// Decoder for PageDocumentoTemplateResponse
            Decoders.addDecoder(clazz: PageDocumentoTemplateResponse.self) { (source: AnyObject) -> PageDocumentoTemplateResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageDocumentoTemplateResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageEnderecoResponse]
            Decoders.addDecoder(clazz: [PageEnderecoResponse].self) { (source: AnyObject) -> [PageEnderecoResponse] in
                return Decoders.decode(clazz: [PageEnderecoResponse].self, source: source)
            }
			// Decoder for PageEnderecoResponse
            Decoders.addDecoder(clazz: PageEnderecoResponse.self) { (source: AnyObject) -> PageEnderecoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageEnderecoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageEntidadeResponse]
            Decoders.addDecoder(clazz: [PageEntidadeResponse].self) { (source: AnyObject) -> [PageEntidadeResponse] in
                return Decoders.decode(clazz: [PageEntidadeResponse].self, source: source)
            }
			// Decoder for PageEntidadeResponse
            Decoders.addDecoder(clazz: PageEntidadeResponse.self) { (source: AnyObject) -> PageEntidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageEntidadeResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageEstabelecimentoResponse]
            Decoders.addDecoder(clazz: [PageEstabelecimentoResponse].self) { (source: AnyObject) -> [PageEstabelecimentoResponse] in
                return Decoders.decode(clazz: [PageEstabelecimentoResponse].self, source: source)
            }
			// Decoder for PageEstabelecimentoResponse
            Decoders.addDecoder(clazz: PageEstabelecimentoResponse.self) { (source: AnyObject) -> PageEstabelecimentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageEstabelecimentoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageEstagioCartaoResponse]
            Decoders.addDecoder(clazz: [PageEstagioCartaoResponse].self) { (source: AnyObject) -> [PageEstagioCartaoResponse] in
                return Decoders.decode(clazz: [PageEstagioCartaoResponse].self, source: source)
            }
			// Decoder for PageEstagioCartaoResponse
            Decoders.addDecoder(clazz: PageEstagioCartaoResponse.self) { (source: AnyObject) -> PageEstagioCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageEstagioCartaoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageFantasiaBasicaResponse]
            Decoders.addDecoder(clazz: [PageFantasiaBasicaResponse].self) { (source: AnyObject) -> [PageFantasiaBasicaResponse] in
                return Decoders.decode(clazz: [PageFantasiaBasicaResponse].self, source: source)
            }
			// Decoder for PageFantasiaBasicaResponse
            Decoders.addDecoder(clazz: PageFantasiaBasicaResponse.self) { (source: AnyObject) -> PageFantasiaBasicaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageFantasiaBasicaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageFaqResponse]
            Decoders.addDecoder(clazz: [PageFaqResponse].self) { (source: AnyObject) -> [PageFaqResponse] in
                return Decoders.decode(clazz: [PageFaqResponse].self, source: source)
            }
			// Decoder for PageFaqResponse
            Decoders.addDecoder(clazz: PageFaqResponse.self) { (source: AnyObject) -> PageFaqResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageFaqResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageFaturaConsignadaResponse]
            Decoders.addDecoder(clazz: [PageFaturaConsignadaResponse].self) { (source: AnyObject) -> [PageFaturaConsignadaResponse] in
                return Decoders.decode(clazz: [PageFaturaConsignadaResponse].self, source: source)
            }
			// Decoder for PageFaturaConsignadaResponse
            Decoders.addDecoder(clazz: PageFaturaConsignadaResponse.self) { (source: AnyObject) -> PageFaturaConsignadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageFaturaConsignadaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageFaturaFechadaResponse]
            Decoders.addDecoder(clazz: [PageFaturaFechadaResponse].self) { (source: AnyObject) -> [PageFaturaFechadaResponse] in
                return Decoders.decode(clazz: [PageFaturaFechadaResponse].self, source: source)
            }
			// Decoder for PageFaturaFechadaResponse
            Decoders.addDecoder(clazz: PageFaturaFechadaResponse.self) { (source: AnyObject) -> PageFaturaFechadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageFaturaFechadaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageFaturaResponse]
            Decoders.addDecoder(clazz: [PageFaturaResponse].self) { (source: AnyObject) -> [PageFaturaResponse] in
                return Decoders.decode(clazz: [PageFaturaResponse].self, source: source)
            }
			// Decoder for PageFaturaResponse
            Decoders.addDecoder(clazz: PageFaturaResponse.self) { (source: AnyObject) -> PageFaturaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageFaturaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageGrupoEconomicoResponse]
            Decoders.addDecoder(clazz: [PageGrupoEconomicoResponse].self) { (source: AnyObject) -> [PageGrupoEconomicoResponse] in
                return Decoders.decode(clazz: [PageGrupoEconomicoResponse].self, source: source)
            }
			// Decoder for PageGrupoEconomicoResponse
            Decoders.addDecoder(clazz: PageGrupoEconomicoResponse.self) { (source: AnyObject) -> PageGrupoEconomicoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageGrupoEconomicoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageHistoricoAssessoriaResponse]
            Decoders.addDecoder(clazz: [PageHistoricoAssessoriaResponse].self) { (source: AnyObject) -> [PageHistoricoAssessoriaResponse] in
                return Decoders.decode(clazz: [PageHistoricoAssessoriaResponse].self, source: source)
            }
			// Decoder for PageHistoricoAssessoriaResponse
            Decoders.addDecoder(clazz: PageHistoricoAssessoriaResponse.self) { (source: AnyObject) -> PageHistoricoAssessoriaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageHistoricoAssessoriaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageHistoricoAtrasoFaturaResponse]
            Decoders.addDecoder(clazz: [PageHistoricoAtrasoFaturaResponse].self) { (source: AnyObject) -> [PageHistoricoAtrasoFaturaResponse] in
                return Decoders.decode(clazz: [PageHistoricoAtrasoFaturaResponse].self, source: source)
            }
			// Decoder for PageHistoricoAtrasoFaturaResponse
            Decoders.addDecoder(clazz: PageHistoricoAtrasoFaturaResponse.self) { (source: AnyObject) -> PageHistoricoAtrasoFaturaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageHistoricoAtrasoFaturaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageHistoricoEventosResponse]
            Decoders.addDecoder(clazz: [PageHistoricoEventosResponse].self) { (source: AnyObject) -> [PageHistoricoEventosResponse] in
                return Decoders.decode(clazz: [PageHistoricoEventosResponse].self, source: source)
            }
			// Decoder for PageHistoricoEventosResponse
            Decoders.addDecoder(clazz: PageHistoricoEventosResponse.self) { (source: AnyObject) -> PageHistoricoEventosResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageHistoricoEventosResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageHistoricoPagamentoResponse]
            Decoders.addDecoder(clazz: [PageHistoricoPagamentoResponse].self) { (source: AnyObject) -> [PageHistoricoPagamentoResponse] in
                return Decoders.decode(clazz: [PageHistoricoPagamentoResponse].self, source: source)
            }
			// Decoder for PageHistoricoPagamentoResponse
            Decoders.addDecoder(clazz: PageHistoricoPagamentoResponse.self) { (source: AnyObject) -> PageHistoricoPagamentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageHistoricoPagamentoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageJobResponse]
            Decoders.addDecoder(clazz: [PageJobResponse].self) { (source: AnyObject) -> [PageJobResponse] in
                return Decoders.decode(clazz: [PageJobResponse].self, source: source)
            }
			// Decoder for PageJobResponse
            Decoders.addDecoder(clazz: PageJobResponse.self) { (source: AnyObject) -> PageJobResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageJobResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageLoteCartoesPrePagosResponse]
            Decoders.addDecoder(clazz: [PageLoteCartoesPrePagosResponse].self) { (source: AnyObject) -> [PageLoteCartoesPrePagosResponse] in
                return Decoders.decode(clazz: [PageLoteCartoesPrePagosResponse].self, source: source)
            }
			// Decoder for PageLoteCartoesPrePagosResponse
            Decoders.addDecoder(clazz: PageLoteCartoesPrePagosResponse.self) { (source: AnyObject) -> PageLoteCartoesPrePagosResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageLoteCartoesPrePagosResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageMCCResponse]
            Decoders.addDecoder(clazz: [PageMCCResponse].self) { (source: AnyObject) -> [PageMCCResponse] in
                return Decoders.decode(clazz: [PageMCCResponse].self, source: source)
            }
			// Decoder for PageMCCResponse
            Decoders.addDecoder(clazz: PageMCCResponse.self) { (source: AnyObject) -> PageMCCResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageMCCResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageMaquinetaResponse]
            Decoders.addDecoder(clazz: [PageMaquinetaResponse].self) { (source: AnyObject) -> [PageMaquinetaResponse] in
                return Decoders.decode(clazz: [PageMaquinetaResponse].self, source: source)
            }
			// Decoder for PageMaquinetaResponse
            Decoders.addDecoder(clazz: PageMaquinetaResponse.self) { (source: AnyObject) -> PageMaquinetaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageMaquinetaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageMoedaResponse]
            Decoders.addDecoder(clazz: [PageMoedaResponse].self) { (source: AnyObject) -> [PageMoedaResponse] in
                return Decoders.decode(clazz: [PageMoedaResponse].self, source: source)
            }
			// Decoder for PageMoedaResponse
            Decoders.addDecoder(clazz: PageMoedaResponse.self) { (source: AnyObject) -> PageMoedaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageMoedaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageOperacaoCredorResponse]
            Decoders.addDecoder(clazz: [PageOperacaoCredorResponse].self) { (source: AnyObject) -> [PageOperacaoCredorResponse] in
                return Decoders.decode(clazz: [PageOperacaoCredorResponse].self, source: source)
            }
			// Decoder for PageOperacaoCredorResponse
            Decoders.addDecoder(clazz: PageOperacaoCredorResponse.self) { (source: AnyObject) -> PageOperacaoCredorResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageOperacaoCredorResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageOperacaoResponse]
            Decoders.addDecoder(clazz: [PageOperacaoResponse].self) { (source: AnyObject) -> [PageOperacaoResponse] in
                return Decoders.decode(clazz: [PageOperacaoResponse].self, source: source)
            }
			// Decoder for PageOperacaoResponse
            Decoders.addDecoder(clazz: PageOperacaoResponse.self) { (source: AnyObject) -> PageOperacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageOperacaoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageOperadoraResponse]
            Decoders.addDecoder(clazz: [PageOperadoraResponse].self) { (source: AnyObject) -> [PageOperadoraResponse] in
                return Decoders.decode(clazz: [PageOperadoraResponse].self, source: source)
            }
			// Decoder for PageOperadoraResponse
            Decoders.addDecoder(clazz: PageOperadoraResponse.self) { (source: AnyObject) -> PageOperadoraResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageOperadoraResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageOportunidadeAUDResponse]
            Decoders.addDecoder(clazz: [PageOportunidadeAUDResponse].self) { (source: AnyObject) -> [PageOportunidadeAUDResponse] in
                return Decoders.decode(clazz: [PageOportunidadeAUDResponse].self, source: source)
            }
			// Decoder for PageOportunidadeAUDResponse
            Decoders.addDecoder(clazz: PageOportunidadeAUDResponse.self) { (source: AnyObject) -> PageOportunidadeAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageOportunidadeAUDResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageOportunidadeResponse]
            Decoders.addDecoder(clazz: [PageOportunidadeResponse].self) { (source: AnyObject) -> [PageOportunidadeResponse] in
                return Decoders.decode(clazz: [PageOportunidadeResponse].self, source: source)
            }
			// Decoder for PageOportunidadeResponse
            Decoders.addDecoder(clazz: PageOportunidadeResponse.self) { (source: AnyObject) -> PageOportunidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageOportunidadeResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageOrigemComercialResponse]
            Decoders.addDecoder(clazz: [PageOrigemComercialResponse].self) { (source: AnyObject) -> [PageOrigemComercialResponse] in
                return Decoders.decode(clazz: [PageOrigemComercialResponse].self, source: source)
            }
			// Decoder for PageOrigemComercialResponse
            Decoders.addDecoder(clazz: PageOrigemComercialResponse.self) { (source: AnyObject) -> PageOrigemComercialResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageOrigemComercialResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePaisResponse]
            Decoders.addDecoder(clazz: [PagePaisResponse].self) { (source: AnyObject) -> [PagePaisResponse] in
                return Decoders.decode(clazz: [PagePaisResponse].self, source: source)
            }
			// Decoder for PagePaisResponse
            Decoders.addDecoder(clazz: PagePaisResponse.self) { (source: AnyObject) -> PagePaisResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePaisResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePessoaDetalheResponse]
            Decoders.addDecoder(clazz: [PagePessoaDetalheResponse].self) { (source: AnyObject) -> [PagePessoaDetalheResponse] in
                return Decoders.decode(clazz: [PagePessoaDetalheResponse].self, source: source)
            }
			// Decoder for PagePessoaDetalheResponse
            Decoders.addDecoder(clazz: PagePessoaDetalheResponse.self) { (source: AnyObject) -> PagePessoaDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePessoaDetalheResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePessoaResponse]
            Decoders.addDecoder(clazz: [PagePessoaResponse].self) { (source: AnyObject) -> [PagePessoaResponse] in
                return Decoders.decode(clazz: [PagePessoaResponse].self, source: source)
            }
			// Decoder for PagePessoaResponse
            Decoders.addDecoder(clazz: PagePessoaResponse.self) { (source: AnyObject) -> PagePessoaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePessoaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePlanoParcelamentoResponse]
            Decoders.addDecoder(clazz: [PagePlanoParcelamentoResponse].self) { (source: AnyObject) -> [PagePlanoParcelamentoResponse] in
                return Decoders.decode(clazz: [PagePlanoParcelamentoResponse].self, source: source)
            }
			// Decoder for PagePlanoParcelamentoResponse
            Decoders.addDecoder(clazz: PagePlanoParcelamentoResponse.self) { (source: AnyObject) -> PagePlanoParcelamentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePlanoParcelamentoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePlataformaMobileResponse]
            Decoders.addDecoder(clazz: [PagePlataformaMobileResponse].self) { (source: AnyObject) -> [PagePlataformaMobileResponse] in
                return Decoders.decode(clazz: [PagePlataformaMobileResponse].self, source: source)
            }
			// Decoder for PagePlataformaMobileResponse
            Decoders.addDecoder(clazz: PagePlataformaMobileResponse.self) { (source: AnyObject) -> PagePlataformaMobileResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePlataformaMobileResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePortadorResponse]
            Decoders.addDecoder(clazz: [PagePortadorResponse].self) { (source: AnyObject) -> [PagePortadorResponse] in
                return Decoders.decode(clazz: [PagePortadorResponse].self, source: source)
            }
			// Decoder for PagePortadorResponse
            Decoders.addDecoder(clazz: PagePortadorResponse.self) { (source: AnyObject) -> PagePortadorResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePortadorResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageProdutoResponse]
            Decoders.addDecoder(clazz: [PageProdutoResponse].self) { (source: AnyObject) -> [PageProdutoResponse] in
                return Decoders.decode(clazz: [PageProdutoResponse].self, source: source)
            }
			// Decoder for PageProdutoResponse
            Decoders.addDecoder(clazz: PageProdutoResponse.self) { (source: AnyObject) -> PageProdutoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageProdutoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePromotorResponse]
            Decoders.addDecoder(clazz: [PagePromotorResponse].self) { (source: AnyObject) -> [PagePromotorResponse] in
                return Decoders.decode(clazz: [PagePromotorResponse].self, source: source)
            }
			// Decoder for PagePromotorResponse
            Decoders.addDecoder(clazz: PagePromotorResponse.self) { (source: AnyObject) -> PagePromotorResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePromotorResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PagePushResponse]
            Decoders.addDecoder(clazz: [PagePushResponse].self) { (source: AnyObject) -> [PagePushResponse] in
                return Decoders.decode(clazz: [PagePushResponse].self, source: source)
            }
			// Decoder for PagePushResponse
            Decoders.addDecoder(clazz: PagePushResponse.self) { (source: AnyObject) -> PagePushResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PagePushResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageRiscoFraudeResponse]
            Decoders.addDecoder(clazz: [PageRiscoFraudeResponse].self) { (source: AnyObject) -> [PageRiscoFraudeResponse] in
                return Decoders.decode(clazz: [PageRiscoFraudeResponse].self, source: source)
            }
			// Decoder for PageRiscoFraudeResponse
            Decoders.addDecoder(clazz: PageRiscoFraudeResponse.self) { (source: AnyObject) -> PageRiscoFraudeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageRiscoFraudeResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageSMSResponse]
            Decoders.addDecoder(clazz: [PageSMSResponse].self) { (source: AnyObject) -> [PageSMSResponse] in
                return Decoders.decode(clazz: [PageSMSResponse].self, source: source)
            }
			// Decoder for PageSMSResponse
            Decoders.addDecoder(clazz: PageSMSResponse.self) { (source: AnyObject) -> PageSMSResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageSMSResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageStatusCartaoResponse]
            Decoders.addDecoder(clazz: [PageStatusCartaoResponse].self) { (source: AnyObject) -> [PageStatusCartaoResponse] in
                return Decoders.decode(clazz: [PageStatusCartaoResponse].self, source: source)
            }
			// Decoder for PageStatusCartaoResponse
            Decoders.addDecoder(clazz: PageStatusCartaoResponse.self) { (source: AnyObject) -> PageStatusCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageStatusCartaoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageStatusContaResponse]
            Decoders.addDecoder(clazz: [PageStatusContaResponse].self) { (source: AnyObject) -> [PageStatusContaResponse] in
                return Decoders.decode(clazz: [PageStatusContaResponse].self, source: source)
            }
			// Decoder for PageStatusContaResponse
            Decoders.addDecoder(clazz: PageStatusContaResponse.self) { (source: AnyObject) -> PageStatusContaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageStatusContaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageStatusImpressaoResponse]
            Decoders.addDecoder(clazz: [PageStatusImpressaoResponse].self) { (source: AnyObject) -> [PageStatusImpressaoResponse] in
                return Decoders.decode(clazz: [PageStatusImpressaoResponse].self, source: source)
            }
			// Decoder for PageStatusImpressaoResponse
            Decoders.addDecoder(clazz: PageStatusImpressaoResponse.self) { (source: AnyObject) -> PageStatusImpressaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageStatusImpressaoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageStatusOportunidadeAUDResponse]
            Decoders.addDecoder(clazz: [PageStatusOportunidadeAUDResponse].self) { (source: AnyObject) -> [PageStatusOportunidadeAUDResponse] in
                return Decoders.decode(clazz: [PageStatusOportunidadeAUDResponse].self, source: source)
            }
			// Decoder for PageStatusOportunidadeAUDResponse
            Decoders.addDecoder(clazz: PageStatusOportunidadeAUDResponse.self) { (source: AnyObject) -> PageStatusOportunidadeAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageStatusOportunidadeAUDResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageStatusOportunidadeResponse]
            Decoders.addDecoder(clazz: [PageStatusOportunidadeResponse].self) { (source: AnyObject) -> [PageStatusOportunidadeResponse] in
                return Decoders.decode(clazz: [PageStatusOportunidadeResponse].self, source: source)
            }
			// Decoder for PageStatusOportunidadeResponse
            Decoders.addDecoder(clazz: PageStatusOportunidadeResponse.self) { (source: AnyObject) -> PageStatusOportunidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageStatusOportunidadeResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTaxasRefinanciamentoResponse]
            Decoders.addDecoder(clazz: [PageTaxasRefinanciamentoResponse].self) { (source: AnyObject) -> [PageTaxasRefinanciamentoResponse] in
                return Decoders.decode(clazz: [PageTaxasRefinanciamentoResponse].self, source: source)
            }
			// Decoder for PageTaxasRefinanciamentoResponse
            Decoders.addDecoder(clazz: PageTaxasRefinanciamentoResponse.self) { (source: AnyObject) -> PageTaxasRefinanciamentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTaxasRefinanciamentoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTelefoneEstabelecimentoResponse]
            Decoders.addDecoder(clazz: [PageTelefoneEstabelecimentoResponse].self) { (source: AnyObject) -> [PageTelefoneEstabelecimentoResponse] in
                return Decoders.decode(clazz: [PageTelefoneEstabelecimentoResponse].self, source: source)
            }
			// Decoder for PageTelefoneEstabelecimentoResponse
            Decoders.addDecoder(clazz: PageTelefoneEstabelecimentoResponse.self) { (source: AnyObject) -> PageTelefoneEstabelecimentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTelefoneEstabelecimentoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTelefoneResponse]
            Decoders.addDecoder(clazz: [PageTelefoneResponse].self) { (source: AnyObject) -> [PageTelefoneResponse] in
                return Decoders.decode(clazz: [PageTelefoneResponse].self, source: source)
            }
			// Decoder for PageTelefoneResponse
            Decoders.addDecoder(clazz: PageTelefoneResponse.self) { (source: AnyObject) -> PageTelefoneResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTelefoneResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTemplateNotificacaoResponse]
            Decoders.addDecoder(clazz: [PageTemplateNotificacaoResponse].self) { (source: AnyObject) -> [PageTemplateNotificacaoResponse] in
                return Decoders.decode(clazz: [PageTemplateNotificacaoResponse].self, source: source)
            }
			// Decoder for PageTemplateNotificacaoResponse
            Decoders.addDecoder(clazz: PageTemplateNotificacaoResponse.self) { (source: AnyObject) -> PageTemplateNotificacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTemplateNotificacaoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTerminalResponse]
            Decoders.addDecoder(clazz: [PageTerminalResponse].self) { (source: AnyObject) -> [PageTerminalResponse] in
                return Decoders.decode(clazz: [PageTerminalResponse].self, source: source)
            }
			// Decoder for PageTerminalResponse
            Decoders.addDecoder(clazz: PageTerminalResponse.self) { (source: AnyObject) -> PageTerminalResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTerminalResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoAjusteResponse]
            Decoders.addDecoder(clazz: [PageTipoAjusteResponse].self) { (source: AnyObject) -> [PageTipoAjusteResponse] in
                return Decoders.decode(clazz: [PageTipoAjusteResponse].self, source: source)
            }
			// Decoder for PageTipoAjusteResponse
            Decoders.addDecoder(clazz: PageTipoAjusteResponse.self) { (source: AnyObject) -> PageTipoAjusteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoAjusteResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoBoletoResponse]
            Decoders.addDecoder(clazz: [PageTipoBoletoResponse].self) { (source: AnyObject) -> [PageTipoBoletoResponse] in
                return Decoders.decode(clazz: [PageTipoBoletoResponse].self, source: source)
            }
			// Decoder for PageTipoBoletoResponse
            Decoders.addDecoder(clazz: PageTipoBoletoResponse.self) { (source: AnyObject) -> PageTipoBoletoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoBoletoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoCampanhaResponse]
            Decoders.addDecoder(clazz: [PageTipoCampanhaResponse].self) { (source: AnyObject) -> [PageTipoCampanhaResponse] in
                return Decoders.decode(clazz: [PageTipoCampanhaResponse].self, source: source)
            }
			// Decoder for PageTipoCampanhaResponse
            Decoders.addDecoder(clazz: PageTipoCampanhaResponse.self) { (source: AnyObject) -> PageTipoCampanhaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoCampanhaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoDebitoRecorrenteResponse]
            Decoders.addDecoder(clazz: [PageTipoDebitoRecorrenteResponse].self) { (source: AnyObject) -> [PageTipoDebitoRecorrenteResponse] in
                return Decoders.decode(clazz: [PageTipoDebitoRecorrenteResponse].self, source: source)
            }
			// Decoder for PageTipoDebitoRecorrenteResponse
            Decoders.addDecoder(clazz: PageTipoDebitoRecorrenteResponse.self) { (source: AnyObject) -> PageTipoDebitoRecorrenteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoDebitoRecorrenteResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoEnderecoResponse]
            Decoders.addDecoder(clazz: [PageTipoEnderecoResponse].self) { (source: AnyObject) -> [PageTipoEnderecoResponse] in
                return Decoders.decode(clazz: [PageTipoEnderecoResponse].self, source: source)
            }
			// Decoder for PageTipoEnderecoResponse
            Decoders.addDecoder(clazz: PageTipoEnderecoResponse.self) { (source: AnyObject) -> PageTipoEnderecoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoEnderecoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoFaturamentoPorContaResponse]
            Decoders.addDecoder(clazz: [PageTipoFaturamentoPorContaResponse].self) { (source: AnyObject) -> [PageTipoFaturamentoPorContaResponse] in
                return Decoders.decode(clazz: [PageTipoFaturamentoPorContaResponse].self, source: source)
            }
			// Decoder for PageTipoFaturamentoPorContaResponse
            Decoders.addDecoder(clazz: PageTipoFaturamentoPorContaResponse.self) { (source: AnyObject) -> PageTipoFaturamentoPorContaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoFaturamentoPorContaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoFaturamentoResponse]
            Decoders.addDecoder(clazz: [PageTipoFaturamentoResponse].self) { (source: AnyObject) -> [PageTipoFaturamentoResponse] in
                return Decoders.decode(clazz: [PageTipoFaturamentoResponse].self, source: source)
            }
			// Decoder for PageTipoFaturamentoResponse
            Decoders.addDecoder(clazz: PageTipoFaturamentoResponse.self) { (source: AnyObject) -> PageTipoFaturamentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoFaturamentoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoOportunidadeAUDResponse]
            Decoders.addDecoder(clazz: [PageTipoOportunidadeAUDResponse].self) { (source: AnyObject) -> [PageTipoOportunidadeAUDResponse] in
                return Decoders.decode(clazz: [PageTipoOportunidadeAUDResponse].self, source: source)
            }
			// Decoder for PageTipoOportunidadeAUDResponse
            Decoders.addDecoder(clazz: PageTipoOportunidadeAUDResponse.self) { (source: AnyObject) -> PageTipoOportunidadeAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoOportunidadeAUDResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoOportunidadeResponse]
            Decoders.addDecoder(clazz: [PageTipoOportunidadeResponse].self) { (source: AnyObject) -> [PageTipoOportunidadeResponse] in
                return Decoders.decode(clazz: [PageTipoOportunidadeResponse].self, source: source)
            }
			// Decoder for PageTipoOportunidadeResponse
            Decoders.addDecoder(clazz: PageTipoOportunidadeResponse.self) { (source: AnyObject) -> PageTipoOportunidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoOportunidadeResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoTelefoneResponse]
            Decoders.addDecoder(clazz: [PageTipoTelefoneResponse].self) { (source: AnyObject) -> [PageTipoTelefoneResponse] in
                return Decoders.decode(clazz: [PageTipoTelefoneResponse].self, source: source)
            }
			// Decoder for PageTipoTelefoneResponse
            Decoders.addDecoder(clazz: PageTipoTelefoneResponse.self) { (source: AnyObject) -> PageTipoTelefoneResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoTelefoneResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoTemplateResponse]
            Decoders.addDecoder(clazz: [PageTipoTemplateResponse].self) { (source: AnyObject) -> [PageTipoTemplateResponse] in
                return Decoders.decode(clazz: [PageTipoTemplateResponse].self, source: source)
            }
			// Decoder for PageTipoTemplateResponse
            Decoders.addDecoder(clazz: PageTipoTemplateResponse.self) { (source: AnyObject) -> PageTipoTemplateResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoTemplateResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTipoTerminalResponse]
            Decoders.addDecoder(clazz: [PageTipoTerminalResponse].self) { (source: AnyObject) -> [PageTipoTerminalResponse] in
                return Decoders.decode(clazz: [PageTipoTerminalResponse].self, source: source)
            }
			// Decoder for PageTipoTerminalResponse
            Decoders.addDecoder(clazz: PageTipoTerminalResponse.self) { (source: AnyObject) -> PageTipoTerminalResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTipoTerminalResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTransacaoNaoProcessadaResponse]
            Decoders.addDecoder(clazz: [PageTransacaoNaoProcessadaResponse].self) { (source: AnyObject) -> [PageTransacaoNaoProcessadaResponse] in
                return Decoders.decode(clazz: [PageTransacaoNaoProcessadaResponse].self, source: source)
            }
			// Decoder for PageTransacaoNaoProcessadaResponse
            Decoders.addDecoder(clazz: PageTransacaoNaoProcessadaResponse.self) { (source: AnyObject) -> PageTransacaoNaoProcessadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTransacaoNaoProcessadaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTransacaoResponse]
            Decoders.addDecoder(clazz: [PageTransacaoResponse].self) { (source: AnyObject) -> [PageTransacaoResponse] in
                return Decoders.decode(clazz: [PageTransacaoResponse].self, source: source)
            }
			// Decoder for PageTransacaoResponse
            Decoders.addDecoder(clazz: PageTransacaoResponse.self) { (source: AnyObject) -> PageTransacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTransacaoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTransacoesCorrentesResponse]
            Decoders.addDecoder(clazz: [PageTransacoesCorrentesResponse].self) { (source: AnyObject) -> [PageTransacoesCorrentesResponse] in
                return Decoders.decode(clazz: [PageTransacoesCorrentesResponse].self, source: source)
            }
			// Decoder for PageTransacoesCorrentesResponse
            Decoders.addDecoder(clazz: PageTransacoesCorrentesResponse.self) { (source: AnyObject) -> PageTransacoesCorrentesResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTransacoesCorrentesResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTransferenciaBancariaResponse]
            Decoders.addDecoder(clazz: [PageTransferenciaBancariaResponse].self) { (source: AnyObject) -> [PageTransferenciaBancariaResponse] in
                return Decoders.decode(clazz: [PageTransferenciaBancariaResponse].self, source: source)
            }
			// Decoder for PageTransferenciaBancariaResponse
            Decoders.addDecoder(clazz: PageTransferenciaBancariaResponse.self) { (source: AnyObject) -> PageTransferenciaBancariaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTransferenciaBancariaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTransferenciaCreditoContaBancariaResponse]
            Decoders.addDecoder(clazz: [PageTransferenciaCreditoContaBancariaResponse].self) { (source: AnyObject) -> [PageTransferenciaCreditoContaBancariaResponse] in
                return Decoders.decode(clazz: [PageTransferenciaCreditoContaBancariaResponse].self, source: source)
            }
			// Decoder for PageTransferenciaCreditoContaBancariaResponse
            Decoders.addDecoder(clazz: PageTransferenciaCreditoContaBancariaResponse.self) { (source: AnyObject) -> PageTransferenciaCreditoContaBancariaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTransferenciaCreditoContaBancariaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageTransferenciaResponse]
            Decoders.addDecoder(clazz: [PageTransferenciaResponse].self) { (source: AnyObject) -> [PageTransferenciaResponse] in
                return Decoders.decode(clazz: [PageTransferenciaResponse].self, source: source)
            }
			// Decoder for PageTransferenciaResponse
            Decoders.addDecoder(clazz: PageTransferenciaResponse.self) { (source: AnyObject) -> PageTransferenciaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageTransferenciaResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageUsuarioResponse]
            Decoders.addDecoder(clazz: [PageUsuarioResponse].self) { (source: AnyObject) -> [PageUsuarioResponse] in
                return Decoders.decode(clazz: [PageUsuarioResponse].self, source: source)
            }
			// Decoder for PageUsuarioResponse
            Decoders.addDecoder(clazz: PageUsuarioResponse.self) { (source: AnyObject) -> PageUsuarioResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageUsuarioResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageVinculoEstabelecimentoAdquirenteResponse]
            Decoders.addDecoder(clazz: [PageVinculoEstabelecimentoAdquirenteResponse].self) { (source: AnyObject) -> [PageVinculoEstabelecimentoAdquirenteResponse] in
                return Decoders.decode(clazz: [PageVinculoEstabelecimentoAdquirenteResponse].self, source: source)
            }
			// Decoder for PageVinculoEstabelecimentoAdquirenteResponse
            Decoders.addDecoder(clazz: PageVinculoEstabelecimentoAdquirenteResponse.self) { (source: AnyObject) -> PageVinculoEstabelecimentoAdquirenteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageVinculoEstabelecimentoAdquirenteResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageVinculoOperacaoResponse]
            Decoders.addDecoder(clazz: [PageVinculoOperacaoResponse].self) { (source: AnyObject) -> [PageVinculoOperacaoResponse] in
                return Decoders.decode(clazz: [PageVinculoOperacaoResponse].self, source: source)
            }
			// Decoder for PageVinculoOperacaoResponse
            Decoders.addDecoder(clazz: PageVinculoOperacaoResponse.self) { (source: AnyObject) -> PageVinculoOperacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageVinculoOperacaoResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PageWebHookResponse]
            Decoders.addDecoder(clazz: [PageWebHookResponse].self) { (source: AnyObject) -> [PageWebHookResponse] in
                return Decoders.decode(clazz: [PageWebHookResponse].self, source: source)
            }
			// Decoder for PageWebHookResponse
            Decoders.addDecoder(clazz: PageWebHookResponse.self) { (source: AnyObject) -> PageWebHookResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PageWebHookResponse()
                instance.content = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["content"])
                instance.first = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["first"])
                instance.firstPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["firstPage"])
                instance.hasContent = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasContent"])
                instance.hasNextPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasNextPage"])
                instance.hasPreviousPage = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["hasPreviousPage"])
                instance.last = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["last"])
                instance.nextPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nextPage"])
                instance.number = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["number"])
                instance.numberOfElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numberOfElements"])
                instance.previousPage = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["previousPage"])
                instance.size = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["size"])
                instance.totalElements = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalElements"])
                instance.totalPages = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["totalPages"])
                return instance
            }
			

			// Decoder for [PaisResponse]
            Decoders.addDecoder(clazz: [PaisResponse].self) { (source: AnyObject) -> [PaisResponse] in
                return Decoders.decode(clazz: [PaisResponse].self, source: source)
            }
			// Decoder for PaisResponse
            Decoders.addDecoder(clazz: PaisResponse.self) { (source: AnyObject) -> PaisResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PaisResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.codigo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigo"])
                instance.sigla = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sigla"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.continente = PaisResponse.Continente(rawValue: (sourceDictionary["continente"] as? String) ?? "") 
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [ParametroProdutoResponse]
            Decoders.addDecoder(clazz: [ParametroProdutoResponse].self) { (source: AnyObject) -> [ParametroProdutoResponse] in
                return Decoders.decode(clazz: [ParametroProdutoResponse].self, source: source)
            }
			// Decoder for ParametroProdutoResponse
            Decoders.addDecoder(clazz: ParametroProdutoResponse.self) { (source: AnyObject) -> ParametroProdutoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ParametroProdutoResponse()
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.tipoOrigemTransacao = ParametroProdutoResponse.TipoOrigemTransacao(rawValue: (sourceDictionary["tipoOrigemTransacao"] as? String) ?? "") 
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.valorParametro = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParametro"])
                instance.dataValidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidade"])
                return instance
            }
			

			// Decoder for [ParcelamentoTransferenciaResponse]
            Decoders.addDecoder(clazz: [ParcelamentoTransferenciaResponse].self) { (source: AnyObject) -> [ParcelamentoTransferenciaResponse] in
                return Decoders.decode(clazz: [ParcelamentoTransferenciaResponse].self, source: source)
            }
			// Decoder for ParcelamentoTransferenciaResponse
            Decoders.addDecoder(clazz: ParcelamentoTransferenciaResponse.self) { (source: AnyObject) -> ParcelamentoTransferenciaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ParcelamentoTransferenciaResponse()
                instance.numeroParcela = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcela"])
                instance.valorParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcelas"])
                instance.valorTotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotal"])
                instance.valorTAC = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTAC"])
                instance.valorIOF = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorIOF"])
                instance.taxaJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaJuros"])
                instance.cetAnual = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cetAnual"])
                return instance
            }
			

			// Decoder for [PessoaDetalheResponse]
            Decoders.addDecoder(clazz: [PessoaDetalheResponse].self) { (source: AnyObject) -> [PessoaDetalheResponse] in
                return Decoders.decode(clazz: [PessoaDetalheResponse].self, source: source)
            }
			// Decoder for PessoaDetalheResponse
            Decoders.addDecoder(clazz: PessoaDetalheResponse.self) { (source: AnyObject) -> PessoaDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaDetalheResponse()
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.nomeMae = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeMae"])
                instance.idEstadoCivil = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstadoCivil"])
                instance.idProfissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["idProfissao"])
                instance.idNaturezaOcupacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNaturezaOcupacao"])
                instance.idNacionalidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNacionalidade"])
                instance.numeroBanco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroBanco"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.nomeEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpresa"])
                return instance
            }
			

			// Decoder for [PessoaFisicaAprovadaPersist]
            Decoders.addDecoder(clazz: [PessoaFisicaAprovadaPersist].self) { (source: AnyObject) -> [PessoaFisicaAprovadaPersist] in
                return Decoders.decode(clazz: [PessoaFisicaAprovadaPersist].self, source: source)
            }
			// Decoder for PessoaFisicaAprovadaPersist
            Decoders.addDecoder(clazz: PessoaFisicaAprovadaPersist.self) { (source: AnyObject) -> PessoaFisicaAprovadaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaFisicaAprovadaPersist()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.nomeMae = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeMae"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.idEstadoCivil = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstadoCivil"])
                instance.idProfissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["idProfissao"])
                instance.idNaturezaOcupacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNaturezaOcupacao"])
                instance.idNacionalidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNacionalidade"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.nomeEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpresa"])
                instance.valorRenda = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorRenda"])
                instance.canalEntrada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["canalEntrada"])
                instance.valorPontuacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["valorPontuacao"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                instance.enderecos = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["enderecos"])
                instance.limiteGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobal"])
                instance.limiteMaximo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteMaximo"])
                instance.limiteParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelas"])
                instance.limiteConsignado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteConsignado"])
                return instance
            }
			

			// Decoder for [PessoaFisicaAprovadaResponse]
            Decoders.addDecoder(clazz: [PessoaFisicaAprovadaResponse].self) { (source: AnyObject) -> [PessoaFisicaAprovadaResponse] in
                return Decoders.decode(clazz: [PessoaFisicaAprovadaResponse].self, source: source)
            }
			// Decoder for PessoaFisicaAprovadaResponse
            Decoders.addDecoder(clazz: PessoaFisicaAprovadaResponse.self) { (source: AnyObject) -> PessoaFisicaAprovadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaFisicaAprovadaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.nomeMae = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeMae"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.idEstadoCivil = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstadoCivil"])
                instance.idProfissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["idProfissao"])
                instance.idNaturezaOcupacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNaturezaOcupacao"])
                instance.idNacionalidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idNacionalidade"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.nomeEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEmpresa"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idProposta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProposta"])
                instance.canalEntrada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["canalEntrada"])
                instance.valorPontuacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["valorPontuacao"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                instance.enderecos = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["enderecos"])
                instance.limiteGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobal"])
                instance.limiteMaximo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteMaximo"])
                instance.limiteParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelas"])
                instance.limiteConsignado = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteConsignado"])
                return instance
            }
			

			// Decoder for [PessoaJuridicaAprovadaPersist]
            Decoders.addDecoder(clazz: [PessoaJuridicaAprovadaPersist].self) { (source: AnyObject) -> [PessoaJuridicaAprovadaPersist] in
                return Decoders.decode(clazz: [PessoaJuridicaAprovadaPersist].self, source: source)
            }
			// Decoder for PessoaJuridicaAprovadaPersist
            Decoders.addDecoder(clazz: PessoaJuridicaAprovadaPersist.self) { (source: AnyObject) -> PessoaJuridicaAprovadaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaJuridicaAprovadaPersist()
                instance.razaoSocial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["razaoSocial"])
                instance.nomeFantasia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasia"])
                instance.cnpj = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cnpj"])
                instance.inscricaoEstadual = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["inscricaoEstadual"])
                instance.dataAberturaEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAberturaEmpresa"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.valorRenda = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorRenda"])
                instance.canalEntrada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["canalEntrada"])
                instance.valorPontuacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["valorPontuacao"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                instance.enderecos = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["enderecos"])
                instance.socios = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["socios"])
                instance.referenciasComerciais = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["referenciasComerciais"])
                instance.limiteGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobal"])
                instance.limiteMaximo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteMaximo"])
                instance.limiteParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelas"])
                return instance
            }
			

			// Decoder for [PessoaJuridicaAprovadaResponse]
            Decoders.addDecoder(clazz: [PessoaJuridicaAprovadaResponse].self) { (source: AnyObject) -> [PessoaJuridicaAprovadaResponse] in
                return Decoders.decode(clazz: [PessoaJuridicaAprovadaResponse].self, source: source)
            }
			// Decoder for PessoaJuridicaAprovadaResponse
            Decoders.addDecoder(clazz: PessoaJuridicaAprovadaResponse.self) { (source: AnyObject) -> PessoaJuridicaAprovadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaJuridicaAprovadaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.razaoSocial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["razaoSocial"])
                instance.nomeFantasia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasia"])
                instance.cnpj = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cnpj"])
                instance.inscricaoEstadual = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["inscricaoEstadual"])
                instance.dataAberturaEmpresa = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAberturaEmpresa"])
                instance.idOrigemComercial = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOrigemComercial"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.diaVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["diaVencimento"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idProposta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProposta"])
                instance.canalEntrada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["canalEntrada"])
                instance.valorPontuacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["valorPontuacao"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                instance.enderecos = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["enderecos"])
                instance.socios = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["socios"])
                instance.referencias = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["referencias"])
                instance.limiteGlobal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteGlobal"])
                instance.limiteMaximo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteMaximo"])
                instance.limiteParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["limiteParcelas"])
                return instance
            }
			

			// Decoder for [PessoaPersist]
            Decoders.addDecoder(clazz: [PessoaPersist].self) { (source: AnyObject) -> [PessoaPersist] in
                return Decoders.decode(clazz: [PessoaPersist].self, source: source)
            }
			// Decoder for PessoaPersist
            Decoders.addDecoder(clazz: PessoaPersist.self) { (source: AnyObject) -> PessoaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaPersist()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.estadoCivil = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["estadoCivil"])
                instance.profissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["profissao"])
                instance.nacionalidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nacionalidade"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                return instance
            }
			

			// Decoder for [PessoaResponse]
            Decoders.addDecoder(clazz: [PessoaResponse].self) { (source: AnyObject) -> [PessoaResponse] in
                return Decoders.decode(clazz: [PessoaResponse].self, source: source)
            }
			// Decoder for PessoaResponse
            Decoders.addDecoder(clazz: PessoaResponse.self) { (source: AnyObject) -> PessoaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PessoaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.tipo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipo"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.cnpj = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cnpj"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                return instance
            }
			

			// Decoder for [PlanoCampanhaPersist]
            Decoders.addDecoder(clazz: [PlanoCampanhaPersist].self) { (source: AnyObject) -> [PlanoCampanhaPersist] in
                return Decoders.decode(clazz: [PlanoCampanhaPersist].self, source: source)
            }
			// Decoder for PlanoCampanhaPersist
            Decoders.addDecoder(clazz: PlanoCampanhaPersist.self) { (source: AnyObject) -> PlanoCampanhaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlanoCampanhaPersist()
                instance.parcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["parcelas"])
                instance.taxa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxa"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                return instance
            }
			

			// Decoder for [PlanoCampanhaResponse]
            Decoders.addDecoder(clazz: [PlanoCampanhaResponse].self) { (source: AnyObject) -> [PlanoCampanhaResponse] in
                return Decoders.decode(clazz: [PlanoCampanhaResponse].self, source: source)
            }
			// Decoder for PlanoCampanhaResponse
            Decoders.addDecoder(clazz: PlanoCampanhaResponse.self) { (source: AnyObject) -> PlanoCampanhaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlanoCampanhaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.parcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["parcelas"])
                instance.taxa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxa"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                return instance
            }
			

			// Decoder for [PlanoCampanhaUpdate]
            Decoders.addDecoder(clazz: [PlanoCampanhaUpdate].self) { (source: AnyObject) -> [PlanoCampanhaUpdate] in
                return Decoders.decode(clazz: [PlanoCampanhaUpdate].self, source: source)
            }
			// Decoder for PlanoCampanhaUpdate
            Decoders.addDecoder(clazz: PlanoCampanhaUpdate.self) { (source: AnyObject) -> PlanoCampanhaUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlanoCampanhaUpdate()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.parcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["parcelas"])
                instance.taxa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxa"])
                instance.usuario = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usuario"])
                return instance
            }
			

			// Decoder for [PlanoParcelamentoEmprestimoResponse]
            Decoders.addDecoder(clazz: [PlanoParcelamentoEmprestimoResponse].self) { (source: AnyObject) -> [PlanoParcelamentoEmprestimoResponse] in
                return Decoders.decode(clazz: [PlanoParcelamentoEmprestimoResponse].self, source: source)
            }
			// Decoder for PlanoParcelamentoEmprestimoResponse
            Decoders.addDecoder(clazz: PlanoParcelamentoEmprestimoResponse.self) { (source: AnyObject) -> PlanoParcelamentoEmprestimoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlanoParcelamentoEmprestimoResponse()
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.valorParcelas = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcelas"])
                instance.taxaJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaJuros"])
                instance.valorTributosIOF = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTributosIOF"])
                instance.valorPercentualCET = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorPercentualCET"])
                return instance
            }
			

			// Decoder for [PlanoParcelamentoResponse]
            Decoders.addDecoder(clazz: [PlanoParcelamentoResponse].self) { (source: AnyObject) -> [PlanoParcelamentoResponse] in
                return Decoders.decode(clazz: [PlanoParcelamentoResponse].self, source: source)
            }
			// Decoder for PlanoParcelamentoResponse
            Decoders.addDecoder(clazz: PlanoParcelamentoResponse.self) { (source: AnyObject) -> PlanoParcelamentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlanoParcelamentoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.dataFechamentoFatura = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFechamentoFatura"])
                instance.dataVencimentoPadrao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoPadrao"])
                instance.valorTotalFatura = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalFatura"])
                instance.quantidadeParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeParcelas"])
                instance.valorParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcela"])
                instance.valorEntrada = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorEntrada"])
                instance.taxaRefinanciamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaRefinanciamento"])
                instance.custoEfetivoTotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["custoEfetivoTotal"])
                instance.valorTotalRefinanciamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTotalRefinanciamento"])
                instance.valorIOF = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorIOF"])
                instance.valorTAC = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTAC"])
                instance.statusAdesao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["statusAdesao"])
                instance.dataInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInclusao"])
                instance.dataProcessamentoAdesao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataProcessamentoAdesao"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.descricaoServicoTipo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoServicoTipo"])
                instance.comEntrada = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["comEntrada"])
                instance.nomeCampanha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeCampanha"])
                return instance
            }
			

			// Decoder for [PlanoParcelamentoTransferenciaCreditoContaBancariaRequest]
            Decoders.addDecoder(clazz: [PlanoParcelamentoTransferenciaCreditoContaBancariaRequest].self) { (source: AnyObject) -> [PlanoParcelamentoTransferenciaCreditoContaBancariaRequest] in
                return Decoders.decode(clazz: [PlanoParcelamentoTransferenciaCreditoContaBancariaRequest].self, source: source)
            }
			// Decoder for PlanoParcelamentoTransferenciaCreditoContaBancariaRequest
            Decoders.addDecoder(clazz: PlanoParcelamentoTransferenciaCreditoContaBancariaRequest.self) { (source: AnyObject) -> PlanoParcelamentoTransferenciaCreditoContaBancariaRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlanoParcelamentoTransferenciaCreditoContaBancariaRequest()
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroMesesCarencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroMesesCarencia"])
                return instance
            }
			

			// Decoder for [PlanoParcelamentoTransferenciaCreditoContaBancariaResponse]
            Decoders.addDecoder(clazz: [PlanoParcelamentoTransferenciaCreditoContaBancariaResponse].self) { (source: AnyObject) -> [PlanoParcelamentoTransferenciaCreditoContaBancariaResponse] in
                return Decoders.decode(clazz: [PlanoParcelamentoTransferenciaCreditoContaBancariaResponse].self, source: source)
            }
			// Decoder for PlanoParcelamentoTransferenciaCreditoContaBancariaResponse
            Decoders.addDecoder(clazz: PlanoParcelamentoTransferenciaCreditoContaBancariaResponse.self) { (source: AnyObject) -> PlanoParcelamentoTransferenciaCreditoContaBancariaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlanoParcelamentoTransferenciaCreditoContaBancariaResponse()
                instance.numeroMascaradoCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroMascaradoCartao"])
                instance.vencimentoPrimeiraParcela = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vencimentoPrimeiraParcela"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroMesesCarencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroMesesCarencia"])
                instance.parcelas = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["parcelas"])
                return instance
            }
			

			// Decoder for [PlataformaMobilePersist]
            Decoders.addDecoder(clazz: [PlataformaMobilePersist].self) { (source: AnyObject) -> [PlataformaMobilePersist] in
                return Decoders.decode(clazz: [PlataformaMobilePersist].self, source: source)
            }
			// Decoder for PlataformaMobilePersist
            Decoders.addDecoder(clazz: PlataformaMobilePersist.self) { (source: AnyObject) -> PlataformaMobilePersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlataformaMobilePersist()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [PlataformaMobileResponse]
            Decoders.addDecoder(clazz: [PlataformaMobileResponse].self) { (source: AnyObject) -> [PlataformaMobileResponse] in
                return Decoders.decode(clazz: [PlataformaMobileResponse].self, source: source)
            }
			// Decoder for PlataformaMobileResponse
            Decoders.addDecoder(clazz: PlataformaMobileResponse.self) { (source: AnyObject) -> PlataformaMobileResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlataformaMobileResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [PlataformaMobileUpdate]
            Decoders.addDecoder(clazz: [PlataformaMobileUpdate].self) { (source: AnyObject) -> [PlataformaMobileUpdate] in
                return Decoders.decode(clazz: [PlataformaMobileUpdate].self, source: source)
            }
			// Decoder for PlataformaMobileUpdate
            Decoders.addDecoder(clazz: PlataformaMobileUpdate.self) { (source: AnyObject) -> PlataformaMobileUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PlataformaMobileUpdate()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [PortadorResponse]
            Decoders.addDecoder(clazz: [PortadorResponse].self) { (source: AnyObject) -> [PortadorResponse] in
                return Decoders.decode(clazz: [PortadorResponse].self, source: source)
            }
			// Decoder for PortadorResponse
            Decoders.addDecoder(clazz: PortadorResponse.self) { (source: AnyObject) -> PortadorResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PortadorResponse()
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idParentesco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idParentesco"])
                instance.tipoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoPortador"])
                instance.nomeImpresso = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeImpresso"])
                instance.idTipoCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoCartao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagAtivo"])
                instance.dataCadastroPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastroPortador"])
                instance.dataCancelamentoPortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCancelamentoPortador"])
                return instance
            }
			

			// Decoder for [ProdutoDetalhesResponse]
            Decoders.addDecoder(clazz: [ProdutoDetalhesResponse].self) { (source: AnyObject) -> [ProdutoDetalhesResponse] in
                return Decoders.decode(clazz: [ProdutoDetalhesResponse].self, source: source)
            }
			// Decoder for ProdutoDetalhesResponse
            Decoders.addDecoder(clazz: ProdutoDetalhesResponse.self) { (source: AnyObject) -> ProdutoDetalhesResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ProdutoDetalhesResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                instance.idFantasiaBasica = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idFantasiaBasica"])
                instance.fantasiaBasica = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fantasiaBasica"])
                instance.usoExterior = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["usoExterior"])
                return instance
            }
			

			// Decoder for [ProdutoOrigemResponse]
            Decoders.addDecoder(clazz: [ProdutoOrigemResponse].self) { (source: AnyObject) -> [ProdutoOrigemResponse] in
                return Decoders.decode(clazz: [ProdutoOrigemResponse].self, source: source)
            }
			// Decoder for ProdutoOrigemResponse
            Decoders.addDecoder(clazz: ProdutoOrigemResponse.self) { (source: AnyObject) -> ProdutoOrigemResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ProdutoOrigemResponse()
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                return instance
            }
			

			// Decoder for [ProdutoResponse]
            Decoders.addDecoder(clazz: [ProdutoResponse].self) { (source: AnyObject) -> [ProdutoResponse] in
                return Decoders.decode(clazz: [ProdutoResponse].self, source: source)
            }
			// Decoder for ProdutoResponse
            Decoders.addDecoder(clazz: ProdutoResponse.self) { (source: AnyObject) -> ProdutoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ProdutoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                instance.idFantasiaBasica = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idFantasiaBasica"])
                return instance
            }
			

			// Decoder for [PromotorResponse]
            Decoders.addDecoder(clazz: [PromotorResponse].self) { (source: AnyObject) -> [PromotorResponse] in
                return Decoders.decode(clazz: [PromotorResponse].self, source: source)
            }
			// Decoder for PromotorResponse
            Decoders.addDecoder(clazz: PromotorResponse.self) { (source: AnyObject) -> PromotorResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PromotorResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.dataCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCadastro"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.idUsuario = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idUsuario"])
                return instance
            }
			

			// Decoder for [PropriedadeDocumentoRequest]
            Decoders.addDecoder(clazz: [PropriedadeDocumentoRequest].self) { (source: AnyObject) -> [PropriedadeDocumentoRequest] in
                return Decoders.decode(clazz: [PropriedadeDocumentoRequest].self, source: source)
            }
			// Decoder for PropriedadeDocumentoRequest
            Decoders.addDecoder(clazz: PropriedadeDocumentoRequest.self) { (source: AnyObject) -> PropriedadeDocumentoRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PropriedadeDocumentoRequest()
                instance.chave = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chave"])
                instance.valor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["valor"])
                instance.detalhesTipo = PropriedadeDocumentoRequest.DetalhesTipo(rawValue: (sourceDictionary["detalhesTipo"] as? String) ?? "") 
                instance.flagIndice = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagIndice"])
                return instance
            }
			

			// Decoder for [PushAPNS]
            Decoders.addDecoder(clazz: [PushAPNS].self) { (source: AnyObject) -> [PushAPNS] in
                return Decoders.decode(clazz: [PushAPNS].self, source: source)
            }
			// Decoder for PushAPNS
            Decoders.addDecoder(clazz: PushAPNS.self) { (source: AnyObject) -> PushAPNS in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PushAPNS()
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.tokenDispositivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tokenDispositivo"])
                instance.certificado = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["certificado"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                instance.titulo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["titulo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.tipoEvento = PushAPNS.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                instance.icone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["icone"])
                instance.som = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["som"])
                return instance
            }
			

			// Decoder for [PushFCMEGCM]
            Decoders.addDecoder(clazz: [PushFCMEGCM].self) { (source: AnyObject) -> [PushFCMEGCM] in
                return Decoders.decode(clazz: [PushFCMEGCM].self, source: source)
            }
			// Decoder for PushFCMEGCM
            Decoders.addDecoder(clazz: PushFCMEGCM.self) { (source: AnyObject) -> PushFCMEGCM in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PushFCMEGCM()
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.tokenDispositivo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tokenDispositivo"])
                instance.tokenServidor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tokenServidor"])
                instance.titulo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["titulo"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                instance.tipoEvento = PushFCMEGCM.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                instance.icone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["icone"])
                instance.som = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["som"])
                instance.cor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cor"])
                return instance
            }
			

			// Decoder for [RefenciaComercialAprovadoPersist]
            Decoders.addDecoder(clazz: [RefenciaComercialAprovadoPersist].self) { (source: AnyObject) -> [RefenciaComercialAprovadoPersist] in
                return Decoders.decode(clazz: [RefenciaComercialAprovadoPersist].self, source: source)
            }
			// Decoder for RefenciaComercialAprovadoPersist
            Decoders.addDecoder(clazz: RefenciaComercialAprovadoPersist.self) { (source: AnyObject) -> RefenciaComercialAprovadoPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = RefenciaComercialAprovadoPersist()
                instance.razaoSocial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["razaoSocial"])
                instance.nomeContrato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeContrato"])
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                return instance
            }
			

			// Decoder for [ReferenciaComercialAprovadoResponse]
            Decoders.addDecoder(clazz: [ReferenciaComercialAprovadoResponse].self) { (source: AnyObject) -> [ReferenciaComercialAprovadoResponse] in
                return Decoders.decode(clazz: [ReferenciaComercialAprovadoResponse].self, source: source)
            }
			// Decoder for ReferenciaComercialAprovadoResponse
            Decoders.addDecoder(clazz: ReferenciaComercialAprovadoResponse.self) { (source: AnyObject) -> ReferenciaComercialAprovadoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ReferenciaComercialAprovadoResponse()
                instance.razaoSocial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["razaoSocial"])
                instance.nomeContrato = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeContrato"])
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                return instance
            }
			

			// Decoder for [ReferenciaIdPersist]
            Decoders.addDecoder(clazz: [ReferenciaIdPersist].self) { (source: AnyObject) -> [ReferenciaIdPersist] in
                return Decoders.decode(clazz: [ReferenciaIdPersist].self, source: source)
            }
			// Decoder for ReferenciaIdPersist
            Decoders.addDecoder(clazz: ReferenciaIdPersist.self) { (source: AnyObject) -> ReferenciaIdPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ReferenciaIdPersist()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                return instance
            }
			

			// Decoder for [RiscoFraudeDetalhadoResponse]
            Decoders.addDecoder(clazz: [RiscoFraudeDetalhadoResponse].self) { (source: AnyObject) -> [RiscoFraudeDetalhadoResponse] in
                return Decoders.decode(clazz: [RiscoFraudeDetalhadoResponse].self, source: source)
            }
			// Decoder for RiscoFraudeDetalhadoResponse
            Decoders.addDecoder(clazz: RiscoFraudeDetalhadoResponse.self) { (source: AnyObject) -> RiscoFraudeDetalhadoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = RiscoFraudeDetalhadoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoResolucao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoResolucao"])
                instance.descricaoTipoResolucao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoResolucao"])
                instance.flagAltoRisco = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAltoRisco"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idTransacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransacao"])
                instance.dataTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataTransacao"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.codigoMoedaOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoedaOrigem"])
                instance.valorOrigem = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorOrigem"])
                instance.codigoMoedaDestino = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoedaDestino"])
                instance.valorDestino = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorDestino"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                instance.idPais = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["idPais"])
                instance.codigoRespostaAutorizador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoRespostaAutorizador"])
                instance.descricaoRespostaAutorizador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRespostaAutorizador"])
                instance.codigoRespostaFraude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoRespostaFraude"])
                instance.descricaoRespostaFraude = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoRespostaFraude"])
                instance.origemTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["origemTransacao"])
                instance.codigoModoEntradaTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoModoEntradaTerminal"])
                instance.descricaoModoEntradaTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoModoEntradaTerminal"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.cnpj = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cnpj"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                return instance
            }
			

			// Decoder for [RiscoFraudeResponse]
            Decoders.addDecoder(clazz: [RiscoFraudeResponse].self) { (source: AnyObject) -> [RiscoFraudeResponse] in
                return Decoders.decode(clazz: [RiscoFraudeResponse].self, source: source)
            }
			// Decoder for RiscoFraudeResponse
            Decoders.addDecoder(clazz: RiscoFraudeResponse.self) { (source: AnyObject) -> RiscoFraudeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = RiscoFraudeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoResolucao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoResolucao"])
                instance.descricaoTipoResolucao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoResolucao"])
                instance.flagAltoRisco = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAltoRisco"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idTransacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransacao"])
                instance.dataTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataTransacao"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                return instance
            }
			

			// Decoder for [SocioAprovadoResponse]
            Decoders.addDecoder(clazz: [SocioAprovadoResponse].self) { (source: AnyObject) -> [SocioAprovadoResponse] in
                return Decoders.decode(clazz: [SocioAprovadoResponse].self, source: source)
            }
			// Decoder for SocioAprovadoResponse
            Decoders.addDecoder(clazz: SocioAprovadoResponse.self) { (source: AnyObject) -> SocioAprovadoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = SocioAprovadoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.dataNascimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataNascimento"])
                instance.sexo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sexo"])
                instance.numeroIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroIdentidade"])
                instance.orgaoExpedidorIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orgaoExpedidorIdentidade"])
                instance.unidadeFederativaIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unidadeFederativaIdentidade"])
                instance.dataEmissaoIdentidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEmissaoIdentidade"])
                instance.estadoCivil = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["estadoCivil"])
                instance.profissao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["profissao"])
                instance.nacionalidade = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nacionalidade"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.telefones = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["telefones"])
                return instance
            }
			

			// Decoder for [StatusCartaoResponse]
            Decoders.addDecoder(clazz: [StatusCartaoResponse].self) { (source: AnyObject) -> [StatusCartaoResponse] in
                return Decoders.decode(clazz: [StatusCartaoResponse].self, source: source)
            }
			// Decoder for StatusCartaoResponse
            Decoders.addDecoder(clazz: StatusCartaoResponse.self) { (source: AnyObject) -> StatusCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusCartaoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.permiteDesbloquear = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteDesbloquear"])
                instance.permiteAtribuirComoBloqueio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteAtribuirComoBloqueio"])
                instance.permiteAtribuirComoCancelamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteAtribuirComoCancelamento"])
                instance.cobrarTarifaAoEmitirNovaVia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["cobrarTarifaAoEmitirNovaVia"])
                return instance
            }
			

			// Decoder for [StatusContaResponse]
            Decoders.addDecoder(clazz: [StatusContaResponse].self) { (source: AnyObject) -> [StatusContaResponse] in
                return Decoders.decode(clazz: [StatusContaResponse].self, source: source)
            }
			// Decoder for StatusContaResponse
            Decoders.addDecoder(clazz: StatusContaResponse.self) { (source: AnyObject) -> StatusContaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusContaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.permiteAlterarVencimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteAlterarVencimento"])
                instance.permiteAlterarLimite = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteAlterarLimite"])
                instance.permiteEmitirNovaViaCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteEmitirNovaViaCartao"])
                instance.permiteFazerTransferencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteFazerTransferencia"])
                instance.permiteReceberTransferencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteReceberTransferencia"])
                instance.permiteCriarAcordoCobranca = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteCriarAcordoCobranca"])
                instance.permiteAtribuirComoBloqueio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteAtribuirComoBloqueio"])
                instance.permiteDesbloquear = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteDesbloquear"])
                instance.permiteAtribuirComoCancelamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["permiteAtribuirComoCancelamento"])
                return instance
            }
			

			// Decoder for [StatusImpressaoResponse]
            Decoders.addDecoder(clazz: [StatusImpressaoResponse].self) { (source: AnyObject) -> [StatusImpressaoResponse] in
                return Decoders.decode(clazz: [StatusImpressaoResponse].self, source: source)
            }
			// Decoder for StatusImpressaoResponse
            Decoders.addDecoder(clazz: StatusImpressaoResponse.self) { (source: AnyObject) -> StatusImpressaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusImpressaoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [StatusOportunidade]
            Decoders.addDecoder(clazz: [StatusOportunidade].self) { (source: AnyObject) -> [StatusOportunidade] in
                return Decoders.decode(clazz: [StatusOportunidade].self, source: source)
            }
			// Decoder for StatusOportunidade
            Decoders.addDecoder(clazz: StatusOportunidade.self) { (source: AnyObject) -> StatusOportunidade in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusOportunidade()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [StatusOportunidadeAUDResponse]
            Decoders.addDecoder(clazz: [StatusOportunidadeAUDResponse].self) { (source: AnyObject) -> [StatusOportunidadeAUDResponse] in
                return Decoders.decode(clazz: [StatusOportunidadeAUDResponse].self, source: source)
            }
			// Decoder for StatusOportunidadeAUDResponse
            Decoders.addDecoder(clazz: StatusOportunidadeAUDResponse.self) { (source: AnyObject) -> StatusOportunidadeAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusOportunidadeAUDResponse()
                instance.rev = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["rev"])
                instance.revType = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revType"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [StatusOportunidadeResponse]
            Decoders.addDecoder(clazz: [StatusOportunidadeResponse].self) { (source: AnyObject) -> [StatusOportunidadeResponse] in
                return Decoders.decode(clazz: [StatusOportunidadeResponse].self, source: source)
            }
			// Decoder for StatusOportunidadeResponse
            Decoders.addDecoder(clazz: StatusOportunidadeResponse.self) { (source: AnyObject) -> StatusOportunidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StatusOportunidadeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoOportunidade = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoOportunidade"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [TaxaAntecipacaoRequest]
            Decoders.addDecoder(clazz: [TaxaAntecipacaoRequest].self) { (source: AnyObject) -> [TaxaAntecipacaoRequest] in
                return Decoders.decode(clazz: [TaxaAntecipacaoRequest].self, source: source)
            }
			// Decoder for TaxaAntecipacaoRequest
            Decoders.addDecoder(clazz: TaxaAntecipacaoRequest.self) { (source: AnyObject) -> TaxaAntecipacaoRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TaxaAntecipacaoRequest()
                instance.tipoTransacao = TaxaAntecipacaoRequest.TipoTransacao(rawValue: (sourceDictionary["tipoTransacao"] as? String) ?? "") 
                instance.valorTaxa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTaxa"])
                return instance
            }
			

			// Decoder for [TaxasRefinanciamentoResponse]
            Decoders.addDecoder(clazz: [TaxasRefinanciamentoResponse].self) { (source: AnyObject) -> [TaxasRefinanciamentoResponse] in
                return Decoders.decode(clazz: [TaxasRefinanciamentoResponse].self, source: source)
            }
			// Decoder for TaxasRefinanciamentoResponse
            Decoders.addDecoder(clazz: TaxasRefinanciamentoResponse.self) { (source: AnyObject) -> TaxasRefinanciamentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TaxasRefinanciamentoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idPlanoConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPlanoConta"])
                instance.idPlanoPct = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPlanoPct"])
                instance.idPlanoCreditoTaxa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPlanoCreditoTaxa"])
                instance.dataEntrada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEntrada"])
                instance.vencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vencimento"])
                instance.recuperacaoEncargosFinanceiros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["recuperacaoEncargosFinanceiros"])
                instance.comissaoGarantia = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["comissaoGarantia"])
                instance.agenciamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["agenciamento"])
                instance.taxaMaximaProximoPeriodo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaMaximaProximoPeriodo"])
                instance.taxaEncargosFinanciamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaEncargosFinanciamento"])
                instance.taxaMaximaSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaMaximaSaque"])
                instance.taxaSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaSaque"])
                instance.taxaMaximaCompraJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaMaximaCompraJuros"])
                instance.taxaCompraJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaCompraJuros"])
                instance.taxaPermanencia = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaPermanencia"])
                instance.taxaRefinanciamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaRefinanciamento"])
                instance.taxaRecuperacaoRefinanciamento = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaRecuperacaoRefinanciamento"])
                instance.taxaPercCalcPagamentoMinimo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaPercCalcPagamentoMinimo"])
                instance.planoTaxaDefault = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoTaxaDefault"])
                return instance
            }
			

			// Decoder for [TelefoneAdicionalPersist]
            Decoders.addDecoder(clazz: [TelefoneAdicionalPersist].self) { (source: AnyObject) -> [TelefoneAdicionalPersist] in
                return Decoders.decode(clazz: [TelefoneAdicionalPersist].self, source: source)
            }
			// Decoder for TelefoneAdicionalPersist
            Decoders.addDecoder(clazz: TelefoneAdicionalPersist.self) { (source: AnyObject) -> TelefoneAdicionalPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TelefoneAdicionalPersist()
                instance.idTipoTelefone = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTelefone"])
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.ramal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ramal"])
                return instance
            }
			

			// Decoder for [TelefoneAdicionalUpdate]
            Decoders.addDecoder(clazz: [TelefoneAdicionalUpdate].self) { (source: AnyObject) -> [TelefoneAdicionalUpdate] in
                return Decoders.decode(clazz: [TelefoneAdicionalUpdate].self, source: source)
            }
			// Decoder for TelefoneAdicionalUpdate
            Decoders.addDecoder(clazz: TelefoneAdicionalUpdate.self) { (source: AnyObject) -> TelefoneAdicionalUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TelefoneAdicionalUpdate()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoTelefone = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTelefone"])
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.ramal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ramal"])
                return instance
            }
			

			// Decoder for [TelefoneEstabelecimentoResponse]
            Decoders.addDecoder(clazz: [TelefoneEstabelecimentoResponse].self) { (source: AnyObject) -> [TelefoneEstabelecimentoResponse] in
                return Decoders.decode(clazz: [TelefoneEstabelecimentoResponse].self, source: source)
            }
			// Decoder for TelefoneEstabelecimentoResponse
            Decoders.addDecoder(clazz: TelefoneEstabelecimentoResponse.self) { (source: AnyObject) -> TelefoneEstabelecimentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TelefoneEstabelecimentoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.ramal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ramal"])
                return instance
            }
			

			// Decoder for [TelefonePessoaAprovadaPersist]
            Decoders.addDecoder(clazz: [TelefonePessoaAprovadaPersist].self) { (source: AnyObject) -> [TelefonePessoaAprovadaPersist] in
                return Decoders.decode(clazz: [TelefonePessoaAprovadaPersist].self, source: source)
            }
			// Decoder for TelefonePessoaAprovadaPersist
            Decoders.addDecoder(clazz: TelefonePessoaAprovadaPersist.self) { (source: AnyObject) -> TelefonePessoaAprovadaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TelefonePessoaAprovadaPersist()
                instance.idTipoTelefone = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTelefone"])
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.ramal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ramal"])
                return instance
            }
			

			// Decoder for [TelefonePessoaAprovadaResponse]
            Decoders.addDecoder(clazz: [TelefonePessoaAprovadaResponse].self) { (source: AnyObject) -> [TelefonePessoaAprovadaResponse] in
                return Decoders.decode(clazz: [TelefonePessoaAprovadaResponse].self, source: source)
            }
			// Decoder for TelefonePessoaAprovadaResponse
            Decoders.addDecoder(clazz: TelefonePessoaAprovadaResponse.self) { (source: AnyObject) -> TelefonePessoaAprovadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TelefonePessoaAprovadaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoTelefone = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTelefone"])
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.ramal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ramal"])
                return instance
            }
			

			// Decoder for [TelefoneResponse]
            Decoders.addDecoder(clazz: [TelefoneResponse].self) { (source: AnyObject) -> [TelefoneResponse] in
                return Decoders.decode(clazz: [TelefoneResponse].self, source: source)
            }
			// Decoder for TelefoneResponse
            Decoders.addDecoder(clazz: TelefoneResponse.self) { (source: AnyObject) -> TelefoneResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TelefoneResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoTelefone = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTelefone"])
                instance.idPessoa = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idPessoa"])
                instance.ddd = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ddd"])
                instance.telefone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["telefone"])
                instance.ramal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ramal"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [TemplateNotificacaoDetalheResponse]
            Decoders.addDecoder(clazz: [TemplateNotificacaoDetalheResponse].self) { (source: AnyObject) -> [TemplateNotificacaoDetalheResponse] in
                return Decoders.decode(clazz: [TemplateNotificacaoDetalheResponse].self, source: source)
            }
			// Decoder for TemplateNotificacaoDetalheResponse
            Decoders.addDecoder(clazz: TemplateNotificacaoDetalheResponse.self) { (source: AnyObject) -> TemplateNotificacaoDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TemplateNotificacaoDetalheResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConfiguracaoEmail = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConfiguracaoEmail"])
                instance.tipoLayout = TemplateNotificacaoDetalheResponse.TipoLayout(rawValue: (sourceDictionary["tipoLayout"] as? String) ?? "") 
                instance.tipoNotificacao = TemplateNotificacaoDetalheResponse.TipoNotificacao(rawValue: (sourceDictionary["tipoNotificacao"] as? String) ?? "") 
                instance.templatePadrao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["templatePadrao"])
                instance.remetente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remetente"])
                instance.assunto = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["assunto"])
                instance.dataInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInclusao"])
                instance.dataAlteracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAlteracao"])
                instance.conteudo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["conteudo"])
                return instance
            }
			

			// Decoder for [TemplateNotificacaoResponse]
            Decoders.addDecoder(clazz: [TemplateNotificacaoResponse].self) { (source: AnyObject) -> [TemplateNotificacaoResponse] in
                return Decoders.decode(clazz: [TemplateNotificacaoResponse].self, source: source)
            }
			// Decoder for TemplateNotificacaoResponse
            Decoders.addDecoder(clazz: TemplateNotificacaoResponse.self) { (source: AnyObject) -> TemplateNotificacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TemplateNotificacaoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConfiguracaoEmail = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConfiguracaoEmail"])
                instance.tipoLayout = TemplateNotificacaoResponse.TipoLayout(rawValue: (sourceDictionary["tipoLayout"] as? String) ?? "") 
                instance.tipoNotificacao = TemplateNotificacaoResponse.TipoNotificacao(rawValue: (sourceDictionary["tipoNotificacao"] as? String) ?? "") 
                instance.templatePadrao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["templatePadrao"])
                instance.remetente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remetente"])
                instance.assunto = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["assunto"])
                instance.dataInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataInclusao"])
                instance.dataAlteracao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAlteracao"])
                return instance
            }
			

			// Decoder for [TerminalPersist]
            Decoders.addDecoder(clazz: [TerminalPersist].self) { (source: AnyObject) -> [TerminalPersist] in
                return Decoders.decode(clazz: [TerminalPersist].self, source: source)
            }
			// Decoder for TerminalPersist
            Decoders.addDecoder(clazz: TerminalPersist.self) { (source: AnyObject) -> TerminalPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TerminalPersist()
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.flagConsultaExtrato = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagConsultaExtrato"])
                instance.flagTerminalVirtual = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagTerminalVirtual"])
                return instance
            }
			

			// Decoder for [TerminalResponse]
            Decoders.addDecoder(clazz: [TerminalResponse].self) { (source: AnyObject) -> [TerminalResponse] in
                return Decoders.decode(clazz: [TerminalResponse].self, source: source)
            }
			// Decoder for TerminalResponse
            Decoders.addDecoder(clazz: TerminalResponse.self) { (source: AnyObject) -> TerminalResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TerminalResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.terminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminal"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.flagConsultaExtrato = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagConsultaExtrato"])
                instance.flagTerminalVirtual = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagTerminalVirtual"])
                return instance
            }
			

			// Decoder for [TerminalUpdate]
            Decoders.addDecoder(clazz: [TerminalUpdate].self) { (source: AnyObject) -> [TerminalUpdate] in
                return Decoders.decode(clazz: [TerminalUpdate].self, source: source)
            }
			// Decoder for TerminalUpdate
            Decoders.addDecoder(clazz: TerminalUpdate.self) { (source: AnyObject) -> TerminalUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TerminalUpdate()
                instance.flagConsultaExtrato = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagConsultaExtrato"])
                instance.flagTerminalVirtual = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagTerminalVirtual"])
                return instance
            }
			

			// Decoder for [TipoAjusteResponse]
            Decoders.addDecoder(clazz: [TipoAjusteResponse].self) { (source: AnyObject) -> [TipoAjusteResponse] in
                return Decoders.decode(clazz: [TipoAjusteResponse].self, source: source)
            }
			// Decoder for TipoAjusteResponse
            Decoders.addDecoder(clazz: TipoAjusteResponse.self) { (source: AnyObject) -> TipoAjusteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoAjusteResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                return instance
            }
			

			// Decoder for [TipoBoletoResponse]
            Decoders.addDecoder(clazz: [TipoBoletoResponse].self) { (source: AnyObject) -> [TipoBoletoResponse] in
                return Decoders.decode(clazz: [TipoBoletoResponse].self, source: source)
            }
			// Decoder for TipoBoletoResponse
            Decoders.addDecoder(clazz: TipoBoletoResponse.self) { (source: AnyObject) -> TipoBoletoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoBoletoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.banco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["banco"])
                instance.faixaNossoNumero = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["faixaNossoNumero"])
                instance.minNossoNumero = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["minNossoNumero"])
                instance.maxNossoNumero = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["maxNossoNumero"])
                instance.tamNossoNumero = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["tamNossoNumero"])
                instance.ultimoNossoNumero = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["ultimoNossoNumero"])
                return instance
            }
			

			// Decoder for [TipoCampanhaResponse]
            Decoders.addDecoder(clazz: [TipoCampanhaResponse].self) { (source: AnyObject) -> [TipoCampanhaResponse] in
                return Decoders.decode(clazz: [TipoCampanhaResponse].self, source: source)
            }
			// Decoder for TipoCampanhaResponse
            Decoders.addDecoder(clazz: TipoCampanhaResponse.self) { (source: AnyObject) -> TipoCampanhaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoCampanhaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                return instance
            }
			

			// Decoder for [TipoDebitoRecorrenteResponse]
            Decoders.addDecoder(clazz: [TipoDebitoRecorrenteResponse].self) { (source: AnyObject) -> [TipoDebitoRecorrenteResponse] in
                return Decoders.decode(clazz: [TipoDebitoRecorrenteResponse].self, source: source)
            }
			// Decoder for TipoDebitoRecorrenteResponse
            Decoders.addDecoder(clazz: TipoDebitoRecorrenteResponse.self) { (source: AnyObject) -> TipoDebitoRecorrenteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoDebitoRecorrenteResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [TipoEnderecoResponse]
            Decoders.addDecoder(clazz: [TipoEnderecoResponse].self) { (source: AnyObject) -> [TipoEnderecoResponse] in
                return Decoders.decode(clazz: [TipoEnderecoResponse].self, source: source)
            }
			// Decoder for TipoEnderecoResponse
            Decoders.addDecoder(clazz: TipoEnderecoResponse.self) { (source: AnyObject) -> TipoEnderecoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoEnderecoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [TipoFaturamentoPersist]
            Decoders.addDecoder(clazz: [TipoFaturamentoPersist].self) { (source: AnyObject) -> [TipoFaturamentoPersist] in
                return Decoders.decode(clazz: [TipoFaturamentoPersist].self, source: source)
            }
			// Decoder for TipoFaturamentoPersist
            Decoders.addDecoder(clazz: TipoFaturamentoPersist.self) { (source: AnyObject) -> TipoFaturamentoPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoFaturamentoPersist()
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagApenasDemonstrativo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagApenasDemonstrativo"])
                instance.idConvenio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConvenio"])
                return instance
            }
			

			// Decoder for [TipoFaturamentoPorContaPersist]
            Decoders.addDecoder(clazz: [TipoFaturamentoPorContaPersist].self) { (source: AnyObject) -> [TipoFaturamentoPorContaPersist] in
                return Decoders.decode(clazz: [TipoFaturamentoPorContaPersist].self, source: source)
            }
			// Decoder for TipoFaturamentoPorContaPersist
            Decoders.addDecoder(clazz: TipoFaturamentoPorContaPersist.self) { (source: AnyObject) -> TipoFaturamentoPorContaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoFaturamentoPorContaPersist()
                instance.status = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["status"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idTipoFaturamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoFaturamento"])
                instance.dataHoraInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraInclusao"])
                instance.dataHoraCancelamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraCancelamento"])
                instance.modificadoPor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["modificadoPor"])
                return instance
            }
			

			// Decoder for [TipoFaturamentoPorContaResponse]
            Decoders.addDecoder(clazz: [TipoFaturamentoPorContaResponse].self) { (source: AnyObject) -> [TipoFaturamentoPorContaResponse] in
                return Decoders.decode(clazz: [TipoFaturamentoPorContaResponse].self, source: source)
            }
			// Decoder for TipoFaturamentoPorContaResponse
            Decoders.addDecoder(clazz: TipoFaturamentoPorContaResponse.self) { (source: AnyObject) -> TipoFaturamentoPorContaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoFaturamentoPorContaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.status = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["status"])
                instance.idTipoFaturamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoFaturamento"])
                instance.dataHoraInclusao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraInclusao"])
                instance.dataHoraCancelamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraCancelamento"])
                instance.modificadoPor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["modificadoPor"])
                return instance
            }
			

			// Decoder for [TipoFaturamentoResponse]
            Decoders.addDecoder(clazz: [TipoFaturamentoResponse].self) { (source: AnyObject) -> [TipoFaturamentoResponse] in
                return Decoders.decode(clazz: [TipoFaturamentoResponse].self, source: source)
            }
			// Decoder for TipoFaturamentoResponse
            Decoders.addDecoder(clazz: TipoFaturamentoResponse.self) { (source: AnyObject) -> TipoFaturamentoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoFaturamentoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagApenasDemonstrativo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagApenasDemonstrativo"])
                instance.idConvenio = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConvenio"])
                return instance
            }
			

			// Decoder for [TipoOperacaoResponse]
            Decoders.addDecoder(clazz: [TipoOperacaoResponse].self) { (source: AnyObject) -> [TipoOperacaoResponse] in
                return Decoders.decode(clazz: [TipoOperacaoResponse].self, source: source)
            }
			// Decoder for TipoOperacaoResponse
            Decoders.addDecoder(clazz: TipoOperacaoResponse.self) { (source: AnyObject) -> TipoOperacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoOperacaoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.tipoOperacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoOperacao"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.excedentePermitido = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["excedentePermitido"])
                instance.tipoExcedentePermitido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoExcedentePermitido"])
                instance.valorMinimo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorMinimo"])
                instance.valorMaximo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorMaximo"])
                instance.valorTAC = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTAC"])
                instance.flagTiraTac = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagTiraTac"])
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.tarifa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["tarifa"])
                instance.remuneracaoEmissor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["remuneracaoEmissor"])
                instance.planoMaximo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoMaximo"])
                instance.planoMinimo = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoMinimo"])
                return instance
            }
			

			// Decoder for [TipoOportunidade]
            Decoders.addDecoder(clazz: [TipoOportunidade].self) { (source: AnyObject) -> [TipoOportunidade] in
                return Decoders.decode(clazz: [TipoOportunidade].self, source: source)
            }
			// Decoder for TipoOportunidade
            Decoders.addDecoder(clazz: TipoOportunidade.self) { (source: AnyObject) -> TipoOportunidade in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoOportunidade()
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [TipoOportunidadeAUDResponse]
            Decoders.addDecoder(clazz: [TipoOportunidadeAUDResponse].self) { (source: AnyObject) -> [TipoOportunidadeAUDResponse] in
                return Decoders.decode(clazz: [TipoOportunidadeAUDResponse].self, source: source)
            }
			// Decoder for TipoOportunidadeAUDResponse
            Decoders.addDecoder(clazz: TipoOportunidadeAUDResponse.self) { (source: AnyObject) -> TipoOportunidadeAUDResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoOportunidadeAUDResponse()
                instance.rev = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["rev"])
                instance.revType = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["revType"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [TipoOportunidadeResponse]
            Decoders.addDecoder(clazz: [TipoOportunidadeResponse].self) { (source: AnyObject) -> [TipoOportunidadeResponse] in
                return Decoders.decode(clazz: [TipoOportunidadeResponse].self, source: source)
            }
			// Decoder for TipoOportunidadeResponse
            Decoders.addDecoder(clazz: TipoOportunidadeResponse.self) { (source: AnyObject) -> TipoOportunidadeResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoOportunidadeResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.flagAtivo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagAtivo"])
                return instance
            }
			

			// Decoder for [TipoResolucaoResponse]
            Decoders.addDecoder(clazz: [TipoResolucaoResponse].self) { (source: AnyObject) -> [TipoResolucaoResponse] in
                return Decoders.decode(clazz: [TipoResolucaoResponse].self, source: source)
            }
			// Decoder for TipoResolucaoResponse
            Decoders.addDecoder(clazz: TipoResolucaoResponse.self) { (source: AnyObject) -> TipoResolucaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoResolucaoResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                return instance
            }
			

			// Decoder for [TipoTelefoneResponse]
            Decoders.addDecoder(clazz: [TipoTelefoneResponse].self) { (source: AnyObject) -> [TipoTelefoneResponse] in
                return Decoders.decode(clazz: [TipoTelefoneResponse].self, source: source)
            }
			// Decoder for TipoTelefoneResponse
            Decoders.addDecoder(clazz: TipoTelefoneResponse.self) { (source: AnyObject) -> TipoTelefoneResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoTelefoneResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                return instance
            }
			

			// Decoder for [TipoTemplateRequest]
            Decoders.addDecoder(clazz: [TipoTemplateRequest].self) { (source: AnyObject) -> [TipoTemplateRequest] in
                return Decoders.decode(clazz: [TipoTemplateRequest].self, source: source)
            }
			// Decoder for TipoTemplateRequest
            Decoders.addDecoder(clazz: TipoTemplateRequest.self) { (source: AnyObject) -> TipoTemplateRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoTemplateRequest()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.sigla = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sigla"])
                return instance
            }
			

			// Decoder for [TipoTemplateResponse]
            Decoders.addDecoder(clazz: [TipoTemplateResponse].self) { (source: AnyObject) -> [TipoTemplateResponse] in
                return Decoders.decode(clazz: [TipoTemplateResponse].self, source: source)
            }
			// Decoder for TipoTemplateResponse
            Decoders.addDecoder(clazz: TipoTemplateResponse.self) { (source: AnyObject) -> TipoTemplateResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoTemplateResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.sigla = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sigla"])
                return instance
            }
			

			// Decoder for [TipoTerminalResponse]
            Decoders.addDecoder(clazz: [TipoTerminalResponse].self) { (source: AnyObject) -> [TipoTerminalResponse] in
                return Decoders.decode(clazz: [TipoTerminalResponse].self, source: source)
            }
			// Decoder for TipoTerminalResponse
            Decoders.addDecoder(clazz: TipoTerminalResponse.self) { (source: AnyObject) -> TipoTerminalResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TipoTerminalResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.descricaoTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTerminal"])
                return instance
            }
			

			// Decoder for [TokenResponse]
            Decoders.addDecoder(clazz: [TokenResponse].self) { (source: AnyObject) -> [TokenResponse] in
                return Decoders.decode(clazz: [TokenResponse].self, source: source)
            }
			// Decoder for TokenResponse
            Decoders.addDecoder(clazz: TokenResponse.self) { (source: AnyObject) -> TokenResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TokenResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.token = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["token"])
                instance.base = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["base"])
                instance.owner = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["owner"])
                instance.status = TokenResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.criadoPor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["criadoPor"])
                instance.dataCriacao = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataCriacao"])
                instance.alteradoPor = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alteradoPor"])
                instance.dataModificacao = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dataModificacao"])
                return instance
            }
			

			// Decoder for [TransacaoCorrenteResponse]
            Decoders.addDecoder(clazz: [TransacaoCorrenteResponse].self) { (source: AnyObject) -> [TransacaoCorrenteResponse] in
                return Decoders.decode(clazz: [TransacaoCorrenteResponse].self, source: source)
            }
			// Decoder for TransacaoCorrenteResponse
            Decoders.addDecoder(clazz: TransacaoCorrenteResponse.self) { (source: AnyObject) -> TransacaoCorrenteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacaoCorrenteResponse()
                instance.ultimaParcelaLancada = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["ultimaParcelaLancada"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idTipoRegistro = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoRegistro"])
                instance.ordem = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["ordem"])
                instance.idTransacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransacao"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                instance.descricaoStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoStatus"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.valorDolar = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorDolar"])
                instance.quantidadeParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeParcelas"])
                instance.valorParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcela"])
                instance.dataEvento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataEvento"])
                instance.estabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["estabelecimento"])
                instance.flagCredito = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCredito"])
                instance.tipoEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoEstabelecimento"])
                instance.idGrupoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idGrupoMCC"])
                instance.flagSolicitouContestacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagSolicitouContestacao"])
                return instance
            }
			

			// Decoder for [TransacaoNaoProcessadaResponse]
            Decoders.addDecoder(clazz: [TransacaoNaoProcessadaResponse].self) { (source: AnyObject) -> [TransacaoNaoProcessadaResponse] in
                return Decoders.decode(clazz: [TransacaoNaoProcessadaResponse].self, source: source)
            }
			// Decoder for TransacaoNaoProcessadaResponse
            Decoders.addDecoder(clazz: TransacaoNaoProcessadaResponse.self) { (source: AnyObject) -> TransacaoNaoProcessadaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacaoNaoProcessadaResponse()
                instance.idTipoTransacaoNaoProcessada = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTransacaoNaoProcessada"])
                instance.descricaoTipoTransacaoNaoProcessada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoTipoTransacaoNaoProcessada"])
                instance.descricaoAbreviada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoAbreviada"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.cartaoMascarado = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cartaoMascarado"])
                instance.nomePortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePortador"])
                instance.dataOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataOrigem"])
                instance.dataFaturamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFaturamento"])
                instance.dataVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimento"])
                instance.modoEntradaTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["modoEntradaTransacao"])
                instance.valorTaxaEmbarque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTaxaEmbarque"])
                instance.valorEntrada = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorEntrada"])
                instance.valorBRL = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorBRL"])
                instance.valorUSD = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorUSD"])
                instance.cotacaoUSD = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cotacaoUSD"])
                instance.dataCotacaoUSD = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCotacaoUSD"])
                instance.codigoMoedaOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoedaOrigem"])
                instance.codigoMoedaDestino = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoedaDestino"])
                instance.codigoAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoAutorizacao"])
                instance.codigoReferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoReferencia"])
                instance.codigoTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoTerminal"])
                instance.codigoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoMCC"])
                instance.grupoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["grupoMCC"])
                instance.grupoDescricaoMCC = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["grupoDescricaoMCC"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                instance.nomeFantasiaEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasiaEstabelecimento"])
                instance.localidadeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["localidadeEstabelecimento"])
                instance.planoParcelamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoParcelamento"])
                instance.numeroParcela = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcela"])
                instance.detalhesTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["detalhesTransacao"])
                instance.flagCredito = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCredito"])
                instance.flagFaturado = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagFaturado"])
                instance.flagEstorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagEstorno"])
                instance.idTransacaoEstorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransacaoEstorno"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [TransacaoOnUsPorIdCartaoRequest]
            Decoders.addDecoder(clazz: [TransacaoOnUsPorIdCartaoRequest].self) { (source: AnyObject) -> [TransacaoOnUsPorIdCartaoRequest] in
                return Decoders.decode(clazz: [TransacaoOnUsPorIdCartaoRequest].self, source: source)
            }
			// Decoder for TransacaoOnUsPorIdCartaoRequest
            Decoders.addDecoder(clazz: TransacaoOnUsPorIdCartaoRequest.self) { (source: AnyObject) -> TransacaoOnUsPorIdCartaoRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacaoOnUsPorIdCartaoRequest()
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.dataHoraTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTerminal"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                return instance
            }
			

			// Decoder for [TransacaoOnUsRequest]
            Decoders.addDecoder(clazz: [TransacaoOnUsRequest].self) { (source: AnyObject) -> [TransacaoOnUsRequest] in
                return Decoders.decode(clazz: [TransacaoOnUsRequest].self, source: source)
            }
			// Decoder for TransacaoOnUsRequest
            Decoders.addDecoder(clazz: TransacaoOnUsRequest.self) { (source: AnyObject) -> TransacaoOnUsRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacaoOnUsRequest()
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.valorTransacao = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransacao"])
                instance.numeroRealCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroRealCartao"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.dataHoraTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTerminal"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                return instance
            }
			

			// Decoder for [TransacaoOnUsResponse]
            Decoders.addDecoder(clazz: [TransacaoOnUsResponse].self) { (source: AnyObject) -> [TransacaoOnUsResponse] in
                return Decoders.decode(clazz: [TransacaoOnUsResponse].self, source: source)
            }
			// Decoder for TransacaoOnUsResponse
            Decoders.addDecoder(clazz: TransacaoOnUsResponse.self) { (source: AnyObject) -> TransacaoOnUsResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacaoOnUsResponse()
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.nsuAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuAutorizacao"])
                instance.planoDeParcelamento = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["planoDeParcelamento"])
                instance.codigoAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoAutorizacao"])
                instance.numeroMascaradoCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroMascaradoCartao"])
                instance.nomePortadorCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePortadorCartao"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                return instance
            }
			

			// Decoder for [TransacaoPayQueryRequest]
            Decoders.addDecoder(clazz: [TransacaoPayQueryRequest].self) { (source: AnyObject) -> [TransacaoPayQueryRequest] in
                return Decoders.decode(clazz: [TransacaoPayQueryRequest].self, source: source)
            }
			// Decoder for TransacaoPayQueryRequest
            Decoders.addDecoder(clazz: TransacaoPayQueryRequest.self) { (source: AnyObject) -> TransacaoPayQueryRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacaoPayQueryRequest()
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.origem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["origem"])
                instance.sort = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["sort"])
                return instance
            }
			

			// Decoder for [TransacaoPayQueryResponse]
            Decoders.addDecoder(clazz: [TransacaoPayQueryResponse].self) { (source: AnyObject) -> [TransacaoPayQueryResponse] in
                return Decoders.decode(clazz: [TransacaoPayQueryResponse].self, source: source)
            }
			// Decoder for TransacaoPayQueryResponse
            Decoders.addDecoder(clazz: TransacaoPayQueryResponse.self) { (source: AnyObject) -> TransacaoPayQueryResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacaoPayQueryResponse()
                instance.codigo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigo"])
                instance.descricao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricao"])
                return instance
            }
			

			// Decoder for [TransacaoPaySecureRequest]
            Decoders.addDecoder(clazz: [TransacaoPaySecureRequest].self) { (source: AnyObject) -> [TransacaoPaySecureRequest] in
                return Decoders.decode(clazz: [TransacaoPaySecureRequest].self, source: source)
            }
			// Decoder for TransacaoPaySecureRequest
            Decoders.addDecoder(clazz: TransacaoPaySecureRequest.self) { (source: AnyObject) -> TransacaoPaySecureRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacaoPaySecureRequest()
                instance.dataHoraTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTransacao"])
                instance.numeroCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroCartao"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.nsuOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nsuOrigem"])
                instance.nomePortadorCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePortadorCartao"])
                instance.origem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["origem"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.dataValidadeCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataValidadeCartao"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.codigoSegurancaCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoSegurancaCartao"])
                instance.sort = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["sort"])
                return instance
            }
			

			// Decoder for [TransacoesCorrentesResponse]
            Decoders.addDecoder(clazz: [TransacoesCorrentesResponse].self) { (source: AnyObject) -> [TransacoesCorrentesResponse] in
                return Decoders.decode(clazz: [TransacoesCorrentesResponse].self, source: source)
            }
			// Decoder for TransacoesCorrentesResponse
            Decoders.addDecoder(clazz: TransacoesCorrentesResponse.self) { (source: AnyObject) -> TransacoesCorrentesResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransacoesCorrentesResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idTipoTransacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTipoTransacao"])
                instance.descricaoAbreviada = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["descricaoAbreviada"])
                instance.statusTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusTransacao"])
                instance.idEvento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEvento"])
                instance.tipoEvento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["tipoEvento"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.cartaoMascarado = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cartaoMascarado"])
                instance.nomePortador = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePortador"])
                instance.dataTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataTransacao"])
                instance.dataFaturamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataFaturamento"])
                instance.dataVencimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimento"])
                instance.modoEntradaTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["modoEntradaTransacao"])
                instance.valorTaxaEmbarque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTaxaEmbarque"])
                instance.valorEntrada = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorEntrada"])
                instance.valorBRL = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorBRL"])
                instance.valorUSD = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorUSD"])
                instance.cotacaoUSD = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cotacaoUSD"])
                instance.dataCotacaoUSD = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCotacaoUSD"])
                instance.codigoMoedaOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoedaOrigem"])
                instance.codigoMoedaDestino = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoMoedaDestino"])
                instance.codigoAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoAutorizacao"])
                instance.codigoReferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoReferencia"])
                instance.codigoTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoTerminal"])
                instance.codigoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoMCC"])
                instance.grupoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["grupoMCC"])
                instance.grupoDescricaoMCC = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["grupoDescricaoMCC"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.nomeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeEstabelecimento"])
                instance.nomeFantasiaEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFantasiaEstabelecimento"])
                instance.localidadeEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["localidadeEstabelecimento"])
                instance.planoParcelamento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["planoParcelamento"])
                instance.numeroParcela = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcela"])
                instance.detalhesTransacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["detalhesTransacao"])
                instance.flagCredito = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagCredito"])
                instance.flagFaturado = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagFaturado"])
                instance.flagEstorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagEstorno"])
                instance.idTransacaoEstorno = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransacaoEstorno"])
                return instance
            }
			

			// Decoder for [TransferenciaBancariaPersist]
            Decoders.addDecoder(clazz: [TransferenciaBancariaPersist].self) { (source: AnyObject) -> [TransferenciaBancariaPersist] in
                return Decoders.decode(clazz: [TransferenciaBancariaPersist].self, source: source)
            }
			// Decoder for TransferenciaBancariaPersist
            Decoders.addDecoder(clazz: TransferenciaBancariaPersist.self) { (source: AnyObject) -> TransferenciaBancariaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransferenciaBancariaPersist()
                instance.valorCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorCompra"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.documentoFavorecido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["documentoFavorecido"])
                instance.banco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["banco"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroAgencia"])
                instance.digitoAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoAgencia"])
                instance.numeroConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroConta"])
                instance.digitoConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoConta"])
                instance.flagContaPoupanca = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagContaPoupanca"])
                instance.nomeFavorecido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFavorecido"])
                return instance
            }
			

			// Decoder for [TransferenciaBancariaResponse]
            Decoders.addDecoder(clazz: [TransferenciaBancariaResponse].self) { (source: AnyObject) -> [TransferenciaBancariaResponse] in
                return Decoders.decode(clazz: [TransferenciaBancariaResponse].self, source: source)
            }
			// Decoder for TransferenciaBancariaResponse
            Decoders.addDecoder(clazz: TransferenciaBancariaResponse.self) { (source: AnyObject) -> TransferenciaBancariaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransferenciaBancariaResponse()
                instance.nsuorigem = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nsuorigem"])
                instance.idAutorizacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAutorizacao"])
                instance.idTransferencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransferencia"])
                instance.codigoAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoAutorizacao"])
                instance.dataAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAutorizacao"])
                instance.origem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["origem"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.idOperacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOperacao"])
                instance.terminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminal"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.dataCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCompra"])
                instance.valorCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorCompra"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.valorParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcela"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.dataMovimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataMovimento"])
                instance.valorContrato = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorContrato"])
                instance.taxaJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaJuros"])
                instance.valorIOF = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorIOF"])
                instance.valorTAC = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTAC"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.valorEntrada = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorEntrada"])
                instance.dataVencimentoReal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoReal"])
                instance.dataVencimentoPadrao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoPadrao"])
                instance.idContaPortador = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idContaPortador"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroEstabelecimento"])
                instance.valorTaxaSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTaxaSaque"])
                instance.banco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["banco"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroAgencia"])
                instance.digitoAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoAgencia"])
                instance.numeroConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroConta"])
                instance.digitoConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoConta"])
                instance.flagContaPoupanca = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["flagContaPoupanca"])
                instance.documentoFavorecido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["documentoFavorecido"])
                instance.nomeFavorecido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFavorecido"])
                return instance
            }
			

			// Decoder for [TransferenciaCreditoContaBancariaListaResponse]
            Decoders.addDecoder(clazz: [TransferenciaCreditoContaBancariaListaResponse].self) { (source: AnyObject) -> [TransferenciaCreditoContaBancariaListaResponse] in
                return Decoders.decode(clazz: [TransferenciaCreditoContaBancariaListaResponse].self, source: source)
            }
			// Decoder for TransferenciaCreditoContaBancariaListaResponse
            Decoders.addDecoder(clazz: TransferenciaCreditoContaBancariaListaResponse.self) { (source: AnyObject) -> TransferenciaCreditoContaBancariaListaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransferenciaCreditoContaBancariaListaResponse()
                instance.idTransferencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransferencia"])
                instance.valorCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorCompra"])
                instance.valorContrato = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorContrato"])
                instance.dataCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCompra"])
                instance.statusProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusProcessamento"])
                return instance
            }
			

			// Decoder for [TransferenciaCreditoContaBancariaPersist]
            Decoders.addDecoder(clazz: [TransferenciaCreditoContaBancariaPersist].self) { (source: AnyObject) -> [TransferenciaCreditoContaBancariaPersist] in
                return Decoders.decode(clazz: [TransferenciaCreditoContaBancariaPersist].self, source: source)
            }
			// Decoder for TransferenciaCreditoContaBancariaPersist
            Decoders.addDecoder(clazz: TransferenciaCreditoContaBancariaPersist.self) { (source: AnyObject) -> TransferenciaCreditoContaBancariaPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransferenciaCreditoContaBancariaPersist()
                instance.nsuOrigem = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nsuOrigem"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idContaBancaria = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idContaBancaria"])
                instance.valor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valor"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.numeroMesesCarencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroMesesCarencia"])
                instance.dataHoraTerminal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraTerminal"])
                instance.terminalRequisitante = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terminalRequisitante"])
                instance.numeroEstabelecimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroEstabelecimento"])
                return instance
            }
			

			// Decoder for [TransferenciaCreditoContaBancariaResponse]
            Decoders.addDecoder(clazz: [TransferenciaCreditoContaBancariaResponse].self) { (source: AnyObject) -> [TransferenciaCreditoContaBancariaResponse] in
                return Decoders.decode(clazz: [TransferenciaCreditoContaBancariaResponse].self, source: source)
            }
			// Decoder for TransferenciaCreditoContaBancariaResponse
            Decoders.addDecoder(clazz: TransferenciaCreditoContaBancariaResponse.self) { (source: AnyObject) -> TransferenciaCreditoContaBancariaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransferenciaCreditoContaBancariaResponse()
                instance.idTransferencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idTransferencia"])
                instance.valorCET = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorCET"])
                instance.idAutorizacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAutorizacao"])
                instance.codigoAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoAutorizacao"])
                instance.nsuOrigem = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["nsuOrigem"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.idCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idCartao"])
                instance.idOperacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOperacao"])
                instance.valorCompra = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorCompra"])
                instance.valorParcela = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorParcela"])
                instance.valorContrato = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorContrato"])
                instance.numeroParcelas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroParcelas"])
                instance.valorIOF = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorIOF"])
                instance.valorTAC = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTAC"])
                instance.valorTaxaSaque = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTaxaSaque"])
                instance.taxaJuros = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxaJuros"])
                instance.dataCompra = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCompra"])
                instance.dataMovimento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataMovimento"])
                instance.dataVencimentoReal = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoReal"])
                instance.dataVencimentoPadrao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataVencimentoPadrao"])
                instance.dataAutorizacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataAutorizacao"])
                instance.banco = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["banco"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroAgencia"])
                instance.digitoAgencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoAgencia"])
                instance.numeroConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroConta"])
                instance.digitoConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["digitoConta"])
                instance.flagContaPoupanca = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["flagContaPoupanca"])
                instance.documentoFavorecido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["documentoFavorecido"])
                instance.nomeFavorecido = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomeFavorecido"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.statusProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusProcessamento"])
                return instance
            }
			

			// Decoder for [TransferenciaDetalheResponse]
            Decoders.addDecoder(clazz: [TransferenciaDetalheResponse].self) { (source: AnyObject) -> [TransferenciaDetalheResponse] in
                return Decoders.decode(clazz: [TransferenciaDetalheResponse].self, source: source)
            }
			// Decoder for TransferenciaDetalheResponse
            Decoders.addDecoder(clazz: TransferenciaDetalheResponse.self) { (source: AnyObject) -> TransferenciaDetalheResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransferenciaDetalheResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.dataTransferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataTransferencia"])
                instance.idContaOrigem = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idContaOrigem"])
                instance.nomePessoaOrigem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePessoaOrigem"])
                instance.idContaDestino = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idContaDestino"])
                instance.nomePessoaDestino = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nomePessoaDestino"])
                instance.valorTransferencia = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransferencia"])
                instance.valorTarifa = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTarifa"])
                return instance
            }
			

			// Decoder for [TransferenciaResponse]
            Decoders.addDecoder(clazz: [TransferenciaResponse].self) { (source: AnyObject) -> [TransferenciaResponse] in
                return Decoders.decode(clazz: [TransferenciaResponse].self, source: source)
            }
			// Decoder for TransferenciaResponse
            Decoders.addDecoder(clazz: TransferenciaResponse.self) { (source: AnyObject) -> TransferenciaResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = TransferenciaResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.dataTransferencia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataTransferencia"])
                instance.idContaOrigem = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idContaOrigem"])
                instance.idContaDestino = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idContaDestino"])
                instance.valorTransferencia = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["valorTransferencia"])
                return instance
            }
			

			// Decoder for [UsuarioPersist]
            Decoders.addDecoder(clazz: [UsuarioPersist].self) { (source: AnyObject) -> [UsuarioPersist] in
                return Decoders.decode(clazz: [UsuarioPersist].self, source: source)
            }
			// Decoder for UsuarioPersist
            Decoders.addDecoder(clazz: UsuarioPersist.self) { (source: AnyObject) -> UsuarioPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = UsuarioPersist()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.login = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["login"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.senha = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["senha"])
                return instance
            }
			

			// Decoder for [UsuarioResponse]
            Decoders.addDecoder(clazz: [UsuarioResponse].self) { (source: AnyObject) -> [UsuarioResponse] in
                return Decoders.decode(clazz: [UsuarioResponse].self, source: source)
            }
			// Decoder for UsuarioResponse
            Decoders.addDecoder(clazz: UsuarioResponse.self) { (source: AnyObject) -> UsuarioResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = UsuarioResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.login = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["login"])
                instance.idEmissor = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEmissor"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.status = UsuarioResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                instance.dataCriacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataCriacao"])
                instance.dataModificacao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataModificacao"])
                instance.tentativasIncorretas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["tentativasIncorretas"])
                return instance
            }
			

			// Decoder for [UsuarioUpdate]
            Decoders.addDecoder(clazz: [UsuarioUpdate].self) { (source: AnyObject) -> [UsuarioUpdate] in
                return Decoders.decode(clazz: [UsuarioUpdate].self, source: source)
            }
			// Decoder for UsuarioUpdate
            Decoders.addDecoder(clazz: UsuarioUpdate.self) { (source: AnyObject) -> UsuarioUpdate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = UsuarioUpdate()
                instance.nome = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nome"])
                instance.login = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["login"])
                instance.cpf = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cpf"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [ValidaCVVRequest]
            Decoders.addDecoder(clazz: [ValidaCVVRequest].self) { (source: AnyObject) -> [ValidaCVVRequest] in
                return Decoders.decode(clazz: [ValidaCVVRequest].self, source: source)
            }
			// Decoder for ValidaCVVRequest
            Decoders.addDecoder(clazz: ValidaCVVRequest.self) { (source: AnyObject) -> ValidaCVVRequest in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ValidaCVVRequest()
                instance.idChaveCriptografia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idChaveCriptografia"])
                instance.cvv = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cvv"])
                return instance
            }
			

			// Decoder for [ValidaCartaoResponse]
            Decoders.addDecoder(clazz: [ValidaCartaoResponse].self) { (source: AnyObject) -> [ValidaCartaoResponse] in
                return Decoders.decode(clazz: [ValidaCartaoResponse].self, source: source)
            }
			// Decoder for ValidaCartaoResponse
            Decoders.addDecoder(clazz: ValidaCartaoResponse.self) { (source: AnyObject) -> ValidaCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ValidaCartaoResponse()
                instance.idStatusCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusCartao"])
                instance.statusCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusCartao"])
                instance.idStatusConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusConta"])
                instance.statusConta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusConta"])
                instance.idConta = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idConta"])
                instance.numeroAgencia = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["numeroAgencia"])
                instance.numeroContaCorrente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["numeroContaCorrente"])
                instance.criptogramaResposta = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["criptogramaResposta"])
                return instance
            }
			

			// Decoder for [ValidaSenhaCartaoResponse]
            Decoders.addDecoder(clazz: [ValidaSenhaCartaoResponse].self) { (source: AnyObject) -> [ValidaSenhaCartaoResponse] in
                return Decoders.decode(clazz: [ValidaSenhaCartaoResponse].self, source: source)
            }
			// Decoder for ValidaSenhaCartaoResponse
            Decoders.addDecoder(clazz: ValidaSenhaCartaoResponse.self) { (source: AnyObject) -> ValidaSenhaCartaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ValidaSenhaCartaoResponse()
                instance.mensagem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mensagem"])
                instance.idStatusCartao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idStatusCartao"])
                instance.statusCartao = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusCartao"])
                instance.quantidadeTentativas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeTentativas"])
                instance.quantidadeMaximaTentativas = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["quantidadeMaximaTentativas"])
                return instance
            }
			

			// Decoder for [VinculoEstabelecimentoAdquirentePersist]
            Decoders.addDecoder(clazz: [VinculoEstabelecimentoAdquirentePersist].self) { (source: AnyObject) -> [VinculoEstabelecimentoAdquirentePersist] in
                return Decoders.decode(clazz: [VinculoEstabelecimentoAdquirentePersist].self, source: source)
            }
			// Decoder for VinculoEstabelecimentoAdquirentePersist
            Decoders.addDecoder(clazz: VinculoEstabelecimentoAdquirentePersist.self) { (source: AnyObject) -> VinculoEstabelecimentoAdquirentePersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = VinculoEstabelecimentoAdquirentePersist()
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.idAdquirente = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAdquirente"])
                instance.codigoEstabelecimentoAdquirente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoEstabelecimentoAdquirente"])
                return instance
            }
			

			// Decoder for [VinculoEstabelecimentoAdquirenteResponse]
            Decoders.addDecoder(clazz: [VinculoEstabelecimentoAdquirenteResponse].self) { (source: AnyObject) -> [VinculoEstabelecimentoAdquirenteResponse] in
                return Decoders.decode(clazz: [VinculoEstabelecimentoAdquirenteResponse].self, source: source)
            }
			// Decoder for VinculoEstabelecimentoAdquirenteResponse
            Decoders.addDecoder(clazz: VinculoEstabelecimentoAdquirenteResponse.self) { (source: AnyObject) -> VinculoEstabelecimentoAdquirenteResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = VinculoEstabelecimentoAdquirenteResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.idEstabelecimento = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idEstabelecimento"])
                instance.idAdquirente = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idAdquirente"])
                instance.codigoEstabelecimentoAdquirente = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoEstabelecimentoAdquirente"])
                instance.dataHoraCadastro = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["dataHoraCadastro"])
                instance.mensagem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mensagem"])
                instance.status = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["status"])
                return instance
            }
			

			// Decoder for [VinculoOperacaoPersist]
            Decoders.addDecoder(clazz: [VinculoOperacaoPersist].self) { (source: AnyObject) -> [VinculoOperacaoPersist] in
                return Decoders.decode(clazz: [VinculoOperacaoPersist].self, source: source)
            }
			// Decoder for VinculoOperacaoPersist
            Decoders.addDecoder(clazz: VinculoOperacaoPersist.self) { (source: AnyObject) -> VinculoOperacaoPersist in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = VinculoOperacaoPersist()
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idOperacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOperacao"])
                instance.codigoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoMCC"])
                return instance
            }
			

			// Decoder for [VinculoOperacaoResponse]
            Decoders.addDecoder(clazz: [VinculoOperacaoResponse].self) { (source: AnyObject) -> [VinculoOperacaoResponse] in
                return Decoders.decode(clazz: [VinculoOperacaoResponse].self, source: source)
            }
			// Decoder for VinculoOperacaoResponse
            Decoders.addDecoder(clazz: VinculoOperacaoResponse.self) { (source: AnyObject) -> VinculoOperacaoResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = VinculoOperacaoResponse()
                instance.idProduto = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idProduto"])
                instance.idOperacao = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["idOperacao"])
                instance.codigoProcessamento = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["codigoProcessamento"])
                instance.codigoMCC = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["codigoMCC"])
                return instance
            }
			

			// Decoder for [WebHook]
            Decoders.addDecoder(clazz: [WebHook].self) { (source: AnyObject) -> [WebHook] in
                return Decoders.decode(clazz: [WebHook].self, source: source)
            }
			// Decoder for WebHook
            Decoders.addDecoder(clazz: WebHook.self) { (source: AnyObject) -> WebHook in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = WebHook()
                instance.tipoEvento = WebHook.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                instance.url = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["url"])
                return instance
            }
			

			// Decoder for [WebHookResponse]
            Decoders.addDecoder(clazz: [WebHookResponse].self) { (source: AnyObject) -> [WebHookResponse] in
                return Decoders.decode(clazz: [WebHookResponse].self, source: source)
            }
			// Decoder for WebHookResponse
            Decoders.addDecoder(clazz: WebHookResponse.self) { (source: AnyObject) -> WebHookResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = WebHookResponse()
                instance.id = Decoders.decodeOptional(clazz: Int.self, source: sourceDictionary["id"])
                instance.tipoEvento = WebHookResponse.TipoEvento(rawValue: (sourceDictionary["tipoEvento"] as? String) ?? "") 
                instance.metodo = WebHookResponse.Metodo(rawValue: (sourceDictionary["metodo"] as? String) ?? "") 
                instance.url = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["url"])
                instance.status = WebHookResponse.Status(rawValue: (sourceDictionary["status"] as? String) ?? "") 
                return instance
            }
			
        }
    }
}
